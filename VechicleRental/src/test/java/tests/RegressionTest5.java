import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest5 {

    public static boolean debug = false;

    public void assertBooleanArrayEquals(boolean[] expectedArray, boolean[] actualArray) {
        if (expectedArray.length != actualArray.length) {
            throw new AssertionError("Array lengths differ: " + expectedArray.length + " != " + actualArray.length);
        }
        for (int i = 0; i < expectedArray.length; i++) {
            if (expectedArray[i] != actualArray[i]) {
                throw new AssertionError("Arrays differ at index " + i + ": " + expectedArray[i] + " != " + actualArray[i]);
            }
        }
    }

    @Test
    public void test2501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2501");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.rentVehicle("", "No vehicles match the keyword \"Vehicle with ID hi! not found.\".", (int) (byte) 100);
        java.lang.String str10 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.");
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.\". not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".\".", (double) 1);
        java.lang.String str17 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found. not found. not found.\".\". not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID  not found." + "'", str8, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found." + "'", str10, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found. not found. not found.\".\". not found. not found." + "'", str17, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found. not found. not found.\".\". not found. not found.");
    }

    @Test
    public void test2502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2502");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.lang.String str5 = rentalSystem0.returnVehicle("Vehicle with ID  not found.");
        java.lang.String str7 = rentalSystem0.searchVehicle("Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.");
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\". not found. not found. not found.\".");
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\". not found.\".\".", "ID: Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found., Model: Vehicle with ID Vehicle with ID hi! not found. not found., Type: No vehicles match the keyword \"hi!\"., Daily Rate: $1.0, Status: Available\nID: Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.\". not found., Model: No vehicles match the keyword \"\"., Type: No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found.\"., Daily Rate: $100.0, Status: Available\n");
        java.util.List<org.example.Vehicle> vehicleList14 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList15 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\". not found. not found.", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\".\". not found.\".");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID Vehicle with ID  not found. not found." + "'", str5, "Vehicle with ID Vehicle with ID  not found. not found.");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\"." + "'", str7, "No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".");
        org.junit.Assert.assertNotNull(vehicleList14);
        org.junit.Assert.assertNotNull(vehicleList15);
    }

    @Test
    public void test2503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2503");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID  not found. not found.", "No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        java.lang.String str8 = rentalSystem0.rentVehicle("hi!", "No vehicles match the keyword \"Vehicle with ID  not found.\".", 100);
        java.lang.String str10 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID hi! not found. not found.");
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found. not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.", (double) ' ');
        java.util.List<org.example.Vehicle> vehicleList16 = rentalSystem0.getVehicles();
        java.lang.String str18 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\". not found.\".");
        java.lang.String str20 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found. not found. not found. not found.");
        java.lang.String str24 = rentalSystem0.rentVehicle("", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found.\". not found.", (int) (byte) -1);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID hi! not found." + "'", str8, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found." + "'", str10, "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\". not found.\". not found." + "'", str18, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\". not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found. not found. not found. not found.\"." + "'", str20, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found. not found. not found. not found.\".");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Vehicle with ID  not found." + "'", str24, "Vehicle with ID  not found.");
    }

    @Test
    public void test2504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2504");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.searchVehicle("Vehicle with ID  not found.");
        rentalSystem0.addVehicle("hi!", "Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID hi! not found.", (double) 0);
        java.lang.String str15 = rentalSystem0.returnVehicle("Vehicle with ID  not found.");
        int int16 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str20 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\".", 100);
        java.util.List<org.example.Vehicle> vehicleList21 = rentalSystem0.getVehicles();
        java.lang.String str23 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\".\". not found.");
        java.util.List<org.example.Customer> customerList24 = rentalSystem0.getCustomers();
        int int25 = rentalSystem0.getAvailableVehicleCount();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "No vehicles match the keyword \"Vehicle with ID  not found.\"." + "'", str8, "No vehicles match the keyword \"Vehicle with ID  not found.\".");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Vehicle with ID Vehicle with ID  not found. not found." + "'", str15, "Vehicle with ID Vehicle with ID  not found. not found.");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found." + "'", str20, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\".\". not found.\"." + "'", str23, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\".\". not found.\".");
        org.junit.Assert.assertNotNull(customerList24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
    }

    @Test
    public void test2505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2505");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID  not found. not found.", "No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        java.lang.String str8 = rentalSystem0.rentVehicle("hi!", "No vehicles match the keyword \"Vehicle with ID  not found.\".", 100);
        java.util.List<org.example.Customer> customerList9 = rentalSystem0.getCustomers();
        java.lang.String str13 = rentalSystem0.rentVehicle("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found. not found. not found.\".\".\".", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found.\".\". not found.\".", (int) (short) 1);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID hi! not found." + "'", str8, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertNotNull(customerList9);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found. not found. not found.\".\".\". not found." + "'", str13, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found. not found. not found.\".\".\". not found.");
    }

    @Test
    public void test2506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2506");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        int int7 = rentalSystem0.getAvailableVehicleCount();
        int int8 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\".", "hi!");
        java.lang.String str13 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.");
        java.lang.String str15 = rentalSystem0.returnVehicle("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\".\".");
        java.util.List<org.example.Vehicle> vehicleList16 = rentalSystem0.getVehicles();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found." + "'", str13, "Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\".\". not found." + "'", str15, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\".\". not found.");
        org.junit.Assert.assertNotNull(vehicleList16);
    }

    @Test
    public void test2507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2507");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList4 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID  not found. not found.", "hi!");
        java.lang.String str11 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID hi! not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".", (int) '4');
        java.lang.String str13 = rentalSystem0.returnVehicle("");
        rentalSystem0.addVehicle("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\".\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\".", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID  not found.\".\".", 1.0d);
        java.lang.String str20 = rentalSystem0.returnVehicle("Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.");
        java.util.List<org.example.Customer> customerList21 = rentalSystem0.getCustomers();
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found. not found.\".", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found.", (double) '#');
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(vehicleList4);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found." + "'", str11, "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID  not found." + "'", str13, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found." + "'", str20, "Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.");
        org.junit.Assert.assertNotNull(customerList21);
    }

    @Test
    public void test2508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2508");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        rentalSystem0.addCustomer("hi!", "Vehicle with ID Vehicle with ID  not found. not found.");
        java.util.List<org.example.Vehicle> vehicleList9 = rentalSystem0.getVehicles();
        java.lang.String str13 = rentalSystem0.rentVehicle("hi!", "No vehicles match the keyword \"Vehicle with ID  not found.\".", (int) '4');
        java.util.List<org.example.Customer> customerList14 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList15 = rentalSystem0.getVehicles();
        int int16 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.", (double) 100L);
        rentalSystem0.addCustomer("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.", "Vehicle with ID No vehicles match the keyword \"hi!\". not found.");
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found. not found. not found.\".\". not found. not found.", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\". not found. not found. not found.");
        java.lang.Class<?> wildcardClass28 = rentalSystem0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList9);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID hi! not found." + "'", str13, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertNotNull(customerList14);
        org.junit.Assert.assertNotNull(vehicleList15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test2509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2509");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID  not found.\".", "hi!");
        int int10 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str12 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID  not found. not found.");
        java.lang.String str14 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.");
        java.util.List<org.example.Customer> customerList15 = rentalSystem0.getCustomers();
        java.lang.String str17 = rentalSystem0.searchVehicle("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\".\".");
        int int18 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList19 = rentalSystem0.getCustomers();
        java.lang.String str21 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\". not found.\". not found. not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str12, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\"." + "'", str14, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".");
        org.junit.Assert.assertNotNull(customerList15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\".\".\"." + "'", str17, "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\".\".\".");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(customerList19);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\". not found.\". not found. not found.\". not found.\"." + "'", str21, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\". not found.\". not found. not found.\". not found.\".");
    }

    @Test
    public void test2510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2510");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.searchVehicle("No vehicles match the keyword \"hi!\".");
        java.lang.String str10 = rentalSystem0.returnVehicle("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".\".");
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\". not found. not found. not found.\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\".\".\". not found. not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\". not found.\". not found.", (double) 1);
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\".\".\".\".", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\".\".\".\".");
        java.lang.Class<?> wildcardClass19 = rentalSystem0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\"." + "'", str8, "No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".\". not found." + "'", str10, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".\". not found.");
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test2511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2511");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID  not found.\".", "hi!");
        java.lang.String str13 = rentalSystem0.rentVehicle("hi!", "Vehicle with ID hi! not found.", 0);
        java.lang.String str17 = rentalSystem0.rentVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\". not found.", "hi!", (int) 'a');
        java.lang.String str19 = rentalSystem0.searchVehicle("");
        rentalSystem0.addVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found. not found. not found.\".\".", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\".\".\".", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found. not found. not found.", (double) 10);
        java.lang.String str26 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found. not found. not found. not found.");
        java.lang.String str30 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found. not found. not found.", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\". not found.\".", 1);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID hi! not found." + "'", str13, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\". not found. not found." + "'", str17, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\". not found. not found.");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "No vehicles match the keyword \"\"." + "'", str19, "No vehicles match the keyword \"\".");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found. not found. not found. not found. not found." + "'", str26, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found. not found. not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found. not found. not found. not found." + "'", str30, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found. not found. not found. not found.");
    }

    @Test
    public void test2512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2512");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.lang.String str10 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found.", (int) (short) -1);
        java.lang.String str14 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\". not found. not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\".", 100);
        java.lang.String str16 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\".\". not found. not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found." + "'", str10, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\". not found. not found. not found." + "'", str14, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\". not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\".\". not found. not found. not found. not found." + "'", str16, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\".\". not found. not found. not found. not found.");
    }

    @Test
    public void test2513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2513");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.searchVehicle("Vehicle with ID  not found.");
        rentalSystem0.addVehicle("hi!", "Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID hi! not found.", (double) 0);
        java.util.List<org.example.Customer> customerList14 = rentalSystem0.getCustomers();
        java.lang.String str18 = rentalSystem0.rentVehicle("Vehicle with ID No vehicles match the keyword \"hi!\". not found.", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found. not found.", (int) (short) -1);
        java.util.List<org.example.Vehicle> vehicleList19 = rentalSystem0.getVehicles();
        java.lang.String str21 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found. not found.\".");
        int int22 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList23 = rentalSystem0.getCustomers();
        java.lang.String str25 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\". not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "No vehicles match the keyword \"Vehicle with ID  not found.\"." + "'", str8, "No vehicles match the keyword \"Vehicle with ID  not found.\".");
        org.junit.Assert.assertNotNull(customerList14);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found." + "'", str18, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList19);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found. not found.\". not found." + "'", str21, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found. not found.\". not found.");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNotNull(customerList23);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\". not found. not found.\"." + "'", str25, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\". not found. not found.\".");
    }

    @Test
    public void test2514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2514");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.lang.String str9 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.", (int) (byte) 1);
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID  not found. not found.", "No vehicles match the keyword \"\".", "Vehicle with ID  not found.", (double) 1L);
        java.lang.String str16 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\". not found.");
        java.lang.String str18 = rentalSystem0.searchVehicle("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\".\".");
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found. not found.\".\". not found.", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\".\".\".\".", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\". not found.", (double) (short) 10);
        java.util.List<org.example.Vehicle> vehicleList24 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList25 = rentalSystem0.getVehicles();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found." + "'", str9, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\". not found.\"." + "'", str16, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\". not found.\".");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\".\".\"." + "'", str18, "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\".\".\".");
        org.junit.Assert.assertNotNull(vehicleList24);
        org.junit.Assert.assertNotNull(vehicleList25);
    }

    @Test
    public void test2515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2515");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        int int7 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addCustomer("hi!", "Vehicle with ID Vehicle with ID  not found. not found.");
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\". not found. not found. not found.\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n\".\".\". not found. not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found.", (double) 0);
        java.util.List<org.example.Customer> customerList16 = rentalSystem0.getCustomers();
        java.lang.String str20 = rentalSystem0.rentVehicle("", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\". not found. not found. not found.\". not found.", (int) ' ');
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(customerList16);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Vehicle with ID  not found." + "'", str20, "Vehicle with ID  not found.");
    }

    @Test
    public void test2516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2516");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        int int7 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str9 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".");
        java.lang.String str11 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\". not found.");
        java.lang.String str13 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found. not found.\". not found.");
        int int14 = rentalSystem0.getAvailableVehicleCount();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\". not found." + "'", str9, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\". not found.\"." + "'", str11, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\". not found.\".");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found. not found.\". not found. not found." + "'", str13, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found. not found.\". not found. not found.");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
    }

    @Test
    public void test2517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2517");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList7 = rentalSystem0.getVehicles();
        java.lang.String str11 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID hi! not found.\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.", (int) (byte) 100);
        java.lang.String str13 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".");
        java.lang.String str17 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".", (int) (byte) -1);
        java.util.List<org.example.Vehicle> vehicleList18 = rentalSystem0.getVehicles();
        rentalSystem0.addVehicle("ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\".\".\".", "No vehicles match the keyword \"No vehicles match the keyword \"\".\".", (double) 0L);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertNotNull(vehicleList7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found." + "'", str11, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\"." + "'", str13, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\".");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found." + "'", str17, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList18);
    }

    @Test
    public void test2518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2518");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("");
        rentalSystem0.addVehicle("Vehicle with ID  not found.", "Vehicle with ID hi! not found.", "Vehicle with ID Vehicle with ID hi! not found. not found.", (double) '4');
        java.util.List<org.example.Customer> customerList9 = rentalSystem0.getCustomers();
        java.lang.String str11 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\". not found.");
        int int12 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str14 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found. not found.\".\". not found.\".");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID  not found." + "'", str3, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList9);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\". not found.\"." + "'", str11, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\". not found.\".");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found. not found.\".\". not found.\".\"." + "'", str14, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found. not found.\".\". not found.\".\".");
    }

    @Test
    public void test2519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2519");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList4 = rentalSystem0.getVehicles();
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.", "ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.", (double) (byte) 100);
        java.lang.String str13 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".", "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.", (int) 'a');
        java.util.List<org.example.Vehicle> vehicleList14 = rentalSystem0.getVehicles();
        java.lang.String str16 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\". not found. not found. not found.");
        java.lang.Class<?> wildcardClass17 = rentalSystem0.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(vehicleList4);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found." + "'", str13, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\". not found. not found. not found.\"." + "'", str16, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\". not found. not found. not found.\".");
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test2520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2520");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        int int2 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        int int4 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList5 = rentalSystem0.getCustomers();
        java.lang.String str7 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.");
        java.lang.String str9 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found. not found.\". not found.");
        java.lang.Class<?> wildcardClass10 = rentalSystem0.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(customerList5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found. not found." + "'", str7, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found. not found.");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found. not found.\". not found.\"." + "'", str9, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found. not found.\". not found.\".");
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test2521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2521");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.searchVehicle("Vehicle with ID  not found.");
        java.lang.String str10 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".");
        java.util.List<org.example.Customer> customerList11 = rentalSystem0.getCustomers();
        java.lang.String str13 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found. not found. not found. not found.");
        java.lang.String str17 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\". not found.\". not found.\".\". not found. not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\".\".", (int) (byte) 0);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "No vehicles match the keyword \"Vehicle with ID  not found.\"." + "'", str8, "No vehicles match the keyword \"Vehicle with ID  not found.\".");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\"." + "'", str10, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\".");
        org.junit.Assert.assertNotNull(customerList11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found. not found. not found. not found. not found." + "'", str13, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found. not found. not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\". not found.\". not found.\".\". not found. not found. not found." + "'", str17, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\". not found.\". not found.\".\". not found. not found. not found.");
    }

    @Test
    public void test2522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2522");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID  not found. not found.", "No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        java.lang.String str8 = rentalSystem0.rentVehicle("hi!", "No vehicles match the keyword \"Vehicle with ID  not found.\".", 100);
        java.lang.String str10 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID hi! not found. not found.");
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found. not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.", (double) ' ');
        java.lang.String str19 = rentalSystem0.rentVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.\". not found.\".\".", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\". not found. not found. not found. not found.", (int) (byte) -1);
        java.lang.String str21 = rentalSystem0.searchVehicle("");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID hi! not found." + "'", str8, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found." + "'", str10, "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.\". not found.\".\". not found." + "'", str19, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.\". not found.\".\". not found.");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "ID: Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found. not found., Model: No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\"., Type: Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found., Daily Rate: $32.0, Status: Available\n" + "'", str21, "ID: Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found. not found., Model: No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\"., Type: Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found., Daily Rate: $32.0, Status: Available\n");
    }

    @Test
    public void test2523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2523");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.searchVehicle("Vehicle with ID  not found.");
        int int9 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\". not found.\".", "No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        java.lang.String str14 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\". not found.");
        java.util.List<org.example.Customer> customerList15 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList16 = rentalSystem0.getCustomers();
        int int17 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found. not found. not found.", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.\". not found. not found. not found. not found.");
        java.util.List<org.example.Customer> customerList21 = rentalSystem0.getCustomers();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "No vehicles match the keyword \"Vehicle with ID  not found.\"." + "'", str8, "No vehicles match the keyword \"Vehicle with ID  not found.\".");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\". not found.\"." + "'", str14, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\". not found.\".");
        org.junit.Assert.assertNotNull(customerList15);
        org.junit.Assert.assertNotNull(customerList16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(customerList21);
    }

    @Test
    public void test2524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2524");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("");
        java.util.List<org.example.Vehicle> vehicleList4 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.rentVehicle("", "Vehicle with ID hi! not found.", (int) (short) 100);
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.", "No vehicles match the keyword \"Vehicle with ID  not found.\".", "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.", (double) 10);
        int int14 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str18 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found.", (int) (byte) -1);
        java.lang.String str20 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.\". not found. not found. not found. not found.");
        java.util.List<org.example.Customer> customerList21 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList22 = rentalSystem0.getCustomers();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID  not found." + "'", str3, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID  not found." + "'", str8, "Vehicle with ID  not found.");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found. not found." + "'", str18, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.\". not found. not found. not found. not found. not found." + "'", str20, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.\". not found. not found. not found. not found. not found.");
        org.junit.Assert.assertNotNull(customerList21);
        org.junit.Assert.assertNotNull(customerList22);
    }

    @Test
    public void test2525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2525");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList4 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID  not found. not found.", "hi!");
        int int8 = rentalSystem0.getAvailableVehicleCount();
        int int9 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str13 = rentalSystem0.rentVehicle("No vehicles match the keyword \"hi!\".", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found. not found.\".\".", 0);
        int int14 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str16 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle is already available. not found. not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(vehicleList4);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID No vehicles match the keyword \"hi!\". not found." + "'", str13, "Vehicle with ID No vehicles match the keyword \"hi!\". not found.");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle is already available. not found. not found.\". not found.\"." + "'", str16, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle is already available. not found. not found.\". not found.\".");
    }

    @Test
    public void test2526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2526");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.returnVehicle("Vehicle with ID  not found.");
        java.lang.String str12 = rentalSystem0.rentVehicle("Vehicle with ID hi! not found.", "Vehicle with ID Vehicle with ID  not found. not found.", (int) (byte) 10);
        java.lang.String str14 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        java.util.List<org.example.Vehicle> vehicleList15 = rentalSystem0.getVehicles();
        java.lang.String str19 = rentalSystem0.rentVehicle("", "Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.", (int) (byte) 100);
        java.lang.String str21 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.");
        java.util.List<org.example.Vehicle> vehicleList22 = rentalSystem0.getVehicles();
        java.lang.String str24 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\". not found. not found.");
        java.lang.String str28 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\". not found. not found. not found.", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\".\". not found.", 2);
        java.util.List<org.example.Vehicle> vehicleList29 = rentalSystem0.getVehicles();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID  not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID  not found. not found.");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID Vehicle with ID hi! not found. not found." + "'", str12, "Vehicle with ID Vehicle with ID hi! not found. not found.");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found." + "'", str14, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList15);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Vehicle with ID  not found." + "'", str19, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.\"." + "'", str21, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.\".");
        org.junit.Assert.assertNotNull(vehicleList22);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\". not found. not found. not found." + "'", str24, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\". not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\". not found. not found. not found. not found." + "'", str28, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\". not found. not found. not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList29);
    }

    @Test
    public void test2527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2527");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.lang.String str9 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.", (int) (byte) 1);
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID  not found. not found.", "No vehicles match the keyword \"\".", "Vehicle with ID  not found.", (double) 1L);
        java.lang.String str16 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\". not found.");
        java.lang.String str18 = rentalSystem0.returnVehicle("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\".");
        rentalSystem0.addVehicle("hi!", "No vehicles match the keyword \"ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n\".", "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.", (double) 3);
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\".");
        java.lang.String str30 = rentalSystem0.rentVehicle("", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found.\". not found.\". not found. not found. not found.", (int) (short) 0);
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\".\". not found. not found.\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\". not found.\". not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found." + "'", str9, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\". not found.\"." + "'", str16, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\". not found.\".");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\". not found." + "'", str18, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\". not found.");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Vehicle with ID  not found." + "'", str30, "Vehicle with ID  not found.");
    }

    @Test
    public void test2528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2528");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        int int7 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\".\".", "Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.", "ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n", 1.0d);
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.\". not found. not found.", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found. not found. not found.\".\".", 0.0d);
        rentalSystem0.addVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found. not found. not found.\".\".", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\". not found. not found. not found. not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found.", (double) 2);
        java.util.List<org.example.Customer> customerList23 = rentalSystem0.getCustomers();
        int int24 = rentalSystem0.getAvailableVehicleCount();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(customerList23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 3 + "'", int24 == 3);
    }

    @Test
    public void test2529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2529");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        rentalSystem0.addCustomer("hi!", "Vehicle with ID Vehicle with ID  not found. not found.");
        java.util.List<org.example.Vehicle> vehicleList9 = rentalSystem0.getVehicles();
        java.lang.String str13 = rentalSystem0.rentVehicle("hi!", "No vehicles match the keyword \"Vehicle with ID  not found.\".", (int) '4');
        java.util.List<org.example.Customer> customerList14 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList15 = rentalSystem0.getVehicles();
        int int16 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.", (double) 100L);
        java.util.List<org.example.Customer> customerList22 = rentalSystem0.getCustomers();
        int int23 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str25 = rentalSystem0.returnVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\".");
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\".", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\". not found.\". not found. not found. not found. not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\". not found. not found. not found.\". not found. not found.", 1.0d);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList9);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID hi! not found." + "'", str13, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertNotNull(customerList14);
        org.junit.Assert.assertNotNull(vehicleList15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(customerList22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\". not found." + "'", str25, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\". not found.");
    }

    @Test
    public void test2530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2530");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("");
        int int4 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Vehicle> vehicleList5 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".");
        java.util.List<org.example.Vehicle> vehicleList9 = rentalSystem0.getVehicles();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID  not found." + "'", str3, "Vehicle with ID  not found.");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(vehicleList5);
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\"." + "'", str8, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\".");
        org.junit.Assert.assertNotNull(vehicleList9);
    }

    @Test
    public void test2531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2531");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("hi!");
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        int int5 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str9 = rentalSystem0.rentVehicle("No vehicles match the keyword \"\".", "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.", (int) (short) 10);
        java.lang.String str11 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".");
        java.lang.String str13 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".");
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\". not found. not found. not found. not found.\".", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found. not found. not found.\". not found.\".", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\". not found. not found. not found.", (double) 'a');
        java.lang.String str20 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found.\". not found. not found.\".");
        java.util.List<org.example.Vehicle> vehicleList21 = rentalSystem0.getVehicles();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID hi! not found." + "'", str3, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Vehicle with ID No vehicles match the keyword \"\". not found." + "'", str9, "Vehicle with ID No vehicles match the keyword \"\". not found.");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\". not found." + "'", str11, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\". not found." + "'", str13, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found.\". not found. not found.\".\"." + "'", str20, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found.\". not found. not found.\".\".");
        org.junit.Assert.assertNotNull(vehicleList21);
    }

    @Test
    public void test2532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2532");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList5 = rentalSystem0.getVehicles();
        java.lang.String str9 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".", "No vehicles match the keyword \"Vehicle with ID  not found.\".", (int) ' ');
        java.lang.String str13 = rentalSystem0.rentVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.", 0);
        int int14 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList15 = rentalSystem0.getCustomers();
        java.lang.String str17 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\".\". not found. not found. not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertNotNull(vehicleList5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found." + "'", str9, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found." + "'", str13, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found.");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(customerList15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\".\". not found. not found. not found. not found.\"." + "'", str17, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\".\". not found. not found. not found. not found.\".");
    }

    @Test
    public void test2533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2533");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.searchVehicle("Vehicle with ID  not found.");
        rentalSystem0.addVehicle("hi!", "Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID hi! not found.", (double) 0);
        rentalSystem0.addCustomer("Vehicle with ID hi! not found.", "hi!");
        java.lang.String str18 = rentalSystem0.returnVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".");
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID hi! not found.\".", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.", (double) (byte) 10);
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found.", 1.0d);
        java.lang.String str32 = rentalSystem0.rentVehicle("ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\".", (int) '#');
        int int33 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str35 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\". not found. not found. not found.");
        rentalSystem0.addCustomer("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\".\".\".\". not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\". not found. not found.\".");
        java.lang.String str42 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\". not found. not found. not found. not found.", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\". not found.\". not found.\".\".\".", 100);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "No vehicles match the keyword \"Vehicle with ID  not found.\"." + "'", str8, "No vehicles match the keyword \"Vehicle with ID  not found.\".");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found." + "'", str18, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found." + "'", str32, "Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 3 + "'", int33 == 3);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\". not found. not found. not found.\"." + "'", str35, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\". not found. not found. not found.\".");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\". not found. not found. not found. not found. not found." + "'", str42, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\". not found. not found. not found. not found. not found.");
    }

    @Test
    public void test2534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2534");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        int int2 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        int int4 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addVehicle("Vehicle with ID  not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.", (double) (byte) 100);
        java.lang.String str11 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.\".");
        java.lang.String str15 = rentalSystem0.rentVehicle("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID  not found.\".\".\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found. not found.", (int) '#');
        java.lang.String str17 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\".\". not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.\". not found." + "'", str11, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID  not found.\".\".\". not found." + "'", str15, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID  not found.\".\".\". not found.");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\".\". not found. not found. not found." + "'", str17, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\".\". not found. not found. not found.");
    }

    @Test
    public void test2535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2535");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.returnVehicle("Vehicle with ID  not found.");
        java.lang.String str10 = rentalSystem0.returnVehicle("hi!");
        java.lang.String str12 = rentalSystem0.searchVehicle("");
        rentalSystem0.addCustomer("Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".");
        java.lang.String str17 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".");
        java.lang.String str19 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".");
        java.util.List<org.example.Vehicle> vehicleList20 = rentalSystem0.getVehicles();
        java.lang.String str22 = rentalSystem0.returnVehicle("");
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\".\". not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\". not found. not found.\".");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID  not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID  not found. not found.");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID hi! not found." + "'", str10, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "No vehicles match the keyword \"\"." + "'", str12, "No vehicles match the keyword \"\".");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\". not found." + "'", str17, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\". not found." + "'", str19, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Vehicle with ID  not found." + "'", str22, "Vehicle with ID  not found.");
    }

    @Test
    public void test2536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2536");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n", "Vehicle with ID No vehicles match the keyword \"hi!\". not found.", (int) (short) 0);
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\".", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\". not found.\".");
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\". not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found. not found. not found.\".");
        java.lang.String str13 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\".\". not found. not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found." + "'", str5, "Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\".\". not found. not found. not found. not found." + "'", str13, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\".\". not found. not found. not found. not found.");
    }

    @Test
    public void test2537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2537");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.lang.String str9 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.", (int) (byte) 1);
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID  not found. not found.", "No vehicles match the keyword \"\".", "Vehicle with ID  not found.", (double) 1L);
        rentalSystem0.addCustomer("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID  not found.\".\".\". not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.\".");
        java.lang.String str19 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\". not found.\".");
        java.util.List<org.example.Customer> customerList20 = rentalSystem0.getCustomers();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found." + "'", str9, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\". not found.\".\"." + "'", str19, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\". not found.\".\".");
        org.junit.Assert.assertNotNull(customerList20);
    }

    @Test
    public void test2538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2538");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("");
        java.util.List<org.example.Vehicle> vehicleList4 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.rentVehicle("", "Vehicle with ID hi! not found.", (int) (short) 100);
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.", "No vehicles match the keyword \"Vehicle with ID  not found.\".", "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.", (double) 10);
        java.util.List<org.example.Vehicle> vehicleList14 = rentalSystem0.getVehicles();
        java.lang.String str16 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\". not found.");
        java.util.List<org.example.Customer> customerList17 = rentalSystem0.getCustomers();
        java.lang.String str21 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found. not found. not found. not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\". not found.\".\".", (int) (byte) 1);
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found. not found. not found.\". not found. not found.", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\".", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.\".\". not found.\".", (double) '4');
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID  not found." + "'", str3, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID  not found." + "'", str8, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\". not found. not found." + "'", str16, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\". not found. not found.");
        org.junit.Assert.assertNotNull(customerList17);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found. not found. not found. not found. not found." + "'", str21, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found. not found. not found. not found. not found.");
    }

    @Test
    public void test2539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2539");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        int int7 = rentalSystem0.getAvailableVehicleCount();
        int int8 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\".", "hi!");
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.\". not found. not found.", "No vehicles match the keyword \"\".");
        java.lang.String str18 = rentalSystem0.rentVehicle("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found. not found.\".\".\".", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\".\". not found.", 0);
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found. not found. not found.\".\". not found.\".", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.\". not found.\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found.\".", 0.0d);
        java.lang.String str27 = rentalSystem0.rentVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.\". not found.\".\".\".\". not found. not found.", (int) '4');
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found. not found.\".\".\". not found." + "'", str18, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found. not found.\".\".\". not found.");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found." + "'", str27, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found.");
    }

    @Test
    public void test2540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2540");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.rentVehicle("", "No vehicles match the keyword \"Vehicle with ID hi! not found.\".", (int) (byte) 100);
        java.lang.String str10 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.");
        int int11 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found. not found.\".");
        java.util.List<org.example.Vehicle> vehicleList15 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList16 = rentalSystem0.getCustomers();
        java.lang.String str20 = rentalSystem0.rentVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found. not found.\". not found. not found.\".\". not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found. not found.\". not found. not found.", 0);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID  not found." + "'", str8, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found." + "'", str10, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(vehicleList15);
        org.junit.Assert.assertNotNull(customerList16);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found. not found.\". not found. not found.\".\". not found. not found." + "'", str20, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found. not found.\". not found. not found.\".\". not found. not found.");
    }

    @Test
    public void test2541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2541");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.");
        java.lang.String str10 = rentalSystem0.searchVehicle("No vehicles match the keyword \"hi!\".");
        java.lang.String str12 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.\". not found. not found.");
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found. not found. not found.\".\". not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found. not found.\".");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\"." + "'", str8, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\"." + "'", str10, "No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.\". not found. not found. not found." + "'", str12, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.\". not found. not found. not found.");
    }

    @Test
    public void test2542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2542");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID  not found.\".", "hi!");
        int int10 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList11 = rentalSystem0.getCustomers();
        java.lang.String str13 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.");
        int int14 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str16 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.");
        java.lang.Class<?> wildcardClass17 = rentalSystem0.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(customerList11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\"." + "'", str13, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found. not found." + "'", str16, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found. not found.");
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test2543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2543");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.searchVehicle("No vehicles match the keyword \"hi!\".");
        int int9 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str11 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found. not found. not found.\". not found.");
        int int12 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Vehicle> vehicleList13 = rentalSystem0.getVehicles();
        java.lang.Class<?> wildcardClass14 = vehicleList13.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\"." + "'", str8, "No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found. not found. not found.\". not found.\"." + "'", str11, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found. not found. not found.\". not found.\".");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(vehicleList13);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test2544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2544");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList7 = rentalSystem0.getVehicles();
        rentalSystem0.addVehicle("Vehicle with ID  not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".", 1.0d);
        java.lang.String str14 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.");
        java.util.List<org.example.Vehicle> vehicleList15 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList16 = rentalSystem0.getVehicles();
        java.lang.String str20 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\". not found. not found. not found. not found.", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found.\". not found.\".", 100);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertNotNull(vehicleList7);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n" + "'", str14, "ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n");
        org.junit.Assert.assertNotNull(vehicleList15);
        org.junit.Assert.assertNotNull(vehicleList16);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\". not found. not found. not found. not found. not found." + "'", str20, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\". not found. not found. not found. not found. not found.");
    }

    @Test
    public void test2545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2545");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.returnVehicle("");
        rentalSystem0.addCustomer("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\".");
        java.lang.String str15 = rentalSystem0.rentVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\".", "Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.", 100);
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\". not found.\". not found.", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found.\".\".\". not found.", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.", (double) 0);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID  not found." + "'", str8, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\". not found." + "'", str15, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\". not found.");
    }

    @Test
    public void test2546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2546");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList4 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID  not found. not found.", "hi!");
        java.lang.String str11 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID hi! not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".", (int) '4');
        java.lang.String str15 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".", (int) (short) -1);
        java.lang.String str17 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\". not found. not found. not found. not found. not found.\".");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(vehicleList4);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found." + "'", str11, "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\". not found." + "'", str15, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\". not found. not found. not found. not found. not found.\".\"." + "'", str17, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\". not found. not found. not found. not found. not found.\".\".");
    }

    @Test
    public void test2547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2547");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID  not found.\".", "hi!");
        int int10 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList11 = rentalSystem0.getCustomers();
        java.lang.String str13 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.");
        java.lang.String str15 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\".");
        java.lang.String str17 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\". not found. not found.");
        java.lang.Class<?> wildcardClass18 = rentalSystem0.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(customerList11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\"." + "'", str13, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found." + "'", str15, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\". not found. not found. not found." + "'", str17, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\". not found. not found. not found.");
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test2548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2548");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID  not found.\".", "hi!");
        int int10 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList11 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList12 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList13 = rentalSystem0.getCustomers();
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found.\". not found. not found. not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\". not found.\". not found. not found.\". not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found. not found. not found. not found. not found.\".", (double) 100.0f);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(customerList11);
        org.junit.Assert.assertNotNull(customerList12);
        org.junit.Assert.assertNotNull(customerList13);
    }

    @Test
    public void test2549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2549");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.lang.String str4 = rentalSystem0.searchVehicle("hi!");
        java.lang.String str6 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"\".\". not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "No vehicles match the keyword \"hi!\"." + "'", str4, "No vehicles match the keyword \"hi!\".");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"\".\". not found. not found. not found." + "'", str6, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"\".\". not found. not found. not found.");
    }

    @Test
    public void test2550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2550");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID hi! not found.\".", "Vehicle with ID Vehicle with ID  not found. not found.");
        java.lang.String str8 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"\". not found.");
        java.lang.String str10 = rentalSystem0.searchVehicle("Vehicle with ID hi! not found.");
        java.lang.String str14 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found.\". not found.\".", "Vehicle with ID No vehicles match the keyword \"hi!\". not found.", (int) (byte) 0);
        java.lang.String str18 = rentalSystem0.rentVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found.\".\". not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found.\".\".", (int) (byte) 10);
        java.util.List<org.example.Customer> customerList19 = rentalSystem0.getCustomers();
        java.lang.String str23 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found. not found. not found.\". not found. not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found.\".\".", 3);
        java.lang.String str25 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found. not found.\". not found. not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found.");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "No vehicles match the keyword \"Vehicle with ID hi! not found.\"." + "'", str10, "No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found.\". not found.\". not found." + "'", str14, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found.\". not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found.\".\". not found. not found." + "'", str18, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found.\".\". not found. not found.");
        org.junit.Assert.assertNotNull(customerList19);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found. not found. not found.\". not found. not found. not found." + "'", str23, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found. not found. not found.\". not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found. not found.\". not found. not found.\". not found.\"." + "'", str25, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found. not found.\". not found. not found.\". not found.\".");
    }

    @Test
    public void test2551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2551");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.searchVehicle("Vehicle with ID  not found.");
        rentalSystem0.addVehicle("hi!", "Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID hi! not found.", (double) 0);
        rentalSystem0.addCustomer("Vehicle with ID hi! not found.", "hi!");
        java.util.List<org.example.Vehicle> vehicleList17 = rentalSystem0.getVehicles();
        java.lang.String str19 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID  not found.\".");
        java.lang.String str21 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found.\".\". not found.\". not found.\". not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "No vehicles match the keyword \"Vehicle with ID  not found.\"." + "'", str8, "No vehicles match the keyword \"Vehicle with ID  not found.\".");
        org.junit.Assert.assertNotNull(vehicleList17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID  not found.\".\"." + "'", str19, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID  not found.\".\".");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found.\".\". not found.\". not found.\". not found. not found.\"." + "'", str21, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found.\".\". not found.\". not found.\". not found. not found.\".");
    }

    @Test
    public void test2552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2552");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID  not found.\".", "hi!");
        java.lang.String str11 = rentalSystem0.returnVehicle("Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.");
        java.lang.String str13 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found. not found. not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found." + "'", str11, "Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found. not found. not found. not found.\"." + "'", str13, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found. not found. not found. not found.\".");
    }

    @Test
    public void test2553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2553");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        rentalSystem0.addCustomer("hi!", "Vehicle with ID Vehicle with ID  not found. not found.");
        java.util.List<org.example.Vehicle> vehicleList9 = rentalSystem0.getVehicles();
        int int10 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList11 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\". not found.", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.");
        int int15 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str19 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\". not found. not found.", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found. not found. not found.", (int) (short) 1);
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found. not found.\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found.\". not found. not found.\".");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(customerList11);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\". not found. not found. not found." + "'", str19, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\". not found. not found. not found.");
    }

    @Test
    public void test2554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2554");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID  not found.", 100);
        java.lang.String str12 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID  not found.\".", "Vehicle with ID Vehicle with ID hi! not found. not found.", (int) (short) -1);
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.");
        java.util.List<org.example.Customer> customerList16 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList17 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found. not found. not found. not found.\".");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found." + "'", str12, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.");
        org.junit.Assert.assertNotNull(customerList16);
        org.junit.Assert.assertNotNull(vehicleList17);
    }

    @Test
    public void test2555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2555");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID  not found. not found.", "No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        java.lang.String str8 = rentalSystem0.rentVehicle("hi!", "No vehicles match the keyword \"Vehicle with ID  not found.\".", 100);
        int int9 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str11 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found.");
        java.util.List<org.example.Vehicle> vehicleList12 = rentalSystem0.getVehicles();
        java.lang.String str14 = rentalSystem0.returnVehicle("");
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found. not found. not found.", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found.");
        int int18 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str20 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\".");
        java.util.List<org.example.Vehicle> vehicleList21 = rentalSystem0.getVehicles();
        java.lang.String str23 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.");
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n\".\".\". not found. not found. not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\". not found. not found. not found. not found.\". not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\". not found.\". not found.\". not found.", (double) 3);
        // The following exception was thrown during execution in test generation
        try {
            rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\".", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\".\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\". not found. not found. not found.\".", (double) (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Daily rate cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID hi! not found." + "'", str8, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found.\"." + "'", str11, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found.\".");
        org.junit.Assert.assertNotNull(vehicleList12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID  not found." + "'", str14, "Vehicle with ID  not found.");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found." + "'", str20, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found. not found." + "'", str23, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found. not found.");
    }

    @Test
    public void test2556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2556");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList7 = rentalSystem0.getVehicles();
        java.lang.String str11 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID hi! not found.\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.", (int) (byte) 100);
        java.lang.String str13 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".");
        java.lang.String str17 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".", (int) (byte) -1);
        java.util.List<org.example.Vehicle> vehicleList18 = rentalSystem0.getVehicles();
        java.lang.String str20 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\". not found.");
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found. not found.", "hi!", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\". not found.", 0.0d);
        java.util.List<org.example.Vehicle> vehicleList26 = rentalSystem0.getVehicles();
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found.\".", 0.0d);
        java.util.List<org.example.Customer> customerList32 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList33 = rentalSystem0.getCustomers();
        java.lang.String str37 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\". not found. not found. not found.", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\". not found.\". not found. not found.\". not found.\".", 3);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertNotNull(vehicleList7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found." + "'", str11, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\"." + "'", str13, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\".");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found." + "'", str17, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\". not found. not found." + "'", str20, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\". not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList26);
        org.junit.Assert.assertNotNull(customerList32);
        org.junit.Assert.assertNotNull(customerList33);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\". not found. not found. not found. not found." + "'", str37, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\". not found. not found. not found. not found.");
    }

    @Test
    public void test2557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2557");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList5 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        int int7 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\". not found.\". not found. not found. not found.", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\". not found.\". not found.", (double) (short) 1);
        java.lang.String str14 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.\". not found.\".");
        java.lang.String str16 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\". not found.\". not found. not found.\". not found.\".");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertNotNull(vehicleList5);
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.\". not found.\".\"." + "'", str14, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.\". not found.\".\".");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\". not found.\". not found. not found.\". not found.\". not found." + "'", str16, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\". not found.\". not found. not found.\". not found.\". not found.");
    }

    @Test
    public void test2558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2558");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList5 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList7 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList8 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList9 = rentalSystem0.getVehicles();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertNotNull(vehicleList5);
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertNotNull(vehicleList7);
        org.junit.Assert.assertNotNull(customerList8);
        org.junit.Assert.assertNotNull(vehicleList9);
    }

    @Test
    public void test2559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2559");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID  not found.\".", "hi!");
        rentalSystem0.addCustomer("No vehicles match the keyword \"hi!\".", "hi!");
        java.lang.String str14 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        java.util.List<org.example.Vehicle> vehicleList15 = rentalSystem0.getVehicles();
        java.lang.String str17 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.");
        java.util.List<org.example.Customer> customerList18 = rentalSystem0.getCustomers();
        java.lang.String str22 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.\".", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.\". not found. not found. not found.", (int) (short) 10);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found." + "'", str14, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found." + "'", str17, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.");
        org.junit.Assert.assertNotNull(customerList18);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.\". not found." + "'", str22, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.\". not found.");
    }

    @Test
    public void test2560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2560");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.returnVehicle("Vehicle with ID  not found.");
        java.lang.String str10 = rentalSystem0.searchVehicle("Vehicle with ID hi! not found.");
        java.lang.String str12 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found.");
        java.lang.String str14 = rentalSystem0.searchVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\".\".");
        java.util.List<org.example.Vehicle> vehicleList15 = rentalSystem0.getVehicles();
        java.lang.String str17 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found. not found. not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID  not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID  not found. not found.");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "No vehicles match the keyword \"Vehicle with ID hi! not found.\"." + "'", str10, "No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found." + "'", str12, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\".\".\"." + "'", str14, "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\".\".\".");
        org.junit.Assert.assertNotNull(vehicleList15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found. not found. not found. not found.\"." + "'", str17, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found. not found. not found. not found.\".");
    }

    @Test
    public void test2561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2561");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID  not found.\".", "hi!");
        int int10 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str12 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID  not found. not found.");
        java.lang.String str14 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.");
        java.util.List<org.example.Customer> customerList15 = rentalSystem0.getCustomers();
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\". not found.\". not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\". not found. not found.", (double) 'a');
        java.util.List<org.example.Customer> customerList21 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle is already available. not found. not found.\". not found.\". not found.", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\". not found.\". not found. not found.\". not found. not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str12, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\"." + "'", str14, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".");
        org.junit.Assert.assertNotNull(customerList15);
        org.junit.Assert.assertNotNull(customerList21);
    }

    @Test
    public void test2562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2562");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID  not found. not found.", "No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        java.lang.String str8 = rentalSystem0.rentVehicle("hi!", "No vehicles match the keyword \"Vehicle with ID  not found.\".", 100);
        java.lang.String str10 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID hi! not found. not found.");
        rentalSystem0.addVehicle("ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.", "No vehicles match the keyword \"\".", (double) (byte) 10);
        java.lang.String str19 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found. not found.", "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.", (int) (byte) -1);
        int int20 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList21 = rentalSystem0.getCustomers();
        java.lang.String str23 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\". not found.");
        java.lang.String str25 = rentalSystem0.searchVehicle("Vehicle with ID ID: Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found., Model: Vehicle with ID Vehicle with ID hi! not found. not found., Type: No vehicles match the keyword \"hi!\"., Daily Rate: $1.0, Status: Available\nID: Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.\". not found., Model: No vehicles match the keyword \"\"., Type: No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found.\"., Daily Rate: $100.0, Status: Available\n not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID hi! not found." + "'", str8, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found." + "'", str10, "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found. not found. not found." + "'", str19, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found. not found. not found.");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(customerList21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\". not found. not found." + "'", str23, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\". not found. not found.");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found., Model: Vehicle with ID Vehicle with ID hi! not found. not found., Type: No vehicles match the keyword \"hi!\"., Daily Rate: $1.0, Status: Available\nID: Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.\". not found., Model: No vehicles match the keyword \"\"., Type: No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found.\"., Daily Rate: $100.0, Status: Available\n not found.\"." + "'", str25, "No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found., Model: Vehicle with ID Vehicle with ID hi! not found. not found., Type: No vehicles match the keyword \"hi!\"., Daily Rate: $1.0, Status: Available\nID: Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.\". not found., Model: No vehicles match the keyword \"\"., Type: No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found.\"., Daily Rate: $100.0, Status: Available\n not found.\".");
    }

    @Test
    public void test2563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2563");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found.\". not found.\".");
        java.lang.String str10 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.");
        rentalSystem0.addCustomer("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\". not found.", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\". not found. not found. not found. not found. not found. not found.");
        java.lang.String str15 = rentalSystem0.returnVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\". not found.\".\".");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found.\". not found.\". not found." + "'", str8, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found.\". not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found." + "'", str10, "Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\". not found.\".\". not found." + "'", str15, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\". not found.\".\". not found.");
    }

    @Test
    public void test2564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2564");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.", "hi!", (int) (short) 100);
        java.util.List<org.example.Vehicle> vehicleList9 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found.", "No vehicles match the keyword \"\".");
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.\". not found. not found. not found. not found. not found.\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\". not found.\". not found.", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"\".\". not found.\".\". not found.", (double) (short) 1);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList9);
    }

    @Test
    public void test2565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2565");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("");
        rentalSystem0.addVehicle("Vehicle with ID  not found.", "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.", "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.", (double) (short) 0);
        java.util.List<org.example.Customer> customerList9 = rentalSystem0.getCustomers();
        int int10 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Vehicle> vehicleList11 = rentalSystem0.getVehicles();
        java.lang.String str13 = rentalSystem0.returnVehicle("No vehicles match the keyword \"\".");
        java.lang.String str17 = rentalSystem0.rentVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found. not found.\".\". not found.", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.", (int) (byte) 100);
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.\". not found. not found.\".", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found.\".\".\".");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID  not found." + "'", str3, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(vehicleList11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID No vehicles match the keyword \"\". not found." + "'", str13, "Vehicle with ID No vehicles match the keyword \"\". not found.");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found. not found.\".\". not found. not found." + "'", str17, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found. not found.\".\". not found. not found.");
    }

    @Test
    public void test2566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2566");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.searchVehicle("Vehicle with ID  not found.");
        rentalSystem0.addVehicle("hi!", "Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID hi! not found.", (double) 0);
        rentalSystem0.addCustomer("Vehicle with ID hi! not found.", "hi!");
        java.lang.String str18 = rentalSystem0.returnVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".");
        int int19 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str23 = rentalSystem0.rentVehicle("ID: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Model: No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\"., Type: No vehicles match the keyword \"Vehicle with ID hi! not found.\"., Daily Rate: $100.0, Status: Available\n", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\".", 0);
        java.lang.String str27 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\".\". not found. not found.", 10);
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID  not found.\".\".\". not found.\". not found.");
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\".\". not found. not found. not found.\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\". not found.\". not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "No vehicles match the keyword \"Vehicle with ID  not found.\"." + "'", str8, "No vehicles match the keyword \"Vehicle with ID  not found.\".");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found." + "'", str18, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Vehicle with ID ID: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Model: No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\"., Type: No vehicles match the keyword \"Vehicle with ID hi! not found.\"., Daily Rate: $100.0, Status: Available\n not found." + "'", str23, "Vehicle with ID ID: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Model: No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\"., Type: No vehicles match the keyword \"Vehicle with ID hi! not found.\"., Daily Rate: $100.0, Status: Available\n not found.");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found." + "'", str27, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found.");
    }

    @Test
    public void test2567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2567");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        int int2 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Vehicle> vehicleList3 = rentalSystem0.getVehicles();
        int int4 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str6 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.");
        java.lang.String str10 = rentalSystem0.rentVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found. not found.", (int) (short) 0);
        java.util.List<org.example.Customer> customerList11 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList12 = rentalSystem0.getVehicles();
        java.lang.String str16 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID hi! not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found.\".", (int) (byte) 100);
        // The following exception was thrown during execution in test generation
        try {
            rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found.", "");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Customer ID cannot be null or empty");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(vehicleList3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found." + "'", str6, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\". not found." + "'", str10, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\". not found.");
        org.junit.Assert.assertNotNull(customerList11);
        org.junit.Assert.assertNotNull(vehicleList12);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found." + "'", str16, "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.");
    }

    @Test
    public void test2568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2568");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID  not found. not found.", "No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        java.util.List<org.example.Customer> customerList5 = rentalSystem0.getCustomers();
        java.lang.String str7 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\". not found.");
        java.util.List<org.example.Customer> customerList8 = rentalSystem0.getCustomers();
        int int9 = rentalSystem0.getAvailableVehicleCount();
        int int10 = rentalSystem0.getAvailableVehicleCount();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(customerList5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\". not found.\"." + "'", str7, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\". not found.\".");
        org.junit.Assert.assertNotNull(customerList8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
    }

    @Test
    public void test2569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2569");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.lang.String str9 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.", (int) (byte) 1);
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID hi! not found.\".", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\".");
        java.lang.String str16 = rentalSystem0.rentVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.", "Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.", (int) (short) 100);
        int int17 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str19 = rentalSystem0.returnVehicle("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found.\".\".\".");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found." + "'", str9, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found. not found." + "'", str16, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found. not found.");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found.\".\".\". not found." + "'", str19, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found.\".\".\". not found.");
    }

    @Test
    public void test2570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2570");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("");
        int int4 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Vehicle> vehicleList5 = rentalSystem0.getVehicles();
        java.lang.String str7 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found.");
        java.lang.String str9 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found.");
        java.lang.String str13 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.\". not found. not found. not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\". not found.\". not found.", 100);
        int int14 = rentalSystem0.getAvailableVehicleCount();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID  not found." + "'", str3, "Vehicle with ID  not found.");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(vehicleList5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found." + "'", str7, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found.\"." + "'", str9, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found.\".");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.\". not found. not found. not found. not found." + "'", str13, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.\". not found. not found. not found. not found.");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
    }

    @Test
    public void test2571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2571");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("hi!");
        rentalSystem0.addCustomer("ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n", "No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".");
        java.lang.String str10 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".", (int) (byte) 1);
        java.lang.String str14 = rentalSystem0.rentVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\". not found.", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".\".\".", 100);
        java.lang.String str18 = rentalSystem0.rentVehicle("", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found.", (int) 'a');
        java.lang.String str20 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.");
        java.lang.String str24 = rentalSystem0.rentVehicle("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\". not found.\".\".\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n\". not found. not found.", (-1));
        java.util.List<org.example.Customer> customerList25 = rentalSystem0.getCustomers();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID hi! not found." + "'", str3, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found. not found." + "'", str10, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\". not found. not found." + "'", str14, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\". not found. not found.");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Vehicle with ID  not found." + "'", str18, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found. not found." + "'", str20, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\". not found.\".\".\". not found." + "'", str24, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\". not found.\".\".\". not found.");
        org.junit.Assert.assertNotNull(customerList25);
    }

    @Test
    public void test2572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2572");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.lang.String str7 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".");
        java.lang.String str11 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found.", "", 0);
        java.util.List<org.example.Vehicle> vehicleList12 = rentalSystem0.getVehicles();
        java.lang.String str16 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found.\".", "No vehicles match the keyword \"\".", (int) ' ');
        java.lang.String str20 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.", "No vehicles match the keyword \"\".", 0);
        java.lang.Class<?> wildcardClass21 = rentalSystem0.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\"." + "'", str7, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found." + "'", str11, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList12);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found.\". not found." + "'", str16, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found. not found." + "'", str20, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found. not found.");
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test2573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2573");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID  not found.\".", "hi!");
        int int10 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.", "ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\".", 100.0d);
        java.lang.String str19 = rentalSystem0.rentVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.", (int) (short) 1);
        java.lang.String str21 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found. not found.");
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\".\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.\". not found.");
        rentalSystem0.addVehicle("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.\". not found.", "Vehicle with ID  not found.", (double) 1L);
        java.util.List<org.example.Customer> customerList30 = rentalSystem0.getCustomers();
        int int31 = rentalSystem0.getAvailableVehicleCount();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found. not found." + "'", str19, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found. not found.");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found. not found. not found." + "'", str21, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found. not found. not found.");
        org.junit.Assert.assertNotNull(customerList30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2 + "'", int31 == 2);
    }

    @Test
    public void test2574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2574");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.", "Vehicle with ID Vehicle with ID hi! not found. not found.", "No vehicles match the keyword \"hi!\".", (double) 1L);
        java.lang.String str13 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"hi!\". not found.");
        java.lang.String str17 = rentalSystem0.rentVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found.", (int) '4');
        java.util.List<org.example.Vehicle> vehicleList18 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList19 = rentalSystem0.getCustomers();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\"." + "'", str13, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\".");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found." + "'", str17, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.");
        org.junit.Assert.assertNotNull(vehicleList18);
        org.junit.Assert.assertNotNull(customerList19);
    }

    @Test
    public void test2575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2575");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("");
        int int4 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Vehicle> vehicleList5 = rentalSystem0.getVehicles();
        java.lang.String str7 = rentalSystem0.searchVehicle("hi!");
        java.util.List<org.example.Vehicle> vehicleList8 = rentalSystem0.getVehicles();
        java.lang.String str10 = rentalSystem0.returnVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found.\".\".");
        java.lang.String str12 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID  not found.\".\". not found. not found.\".");
        java.lang.String str16 = rentalSystem0.rentVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found.\". not found.", "Vehicle with ID Vehicle with ID Vehicle is already available. not found. not found.", 10);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID  not found." + "'", str3, "Vehicle with ID  not found.");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(vehicleList5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "No vehicles match the keyword \"hi!\"." + "'", str7, "No vehicles match the keyword \"hi!\".");
        org.junit.Assert.assertNotNull(vehicleList8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found.\".\". not found." + "'", str10, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found.\".\". not found.");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID  not found.\".\". not found. not found.\". not found." + "'", str12, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID  not found.\".\". not found. not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found.\". not found. not found." + "'", str16, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found.\". not found. not found.");
    }

    @Test
    public void test2576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2576");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        java.lang.String str7 = rentalSystem0.searchVehicle("Vehicle with ID hi! not found.");
        java.util.List<org.example.Customer> customerList8 = rentalSystem0.getCustomers();
        java.lang.String str10 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.");
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found. not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found.\". not found. not found.\".", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found. not found. not found.\".\".", (double) '4');
        java.lang.String str19 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found.", "", (int) (short) 100);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "No vehicles match the keyword \"Vehicle with ID hi! not found.\"." + "'", str7, "No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        org.junit.Assert.assertNotNull(customerList8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found." + "'", str10, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found. not found." + "'", str19, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found. not found.");
    }

    @Test
    public void test2577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2577");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList5 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID hi! not found.\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.");
        java.lang.String str10 = rentalSystem0.returnVehicle("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\".\".\".");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertNotNull(vehicleList5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\".\".\". not found." + "'", str10, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\".\".\". not found.");
    }

    @Test
    public void test2578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2578");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.returnVehicle("Vehicle with ID  not found.");
        int int9 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str11 = rentalSystem0.searchVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".\".");
        java.lang.String str15 = rentalSystem0.rentVehicle("Vehicle with ID No vehicles match the keyword \"ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n\". not found.", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found. not found.", (int) '4');
        java.lang.String str17 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID  not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID  not found. not found.");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".\".\"." + "'", str11, "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".\".\".");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n\". not found. not found." + "'", str15, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n\". not found. not found.");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found.\"." + "'", str17, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found.\".");
    }

    @Test
    public void test2579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2579");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        int int2 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        int int4 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".", "No vehicles match the keyword \"Vehicle with ID  not found.\".");
        int int8 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str10 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\".");
        java.util.List<org.example.Vehicle> vehicleList11 = rentalSystem0.getVehicles();
        rentalSystem0.addVehicle("No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\". not found.", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.\".", (double) '#');
        java.util.List<org.example.Customer> customerList17 = rentalSystem0.getCustomers();
        java.lang.String str19 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.\".");
        java.lang.String str21 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found.");
        java.lang.String str25 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found. not found. not found. not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"\".\". not found.\".\".", 100);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found." + "'", str10, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList11);
        org.junit.Assert.assertNotNull(customerList17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.\".\"." + "'", str19, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.\".\".");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found." + "'", str21, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found. not found. not found. not found. not found." + "'", str25, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found. not found. not found. not found. not found.");
    }

    @Test
    public void test2580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2580");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        int int2 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Vehicle> vehicleList3 = rentalSystem0.getVehicles();
        int int4 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Vehicle> vehicleList5 = rentalSystem0.getVehicles();
        java.lang.Class<?> wildcardClass6 = rentalSystem0.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(vehicleList3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(vehicleList5);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test2581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2581");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID  not found.\".", "hi!");
        int int10 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str12 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID  not found. not found.");
        java.lang.String str14 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.");
        java.util.List<org.example.Customer> customerList15 = rentalSystem0.getCustomers();
        java.lang.String str17 = rentalSystem0.searchVehicle("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\".\".");
        int int18 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\".\".", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\".\".");
        java.util.List<org.example.Customer> customerList22 = rentalSystem0.getCustomers();
        java.lang.String str24 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\". not found. not found. not found.\".");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str12, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\"." + "'", str14, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".");
        org.junit.Assert.assertNotNull(customerList15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\".\".\"." + "'", str17, "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\".\".\".");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(customerList22);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\". not found. not found. not found.\".\"." + "'", str24, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\". not found. not found. not found.\".\".");
    }

    @Test
    public void test2582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2582");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList4 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID  not found. not found.", "hi!");
        java.lang.String str11 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID hi! not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".", (int) '4');
        java.lang.String str13 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.");
        int int14 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str16 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\". not found. not found.");
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\". not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found. not found.\".", (double) 1.0f);
        java.lang.String str25 = rentalSystem0.rentVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\".", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\".\". not found.", (int) (byte) 1);
        java.lang.Class<?> wildcardClass26 = rentalSystem0.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(vehicleList4);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found." + "'", str11, "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found." + "'", str13, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\". not found. not found. not found." + "'", str16, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\". not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found." + "'", str25, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found.");
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test2583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2583");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        int int7 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addCustomer("hi!", "Vehicle with ID Vehicle with ID  not found. not found.");
        int int11 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str13 = rentalSystem0.returnVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.\".\".");
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.\". not found. not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found. not found.\". not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.\".\". not found." + "'", str13, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.\".\". not found.");
    }

    @Test
    public void test2584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2584");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("");
        java.util.List<org.example.Vehicle> vehicleList4 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.rentVehicle("", "Vehicle with ID hi! not found.", (int) (short) 100);
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.", "No vehicles match the keyword \"Vehicle with ID  not found.\".", "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.", (double) 10);
        int int14 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str18 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found.", (int) (byte) -1);
        java.util.List<org.example.Vehicle> vehicleList19 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\".\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found. not found.\".");
        java.lang.Class<?> wildcardClass23 = rentalSystem0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID  not found." + "'", str3, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID  not found." + "'", str8, "Vehicle with ID  not found.");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found. not found." + "'", str18, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList19);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test2585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2585");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("hi!");
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        int int5 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str7 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\". not found. not found.");
        java.util.List<org.example.Customer> customerList8 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.\".\". not found. not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID hi! not found." + "'", str3, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\". not found. not found.\"." + "'", str7, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\". not found. not found.\".");
        org.junit.Assert.assertNotNull(customerList8);
    }

    @Test
    public void test2586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2586");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList7 = rentalSystem0.getVehicles();
        java.lang.String str11 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.", "Vehicle with ID hi! not found.", (int) '#');
        int int12 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str14 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.");
        java.util.List<org.example.Vehicle> vehicleList15 = rentalSystem0.getVehicles();
        rentalSystem0.addVehicle("Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\". not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.\". not found.\".\".", (double) 1);
        java.lang.String str24 = rentalSystem0.rentVehicle("", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found. not found.", 100);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertNotNull(vehicleList7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found." + "'", str11, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found. not found." + "'", str14, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList15);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Vehicle with ID  not found." + "'", str24, "Vehicle with ID  not found.");
    }

    @Test
    public void test2587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2587");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID  not found. not found.", "No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        java.lang.String str8 = rentalSystem0.rentVehicle("hi!", "No vehicles match the keyword \"Vehicle with ID  not found.\".", 100);
        java.lang.String str10 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID hi! not found. not found.");
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found. not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.", (double) ' ');
        java.lang.String str17 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found.\". not found. not found.");
        java.util.List<org.example.Vehicle> vehicleList18 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList19 = rentalSystem0.getVehicles();
        int int20 = rentalSystem0.getAvailableVehicleCount();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID hi! not found." + "'", str8, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found." + "'", str10, "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found.\". not found. not found.\"." + "'", str17, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found.\". not found. not found.\".");
        org.junit.Assert.assertNotNull(vehicleList18);
        org.junit.Assert.assertNotNull(vehicleList19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
    }

    @Test
    public void test2588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2588");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.searchVehicle("No vehicles match the keyword \"hi!\".");
        java.lang.String str10 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.");
        java.lang.String str12 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.");
        int int13 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addCustomer("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found.\".\". not found.", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\".\". not found. not found. not found. not found. not found.");
        java.lang.String str18 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n\". not found. not found. not found.");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\"." + "'", str8, "No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.\"." + "'", str10, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.\".");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\"." + "'", str12, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\".");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n\". not found. not found. not found. not found." + "'", str18, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n\". not found. not found. not found. not found.");
    }

    @Test
    public void test2589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2589");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.returnVehicle("Vehicle with ID  not found.");
        java.lang.String str12 = rentalSystem0.rentVehicle("Vehicle with ID hi! not found.", "Vehicle with ID Vehicle with ID  not found. not found.", (int) (byte) 10);
        java.lang.String str14 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        java.util.List<org.example.Vehicle> vehicleList15 = rentalSystem0.getVehicles();
        java.lang.String str19 = rentalSystem0.rentVehicle("", "Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.", (int) (byte) 100);
        java.lang.String str21 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\". not found.");
        java.util.List<org.example.Customer> customerList22 = rentalSystem0.getCustomers();
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\". not found. not found. not found.", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\". not found. not found. not found. not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found.\". not found. not found.", (double) (short) 0);
        rentalSystem0.addVehicle("ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\".\".\". not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\".\". not found. not found.\".\".", (double) ' ');
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID  not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID  not found. not found.");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID Vehicle with ID hi! not found. not found." + "'", str12, "Vehicle with ID Vehicle with ID hi! not found. not found.");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found." + "'", str14, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList15);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Vehicle with ID  not found." + "'", str19, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\". not found. not found." + "'", str21, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\". not found. not found.");
        org.junit.Assert.assertNotNull(customerList22);
    }

    @Test
    public void test2590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2590");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        int int2 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        int int4 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".", "No vehicles match the keyword \"Vehicle with ID  not found.\".");
        int int8 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str10 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\".");
        java.util.List<org.example.Vehicle> vehicleList11 = rentalSystem0.getVehicles();
        java.lang.String str13 = rentalSystem0.searchVehicle("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\".\".\".");
        java.lang.String str17 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\". not found. not found. not found. not found.", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\". not found. not found. not found.", 0);
        java.util.List<org.example.Vehicle> vehicleList18 = rentalSystem0.getVehicles();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found." + "'", str10, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\".\".\".\"." + "'", str13, "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\".\".\".\".");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\". not found. not found. not found. not found. not found." + "'", str17, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\". not found. not found. not found. not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList18);
    }

    @Test
    public void test2591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2591");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.lang.String str9 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.", (int) (byte) 1);
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID  not found. not found.", "No vehicles match the keyword \"\".", "Vehicle with ID  not found.", (double) 1L);
        java.lang.String str16 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\". not found.");
        java.lang.String str18 = rentalSystem0.returnVehicle("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\".");
        rentalSystem0.addVehicle("hi!", "No vehicles match the keyword \"ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n\".", "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.", (double) 3);
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\".");
        java.lang.String str28 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found. not found. not found.");
        java.lang.String str32 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\".", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\".\". not found.", (int) ' ');
        java.util.List<org.example.Vehicle> vehicleList33 = rentalSystem0.getVehicles();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found." + "'", str9, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\". not found.\"." + "'", str16, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\". not found.\".");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\". not found." + "'", str18, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\". not found.");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found. not found. not found.\"." + "'", str28, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found. not found. not found.\".");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\". not found." + "'", str32, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList33);
    }

    @Test
    public void test2592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2592");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList5 = rentalSystem0.getVehicles();
        java.lang.String str9 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".", "No vehicles match the keyword \"Vehicle with ID  not found.\".", (int) ' ');
        java.lang.String str13 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID  not found. not found.", "", (int) (byte) -1);
        int int14 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.", "Vehicle with ID hi! not found.");
        rentalSystem0.addCustomer("Vehicle with ID No vehicles match the keyword \"hi!\". not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\". not found.");
        java.lang.String str22 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found. not found.\". not found.");
        java.lang.String str24 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\".\". not found. not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertNotNull(vehicleList5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found." + "'", str9, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str13, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found. not found.\". not found. not found." + "'", str22, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found. not found.\". not found. not found.");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\".\". not found. not found. not found. not found." + "'", str24, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\".\". not found. not found. not found. not found.");
    }

    @Test
    public void test2593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2593");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID  not found.\".", "hi!");
        int int10 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str12 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.");
        java.lang.String str14 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\". not found.");
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\". not found. not found. not found.\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\". not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\"." + "'", str12, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\".");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\". not found. not found." + "'", str14, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\". not found. not found.");
    }

    @Test
    public void test2594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2594");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID  not found.\".", "hi!");
        int int10 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.", "ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\".", 100.0d);
        int int16 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str20 = rentalSystem0.rentVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\". not found. not found. not found.\".", (int) (byte) 1);
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.\". not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\". not found. not found. not found.\". not found.", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\". not found.\". not found.\".\". not found.", (double) 10L);
        java.lang.String str29 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\". not found.\". not found. not found. not found.", (int) 'a');
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found. not found." + "'", str20, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found. not found.");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found." + "'", str29, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.");
    }

    @Test
    public void test2595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2595");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        java.lang.String str7 = rentalSystem0.searchVehicle("Vehicle with ID hi! not found.");
        java.util.List<org.example.Customer> customerList8 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList9 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found. not found.", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\".");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "No vehicles match the keyword \"Vehicle with ID hi! not found.\"." + "'", str7, "No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        org.junit.Assert.assertNotNull(customerList8);
        org.junit.Assert.assertNotNull(customerList9);
    }

    @Test
    public void test2596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2596");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList7 = rentalSystem0.getVehicles();
        java.lang.String str11 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID hi! not found.\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.", (int) (byte) 100);
        int int12 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Vehicle> vehicleList13 = rentalSystem0.getVehicles();
        java.lang.String str15 = rentalSystem0.returnVehicle("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\".\".\".\".");
        java.lang.String str17 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.\".\".\". not found. not found.");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertNotNull(vehicleList7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found." + "'", str11, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(vehicleList13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\".\".\".\". not found." + "'", str15, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\".\".\".\". not found.");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.\".\".\". not found. not found. not found." + "'", str17, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.\".\".\". not found. not found. not found.");
    }

    @Test
    public void test2597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2597");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList4 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID  not found. not found.", "hi!");
        java.lang.String str11 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID hi! not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".", (int) '4');
        java.lang.String str13 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.");
        java.lang.String str17 = rentalSystem0.rentVehicle("", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.", 0);
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\".", "No vehicles match the keyword \"\".");
        java.util.List<org.example.Customer> customerList21 = rentalSystem0.getCustomers();
        java.lang.String str23 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.\". not found.\".\". not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(vehicleList4);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found." + "'", str11, "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found." + "'", str13, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Vehicle with ID  not found." + "'", str17, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.\". not found.\".\". not found.\"." + "'", str23, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.\". not found.\".\". not found.\".");
    }

    @Test
    public void test2598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2598");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.lang.String str4 = rentalSystem0.rentVehicle("Vehicle with ID hi! not found.", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.", (int) (byte) -1);
        java.lang.String str6 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found. not found. not found.\".");
        java.lang.String str8 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\". not found. not found.\".\". not found. not found.");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Vehicle with ID Vehicle with ID hi! not found. not found." + "'", str4, "Vehicle with ID Vehicle with ID hi! not found. not found.");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found. not found. not found.\". not found." + "'", str6, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found. not found. not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\". not found. not found.\".\". not found. not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\". not found. not found.\".\". not found. not found. not found.");
    }

    @Test
    public void test2599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2599");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.returnVehicle("Vehicle with ID  not found.");
        java.lang.String str12 = rentalSystem0.rentVehicle("Vehicle with ID hi! not found.", "Vehicle with ID Vehicle with ID  not found. not found.", (int) (byte) 10);
        java.lang.String str14 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        java.util.List<org.example.Vehicle> vehicleList15 = rentalSystem0.getVehicles();
        java.lang.String str19 = rentalSystem0.rentVehicle("", "Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.", (int) (byte) 100);
        java.util.List<org.example.Customer> customerList20 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList21 = rentalSystem0.getCustomers();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID  not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID  not found. not found.");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID Vehicle with ID hi! not found. not found." + "'", str12, "Vehicle with ID Vehicle with ID hi! not found. not found.");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found." + "'", str14, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList15);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Vehicle with ID  not found." + "'", str19, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList20);
        org.junit.Assert.assertNotNull(customerList21);
    }

    @Test
    public void test2600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2600");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID  not found.", 100);
        java.lang.String str12 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID  not found.\".", "Vehicle with ID Vehicle with ID hi! not found. not found.", (int) (short) -1);
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.");
        java.util.List<org.example.Customer> customerList16 = rentalSystem0.getCustomers();
        java.lang.String str18 = rentalSystem0.returnVehicle("");
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\".\".\".", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found.\".");
        java.lang.String str25 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\". not found. not found.\".\". not found. not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID  not found.\".\". not found. not found.", (int) (byte) 10);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found." + "'", str12, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.");
        org.junit.Assert.assertNotNull(customerList16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Vehicle with ID  not found." + "'", str18, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\". not found. not found.\".\". not found. not found. not found." + "'", str25, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\". not found. not found.\".\". not found. not found. not found.");
    }

    @Test
    public void test2601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2601");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.searchVehicle("Vehicle with ID  not found.");
        rentalSystem0.addVehicle("hi!", "Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID hi! not found.", (double) 0);
        java.util.List<org.example.Vehicle> vehicleList14 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList15 = rentalSystem0.getCustomers();
        int int16 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList17 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList18 = rentalSystem0.getVehicles();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "No vehicles match the keyword \"Vehicle with ID  not found.\"." + "'", str8, "No vehicles match the keyword \"Vehicle with ID  not found.\".");
        org.junit.Assert.assertNotNull(vehicleList14);
        org.junit.Assert.assertNotNull(customerList15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(customerList17);
        org.junit.Assert.assertNotNull(vehicleList18);
    }

    @Test
    public void test2602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2602");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList7 = rentalSystem0.getVehicles();
        rentalSystem0.addVehicle("Vehicle with ID  not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".", 1.0d);
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\". not found. not found.", "Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertNotNull(vehicleList7);
    }

    @Test
    public void test2603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2603");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList5 = rentalSystem0.getVehicles();
        java.lang.String str9 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".", "No vehicles match the keyword \"Vehicle with ID  not found.\".", (int) ' ');
        java.lang.String str13 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID  not found. not found.", "", (int) (byte) -1);
        int int14 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.", "Vehicle with ID hi! not found.");
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\".", (double) 1.0f);
        rentalSystem0.addVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\". not found.\".", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found.", 0.0d);
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.\".", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\".\". not found.");
        java.util.List<org.example.Vehicle> vehicleList31 = rentalSystem0.getVehicles();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertNotNull(vehicleList5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found." + "'", str9, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str13, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(vehicleList31);
    }

    @Test
    public void test2604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2604");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("hi!");
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        int int5 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str9 = rentalSystem0.rentVehicle("No vehicles match the keyword \"\".", "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.", (int) (short) 10);
        java.lang.String str13 = rentalSystem0.rentVehicle("No vehicles match the keyword \"\".", "", (-1));
        int int14 = rentalSystem0.getAvailableVehicleCount();
        int int15 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str17 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found.");
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\". not found. not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\". not found.");
        java.lang.String str22 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found.");
        java.lang.Class<?> wildcardClass23 = rentalSystem0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID hi! not found." + "'", str3, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Vehicle with ID No vehicles match the keyword \"\". not found." + "'", str9, "Vehicle with ID No vehicles match the keyword \"\". not found.");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID No vehicles match the keyword \"\". not found." + "'", str13, "Vehicle with ID No vehicles match the keyword \"\". not found.");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found." + "'", str17, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found.\"." + "'", str22, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found.\".");
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test2605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2605");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID  not found.\".", "hi!");
        int int10 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList11 = rentalSystem0.getCustomers();
        java.lang.String str13 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.");
        int int14 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str16 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.");
        java.util.List<org.example.Customer> customerList17 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList18 = rentalSystem0.getCustomers();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(customerList11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\"." + "'", str13, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found. not found." + "'", str16, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found. not found.");
        org.junit.Assert.assertNotNull(customerList17);
        org.junit.Assert.assertNotNull(customerList18);
    }

    @Test
    public void test2606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2606");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        int int2 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addCustomer("No vehicles match the keyword \"\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.");
        java.lang.String str7 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found.\".\". not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found.\".\". not found. not found. not found." + "'", str7, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found.\".\". not found. not found. not found.");
    }

    @Test
    public void test2607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2607");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("");
        rentalSystem0.addVehicle("Vehicle with ID  not found.", "Vehicle with ID hi! not found.", "Vehicle with ID Vehicle with ID hi! not found. not found.", (double) '4');
        java.lang.String str10 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".");
        int int11 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str13 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found. not found.");
        java.util.List<org.example.Vehicle> vehicleList14 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found. not found. not found. not found.\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\". not found. not found. not found.\".");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID  not found." + "'", str3, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\". not found." + "'", str10, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\". not found.");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found. not found. not found." + "'", str13, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found. not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList14);
    }

    @Test
    public void test2608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2608");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.", "Vehicle with ID Vehicle with ID hi! not found. not found.", "No vehicles match the keyword \"hi!\".", (double) 1L);
        java.lang.String str13 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\". not found.");
        java.lang.String str15 = rentalSystem0.returnVehicle("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\".\".\".");
        java.lang.String str17 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\". not found. not found. not found.");
        java.lang.Class<?> wildcardClass18 = rentalSystem0.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\". not found.\"." + "'", str13, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\". not found.\".");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\".\".\". not found." + "'", str15, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\".\".\". not found.");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\". not found. not found. not found. not found." + "'", str17, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\". not found. not found. not found. not found.");
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test2609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2609");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.returnVehicle("");
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".", "No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".");
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".\".", "ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n");
        java.lang.String str16 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.");
        java.lang.String str18 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.");
        java.util.List<org.example.Customer> customerList19 = rentalSystem0.getCustomers();
        java.lang.String str21 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found. not found. not found. not found.\". not found.");
        java.lang.String str25 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.\". not found.\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found.\".\". not found.\". not found.", 100);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID  not found." + "'", str8, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found." + "'", str16, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found. not found." + "'", str18, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found. not found.");
        org.junit.Assert.assertNotNull(customerList19);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found. not found. not found. not found.\". not found.\"." + "'", str21, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found. not found. not found. not found.\". not found.\".");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.\". not found.\". not found." + "'", str25, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.\". not found.\". not found.");
    }

    @Test
    public void test2610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2610");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.lang.String str9 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.", (int) (byte) 1);
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID  not found. not found.", "No vehicles match the keyword \"\".", "Vehicle with ID  not found.", (double) 1L);
        java.lang.String str16 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\". not found.");
        java.lang.String str18 = rentalSystem0.returnVehicle("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\".");
        rentalSystem0.addVehicle("hi!", "No vehicles match the keyword \"ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n\".", "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.", (double) 3);
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\".");
        java.lang.String str30 = rentalSystem0.rentVehicle("", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found.\". not found.\". not found. not found. not found.", (int) (short) 0);
        java.lang.Class<?> wildcardClass31 = rentalSystem0.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found." + "'", str9, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\". not found.\"." + "'", str16, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\". not found.\".");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\". not found." + "'", str18, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\". not found.");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Vehicle with ID  not found." + "'", str30, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test2611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2611");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.searchVehicle("Vehicle with ID  not found.");
        rentalSystem0.addVehicle("hi!", "Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID hi! not found.", (double) 0);
        rentalSystem0.addCustomer("Vehicle with ID hi! not found.", "hi!");
        java.util.List<org.example.Vehicle> vehicleList17 = rentalSystem0.getVehicles();
        int int18 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str20 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found. not found. not found.");
        java.lang.String str22 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found.\".");
        java.util.List<org.example.Customer> customerList23 = rentalSystem0.getCustomers();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "No vehicles match the keyword \"Vehicle with ID  not found.\"." + "'", str8, "No vehicles match the keyword \"Vehicle with ID  not found.\".");
        org.junit.Assert.assertNotNull(vehicleList17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found. not found. not found. not found." + "'", str20, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found. not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found.\". not found." + "'", str22, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found.\". not found.");
        org.junit.Assert.assertNotNull(customerList23);
    }

    @Test
    public void test2612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2612");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID  not found.", 100);
        java.lang.String str12 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID  not found.\".", "Vehicle with ID Vehicle with ID hi! not found. not found.", (int) (short) -1);
        java.lang.String str14 = rentalSystem0.searchVehicle("hi!");
        java.util.List<org.example.Vehicle> vehicleList15 = rentalSystem0.getVehicles();
        java.lang.String str17 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.");
        java.lang.String str19 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.");
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found. not found. not found.\". not found.", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\".\".", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\". not found. not found. not found.", 100.0d);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found." + "'", str12, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "No vehicles match the keyword \"hi!\"." + "'", str14, "No vehicles match the keyword \"hi!\".");
        org.junit.Assert.assertNotNull(vehicleList15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\"." + "'", str17, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found." + "'", str19, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found.");
    }

    @Test
    public void test2613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2613");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("hi!");
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        int int5 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str7 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.\".");
        java.lang.String str9 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID hi! not found." + "'", str3, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.\". not found." + "'", str7, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found." + "'", str9, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found.");
    }

    @Test
    public void test2614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2614");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("");
        int int4 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Vehicle> vehicleList5 = rentalSystem0.getVehicles();
        java.lang.String str7 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found.");
        int int8 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str12 = rentalSystem0.rentVehicle("Vehicle with ID No vehicles match the keyword \"ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n\". not found.", "", (int) (byte) 100);
        java.lang.Class<?> wildcardClass13 = rentalSystem0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID  not found." + "'", str3, "Vehicle with ID  not found.");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(vehicleList5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found." + "'", str7, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n\". not found. not found." + "'", str12, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n\". not found. not found.");
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test2615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2615");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.", "Vehicle with ID Vehicle with ID hi! not found. not found.", "No vehicles match the keyword \"hi!\".", (double) 1L);
        java.lang.String str13 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"hi!\". not found.");
        java.lang.String str17 = rentalSystem0.rentVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found.", (int) '4');
        int int18 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Vehicle> vehicleList19 = rentalSystem0.getVehicles();
        int int20 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Vehicle> vehicleList21 = rentalSystem0.getVehicles();
        java.lang.String str25 = rentalSystem0.rentVehicle("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\".\".\".\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\". not found. not found. not found.\".", (int) (short) 10);
        java.util.List<org.example.Customer> customerList26 = rentalSystem0.getCustomers();
        java.lang.String str30 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\". not found.\". not found. not found.\".", 10);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\"." + "'", str13, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\".");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found." + "'", str17, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(vehicleList19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(vehicleList21);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\".\".\".\". not found." + "'", str25, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\".\".\".\". not found.");
        org.junit.Assert.assertNotNull(customerList26);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\". not found." + "'", str30, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\". not found.");
    }

    @Test
    public void test2616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2616");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".", (double) 0L);
        java.util.List<org.example.Customer> customerList12 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList13 = rentalSystem0.getVehicles();
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found.\".\". not found.\". not found.\". not found. not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found. not found. not found.\".\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\".\".\".\". not found. not found.", (double) 10L);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertNotNull(customerList12);
        org.junit.Assert.assertNotNull(vehicleList13);
    }

    @Test
    public void test2617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2617");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        int int2 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        int int4 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".", "No vehicles match the keyword \"Vehicle with ID  not found.\".");
        int int8 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str10 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\".");
        java.lang.String str12 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\".");
        int int13 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str15 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found. not found.");
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found.\". not found. not found.\". not found.", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\".\".\".\". not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\".\". not found. not found.\".\".", (double) (short) 10);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found." + "'", str10, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\".\"." + "'", str12, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\".\".");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found. not found.\"." + "'", str15, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found. not found.\".");
    }

    @Test
    public void test2618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2618");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList7 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found.", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".");
        java.lang.String str12 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.\".");
        java.util.List<org.example.Vehicle> vehicleList13 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList14 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found. not found.\". not found. not found. not found.\". not found.", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\".\".\".\".");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertNotNull(vehicleList7);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.\". not found." + "'", str12, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList13);
        org.junit.Assert.assertNotNull(vehicleList14);
    }

    @Test
    public void test2619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2619");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList5 = rentalSystem0.getVehicles();
        java.lang.String str9 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".", "No vehicles match the keyword \"Vehicle with ID  not found.\".", (int) ' ');
        java.lang.String str13 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID  not found. not found.", "", (int) (byte) -1);
        java.util.List<org.example.Vehicle> vehicleList14 = rentalSystem0.getVehicles();
        java.lang.String str18 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found.\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\".\". not found. not found. not found.\".", (int) (byte) 0);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertNotNull(vehicleList5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found." + "'", str9, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str13, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList14);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found.\". not found." + "'", str18, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found.\". not found.");
    }

    @Test
    public void test2620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2620");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("hi!");
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("Vehicle with ID hi! not found.", "Vehicle with ID Vehicle with ID  not found. not found.");
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found. not found.", "Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.\".", (double) 0.0f);
        int int13 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str15 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.");
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found. not found.", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\".\".");
        java.lang.String str20 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.");
        java.lang.String str22 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\".\". not found. not found. not found. not found.\".");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID hi! not found." + "'", str3, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.\"." + "'", str15, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.\".");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found." + "'", str20, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\".\". not found. not found. not found. not found.\". not found." + "'", str22, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\".\". not found. not found. not found. not found.\". not found.");
    }

    @Test
    public void test2621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2621");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.lang.String str7 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".");
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID  not found.");
        int int11 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str13 = rentalSystem0.returnVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".");
        rentalSystem0.addVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\".", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\".\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\".\". not found. not found.", (double) (short) 10);
        java.util.List<org.example.Vehicle> vehicleList19 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList20 = rentalSystem0.getVehicles();
        java.lang.String str22 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\". not found. not found. not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\"." + "'", str7, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\". not found." + "'", str13, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\". not found.");
        org.junit.Assert.assertNotNull(vehicleList19);
        org.junit.Assert.assertNotNull(vehicleList20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\". not found. not found. not found.\". not found. not found." + "'", str22, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\". not found. not found. not found.\". not found. not found.");
    }

    @Test
    public void test2622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2622");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        int int7 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList8 = rentalSystem0.getCustomers();
        int int9 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\". not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found. not found.\".", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\".\".", (double) (short) 100);
        java.lang.String str18 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\". not found. not found.", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\". not found. not found. not found.", (int) (short) 1);
        java.lang.Class<?> wildcardClass19 = rentalSystem0.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(customerList8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\". not found. not found. not found." + "'", str18, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\". not found. not found. not found.");
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test2623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2623");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.returnVehicle("");
        java.util.List<org.example.Customer> customerList9 = rentalSystem0.getCustomers();
        java.lang.Class<?> wildcardClass10 = rentalSystem0.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID  not found." + "'", str8, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList9);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test2624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2624");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("");
        int int4 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Vehicle> vehicleList5 = rentalSystem0.getVehicles();
        java.lang.String str7 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.");
        java.util.List<org.example.Vehicle> vehicleList8 = rentalSystem0.getVehicles();
        java.lang.Class<?> wildcardClass9 = rentalSystem0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID  not found." + "'", str3, "Vehicle with ID  not found.");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(vehicleList5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.\"." + "'", str7, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.\".");
        org.junit.Assert.assertNotNull(vehicleList8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test2625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2625");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID  not found.\".", "hi!");
        int int10 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str12 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID  not found. not found.");
        java.lang.String str16 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.", (int) 'a');
        java.lang.String str20 = rentalSystem0.rentVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found.", (int) (byte) -1);
        int int21 = rentalSystem0.getAvailableVehicleCount();
        int int22 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\".\". not found. not found.\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found. not found. not found. not found.\".");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str12, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found." + "'", str16, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found." + "'", str20, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found.");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
    }

    @Test
    public void test2626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2626");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.lang.String str4 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found.");
        java.lang.String str6 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found.\".");
        java.lang.String str10 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\".\".\". not found. not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\".\".", (int) (short) 100);
        int int11 = rentalSystem0.getAvailableVehicleCount();
        int int12 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str16 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found. not found. not found. not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\".\".\". not found. not found.", (int) (byte) 0);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found." + "'", str4, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found.");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found.\".\"." + "'", str6, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found.\".\".");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\".\".\". not found. not found. not found." + "'", str10, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\".\".\". not found. not found. not found.");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found. not found. not found. not found. not found." + "'", str16, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found. not found. not found. not found. not found.");
    }

    @Test
    public void test2627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2627");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList7 = rentalSystem0.getVehicles();
        java.lang.String str11 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID hi! not found.\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.", (int) (byte) 100);
        java.lang.String str13 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".");
        java.lang.String str17 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".", (int) (byte) -1);
        java.lang.String str19 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\".\". not found. not found.");
        java.lang.String str21 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found. not found. not found.\".\". not found.\".");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertNotNull(vehicleList7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found." + "'", str11, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\"." + "'", str13, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\".");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found." + "'", str17, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\".\". not found. not found. not found." + "'", str19, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\".\". not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found. not found. not found.\".\". not found.\".\"." + "'", str21, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found. not found. not found.\".\". not found.\".\".");
    }

    @Test
    public void test2628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2628");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.lang.String str7 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".");
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID  not found.");
        int int11 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str13 = rentalSystem0.returnVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".");
        java.lang.String str15 = rentalSystem0.searchVehicle("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\".");
        java.util.List<org.example.Vehicle> vehicleList16 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList17 = rentalSystem0.getCustomers();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\"." + "'", str7, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\". not found." + "'", str13, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\". not found.");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\".\"." + "'", str15, "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\".\".");
        org.junit.Assert.assertNotNull(vehicleList16);
        org.junit.Assert.assertNotNull(customerList17);
    }

    @Test
    public void test2629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2629");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        int int7 = rentalSystem0.getAvailableVehicleCount();
        int int8 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Vehicle> vehicleList9 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found.\".\". not found.\".", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\". not found.\".\".\". not found.");
        int int13 = rentalSystem0.getAvailableVehicleCount();
        java.lang.Class<?> wildcardClass14 = rentalSystem0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(vehicleList9);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test2630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2630");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList4 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID  not found. not found.", "hi!");
        java.lang.String str11 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID hi! not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".", (int) '4');
        java.lang.String str13 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.");
        int int14 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str18 = rentalSystem0.rentVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\".\". not found.", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\".\".\". not found.", (int) (byte) 100);
        int int19 = rentalSystem0.getAvailableVehicleCount();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(vehicleList4);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found." + "'", str11, "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found." + "'", str13, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\".\". not found. not found." + "'", str18, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\".\". not found. not found.");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
    }

    @Test
    public void test2631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2631");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\". not found. not found. not found.");
        java.util.List<org.example.Customer> customerList9 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList10 = rentalSystem0.getVehicles();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\". not found. not found. not found.\"." + "'", str8, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\". not found. not found. not found.\".");
        org.junit.Assert.assertNotNull(customerList9);
        org.junit.Assert.assertNotNull(vehicleList10);
    }

    @Test
    public void test2632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2632");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID  not found. not found.", "No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        java.util.List<org.example.Customer> customerList5 = rentalSystem0.getCustomers();
        java.lang.String str7 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\". not found.");
        java.util.List<org.example.Customer> customerList8 = rentalSystem0.getCustomers();
        int int9 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str11 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\". not found. not found. not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(customerList5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\". not found.\"." + "'", str7, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\". not found.\".");
        org.junit.Assert.assertNotNull(customerList8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\". not found. not found. not found. not found.\"." + "'", str11, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\". not found. not found. not found. not found.\".");
    }

    @Test
    public void test2633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2633");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID  not found.\".", "hi!");
        int int10 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str12 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID  not found. not found.");
        java.lang.String str14 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.");
        java.util.List<org.example.Customer> customerList15 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found. not found. not found. not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\".\". not found. not found.");
        java.lang.String str20 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found. not found.\". not found. not found. not found.\".");
        java.lang.Class<?> wildcardClass21 = rentalSystem0.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str12, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\"." + "'", str14, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".");
        org.junit.Assert.assertNotNull(customerList15);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found. not found.\". not found. not found. not found.\". not found." + "'", str20, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found. not found.\". not found. not found. not found.\". not found.");
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test2634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2634");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID  not found.", 100);
        java.lang.String str12 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID  not found.\".", "Vehicle with ID Vehicle with ID hi! not found. not found.", (int) (short) -1);
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.");
        java.util.List<org.example.Vehicle> vehicleList16 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList17 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList18 = rentalSystem0.getCustomers();
        java.lang.String str20 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found. not found.");
        java.lang.String str22 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\". not found.\".");
        java.lang.String str24 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\". not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found." + "'", str12, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList16);
        org.junit.Assert.assertNotNull(vehicleList17);
        org.junit.Assert.assertNotNull(customerList18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found. not found. not found." + "'", str20, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\". not found.\". not found." + "'", str22, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\". not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\". not found.\". not found.\"." + "'", str24, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\". not found.\". not found.\".");
    }

    @Test
    public void test2635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2635");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        int int7 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\".\".", "Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.", "ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n", 1.0d);
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.\". not found. not found.", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found. not found. not found.\".\".", 0.0d);
        rentalSystem0.addVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found. not found. not found.\".\".", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\". not found. not found. not found. not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found.", (double) 2);
        java.lang.String str24 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found.");
        int int25 = rentalSystem0.getAvailableVehicleCount();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found.\"." + "'", str24, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found.\".");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 3 + "'", int25 == 3);
    }

    @Test
    public void test2636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2636");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("hi!");
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        int int5 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str9 = rentalSystem0.rentVehicle("No vehicles match the keyword \"\".", "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.", (int) (short) 10);
        java.lang.String str13 = rentalSystem0.rentVehicle("No vehicles match the keyword \"\".", "", (-1));
        int int14 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str16 = rentalSystem0.returnVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\".");
        java.util.List<org.example.Vehicle> vehicleList17 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList18 = rentalSystem0.getVehicles();
        java.lang.String str22 = rentalSystem0.rentVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\".\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found. not found. not found.\". not found.", 0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID hi! not found." + "'", str3, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Vehicle with ID No vehicles match the keyword \"\". not found." + "'", str9, "Vehicle with ID No vehicles match the keyword \"\". not found.");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID No vehicles match the keyword \"\". not found." + "'", str13, "Vehicle with ID No vehicles match the keyword \"\". not found.");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found." + "'", str16, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found.");
        org.junit.Assert.assertNotNull(vehicleList17);
        org.junit.Assert.assertNotNull(vehicleList18);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\".\". not found." + "'", str22, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\".\". not found.");
    }

    @Test
    public void test2637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2637");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("hi!");
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.lang.String str6 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID  not found. not found.");
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\". not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".", (double) (byte) 1);
        java.util.List<org.example.Vehicle> vehicleList12 = rentalSystem0.getVehicles();
        java.lang.String str14 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\". not found.");
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found. not found.\". not found.\". not found.", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found. not found. not found.\".\".", 100.0d);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID hi! not found." + "'", str3, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str6, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\". not found. not found." + "'", str14, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\". not found. not found.");
    }

    @Test
    public void test2638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2638");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.searchVehicle("Vehicle with ID  not found.");
        rentalSystem0.addVehicle("hi!", "Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID hi! not found.", (double) 0);
        java.util.List<org.example.Customer> customerList14 = rentalSystem0.getCustomers();
        java.lang.String str18 = rentalSystem0.rentVehicle("Vehicle with ID No vehicles match the keyword \"hi!\". not found.", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found. not found.", (int) (short) -1);
        java.util.List<org.example.Vehicle> vehicleList19 = rentalSystem0.getVehicles();
        java.lang.String str21 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.");
        java.util.List<org.example.Vehicle> vehicleList22 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n\".\". not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found.");
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\". not found. not found. not found.\". not found.\".", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\". not found. not found. not found. not found.", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\". not found. not found. not found. not found. not found.", (double) 100);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "No vehicles match the keyword \"Vehicle with ID  not found.\"." + "'", str8, "No vehicles match the keyword \"Vehicle with ID  not found.\".");
        org.junit.Assert.assertNotNull(customerList14);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found." + "'", str18, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList19);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\"." + "'", str21, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\".");
        org.junit.Assert.assertNotNull(vehicleList22);
    }

    @Test
    public void test2639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2639");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.lang.String str4 = rentalSystem0.rentVehicle("Vehicle with ID hi! not found.", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.", (int) (byte) -1);
        java.util.List<org.example.Vehicle> vehicleList5 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Vehicle with ID Vehicle with ID hi! not found. not found." + "'", str4, "Vehicle with ID Vehicle with ID hi! not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList5);
        org.junit.Assert.assertNotNull(customerList6);
    }

    @Test
    public void test2640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2640");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.searchVehicle("Vehicle with ID  not found.");
        rentalSystem0.addVehicle("hi!", "Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID hi! not found.", (double) 0);
        rentalSystem0.addCustomer("Vehicle with ID hi! not found.", "hi!");
        java.util.List<org.example.Vehicle> vehicleList17 = rentalSystem0.getVehicles();
        int int18 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str20 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found. not found. not found.");
        java.lang.String str22 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found.\".");
        java.lang.Class<?> wildcardClass23 = rentalSystem0.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "No vehicles match the keyword \"Vehicle with ID  not found.\"." + "'", str8, "No vehicles match the keyword \"Vehicle with ID  not found.\".");
        org.junit.Assert.assertNotNull(vehicleList17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found. not found. not found. not found." + "'", str20, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found. not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found.\". not found." + "'", str22, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found.\". not found.");
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test2641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2641");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.", "hi!", (int) (short) 100);
        java.util.List<org.example.Vehicle> vehicleList9 = rentalSystem0.getVehicles();
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found. not found.\".", "ID: Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found. not found., Model: No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\"., Type: Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found., Daily Rate: $32.0, Status: Available\n", (double) (short) 10);
        java.lang.String str18 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.\". not found. not found.\". not found. not found. not found. not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\". not found. not found. not found.\". not found. not found.", (int) '4');
        int int19 = rentalSystem0.getAvailableVehicleCount();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList9);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.\". not found. not found.\". not found. not found. not found. not found. not found." + "'", str18, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.\". not found. not found.\". not found. not found. not found. not found. not found.");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
    }

    @Test
    public void test2642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2642");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        java.lang.String str7 = rentalSystem0.searchVehicle("Vehicle with ID hi! not found.");
        java.util.List<org.example.Customer> customerList8 = rentalSystem0.getCustomers();
        java.lang.String str10 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.");
        java.lang.String str12 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\". not found. not found.");
        java.lang.String str14 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID hi! not found. not found.");
        java.lang.Class<?> wildcardClass15 = rentalSystem0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "No vehicles match the keyword \"Vehicle with ID hi! not found.\"." + "'", str7, "No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        org.junit.Assert.assertNotNull(customerList8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found." + "'", str10, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\". not found. not found. not found." + "'", str12, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\". not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\"." + "'", str14, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\".");
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test2643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2643");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList3 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList4 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("ID: Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found. not found., Model: No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\"., Type: Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found., Daily Rate: $32.0, Status: Available\n", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".");
        int int8 = rentalSystem0.getAvailableVehicleCount();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(vehicleList3);
        org.junit.Assert.assertNotNull(vehicleList4);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
    }

    @Test
    public void test2644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2644");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n", "Vehicle with ID No vehicles match the keyword \"hi!\". not found.", (int) (short) 0);
        int int6 = rentalSystem0.getAvailableVehicleCount();
        int int7 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList8 = rentalSystem0.getCustomers();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found." + "'", str5, "Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(customerList8);
    }

    @Test
    public void test2645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2645");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList7 = rentalSystem0.getVehicles();
        rentalSystem0.addVehicle("Vehicle with ID  not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".", 1.0d);
        java.util.List<org.example.Customer> customerList13 = rentalSystem0.getCustomers();
        java.lang.String str15 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found.");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertNotNull(vehicleList7);
        org.junit.Assert.assertNotNull(customerList13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found.\"." + "'", str15, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found.\".");
    }

    @Test
    public void test2646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2646");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.lang.String str9 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.", (int) (byte) 1);
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID hi! not found.\".", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\".");
        int int13 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addCustomer("Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".");
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\".\". not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\". not found.\". not found.", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found. not found. not found. not found.", 10.0d);
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.");
        java.lang.String str28 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found. not found.\". not found. not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\".\".", (int) (byte) -1);
        java.lang.Class<?> wildcardClass29 = rentalSystem0.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found." + "'", str9, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found. not found.\". not found. not found. not found." + "'", str28, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found. not found.\". not found. not found. not found.");
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test2647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2647");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID  not found.\".", "hi!");
        java.util.List<org.example.Vehicle> vehicleList10 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\".\".\". not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found. not found. not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertNotNull(vehicleList10);
    }

    @Test
    public void test2648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2648");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found.\".\". not found. not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found. not found.\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\". not found.", 0.0d);
        java.util.List<org.example.Customer> customerList12 = rentalSystem0.getCustomers();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertNotNull(customerList12);
    }

    @Test
    public void test2649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2649");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("hi!");
        java.lang.String str5 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\".", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".\".");
        java.lang.String str12 = rentalSystem0.rentVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\".\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\".", 1);
        java.lang.String str14 = rentalSystem0.returnVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\".\".");
        java.lang.String str16 = rentalSystem0.returnVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found. not found.\". not found.\".\".");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID hi! not found." + "'", str3, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found." + "'", str5, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\".\". not found." + "'", str12, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\".\". not found.");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\".\". not found." + "'", str14, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\".\". not found.");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found. not found.\". not found.\".\". not found." + "'", str16, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found. not found.\". not found.\".\". not found.");
    }

    @Test
    public void test2650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2650");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList7 = rentalSystem0.getVehicles();
        java.lang.String str11 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID hi! not found.\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.", (int) (byte) 100);
        java.util.List<org.example.Customer> customerList12 = rentalSystem0.getCustomers();
        int int13 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.\". not found.", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID  not found.\".\".\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\". not found.\". not found.", (double) (byte) 0);
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".");
        java.lang.String str25 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\". not found. not found. not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found. not found. not found.\". not found.\". not found. not found.", (int) (byte) 0);
        java.util.List<org.example.Vehicle> vehicleList26 = rentalSystem0.getVehicles();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertNotNull(vehicleList7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found." + "'", str11, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.");
        org.junit.Assert.assertNotNull(customerList12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\". not found. not found. not found. not found." + "'", str25, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\". not found. not found. not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList26);
    }

    @Test
    public void test2651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2651");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.lang.String str7 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".");
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID  not found.");
        java.util.List<org.example.Vehicle> vehicleList11 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found. not found. not found.\".", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID  not found.\".\".");
        rentalSystem0.addVehicle("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\".\".\".\".", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found. not found.\". not found. not found.\".\".", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\".\". not found.", 100.0d);
        java.util.List<org.example.Vehicle> vehicleList20 = rentalSystem0.getVehicles();
        int int21 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Vehicle> vehicleList22 = rentalSystem0.getVehicles();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\"." + "'", str7, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".");
        org.junit.Assert.assertNotNull(vehicleList11);
        org.junit.Assert.assertNotNull(vehicleList20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNotNull(vehicleList22);
    }

    @Test
    public void test2652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2652");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList7 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found.", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".");
        java.lang.String str12 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.\".");
        rentalSystem0.addCustomer("Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.");
        java.lang.String str17 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found.");
        java.lang.String str19 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\". not found. not found.\".\". not found. not found.");
        java.lang.String str21 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found. not found.\". not found. not found.\".\". not found.");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertNotNull(vehicleList7);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.\". not found." + "'", str12, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found.\"." + "'", str17, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found.\".");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\". not found. not found.\".\". not found. not found.\"." + "'", str19, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\". not found. not found.\".\". not found. not found.\".");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found. not found.\". not found. not found.\".\". not found.\"." + "'", str21, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found. not found.\". not found. not found.\".\". not found.\".");
    }

    @Test
    public void test2653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2653");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID  not found. not found.", "No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        java.lang.String str8 = rentalSystem0.rentVehicle("hi!", "No vehicles match the keyword \"Vehicle with ID  not found.\".", 100);
        int int9 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str11 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found.");
        java.util.List<org.example.Vehicle> vehicleList12 = rentalSystem0.getVehicles();
        java.lang.String str14 = rentalSystem0.returnVehicle("");
        rentalSystem0.addVehicle("No vehicles match the keyword \"hi!\".", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found. not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found.\". not found.", (double) 0.0f);
        int int20 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Vehicle> vehicleList21 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.\".\".", "Vehicle with ID Vehicle with ID  not found. not found.");
        java.util.List<org.example.Vehicle> vehicleList25 = rentalSystem0.getVehicles();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID hi! not found." + "'", str8, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found.\"." + "'", str11, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found.\".");
        org.junit.Assert.assertNotNull(vehicleList12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID  not found." + "'", str14, "Vehicle with ID  not found.");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(vehicleList21);
        org.junit.Assert.assertNotNull(vehicleList25);
    }

    @Test
    public void test2654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2654");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        rentalSystem0.addCustomer("hi!", "Vehicle with ID Vehicle with ID  not found. not found.");
        java.util.List<org.example.Vehicle> vehicleList9 = rentalSystem0.getVehicles();
        java.lang.String str13 = rentalSystem0.rentVehicle("hi!", "No vehicles match the keyword \"Vehicle with ID  not found.\".", (int) '4');
        java.util.List<org.example.Customer> customerList14 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList15 = rentalSystem0.getVehicles();
        int int16 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.", (double) 100L);
        java.lang.String str23 = rentalSystem0.searchVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\".");
        java.lang.String str25 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\". not found.\".");
        rentalSystem0.addVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found. not found.\".\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\". not found.\". not found.", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\". not found. not found. not found. not found.", (double) 100L);
        java.util.List<org.example.Customer> customerList31 = rentalSystem0.getCustomers();
        int int32 = rentalSystem0.getAvailableVehicleCount();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList9);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID hi! not found." + "'", str13, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertNotNull(customerList14);
        org.junit.Assert.assertNotNull(vehicleList15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\".\"." + "'", str23, "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\".\".");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\". not found.\". not found." + "'", str25, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\". not found.\". not found.");
        org.junit.Assert.assertNotNull(customerList31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 2 + "'", int32 == 2);
    }

    @Test
    public void test2655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2655");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        int int7 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList8 = rentalSystem0.getCustomers();
        java.lang.String str10 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        java.lang.String str12 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"\". not found.");
        java.util.List<org.example.Customer> customerList13 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found. not found.", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".\".\".");
        java.lang.String str18 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\". not found.\". not found. not found.\".");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(customerList8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found." + "'", str10, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\"." + "'", str12, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".");
        org.junit.Assert.assertNotNull(customerList13);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\". not found.\". not found. not found.\".\"." + "'", str18, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\". not found.\". not found. not found.\".\".");
    }

    @Test
    public void test2656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2656");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.returnVehicle("");
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".", "No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".");
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".\".", "ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n");
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found.\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found.", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\".\".\". not found.", 0.0d);
        java.util.List<org.example.Customer> customerList20 = rentalSystem0.getCustomers();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID  not found." + "'", str8, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList20);
    }

    @Test
    public void test2657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2657");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.");
        rentalSystem0.addCustomer("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\".");
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\".", "No vehicles match the keyword \"Vehicle with ID hi! not found.\".", (double) (short) 100);
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\". not found.\".", "ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found.", 10.0d);
        java.lang.String str24 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID  not found.\".");
        java.util.List<org.example.Vehicle> vehicleList25 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList26 = rentalSystem0.getVehicles();
        java.lang.Class<?> wildcardClass27 = vehicleList26.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID  not found.\".\"." + "'", str24, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID  not found.\".\".");
        org.junit.Assert.assertNotNull(vehicleList25);
        org.junit.Assert.assertNotNull(vehicleList26);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test2658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2658");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.lang.String str9 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.", (int) (byte) 1);
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID  not found. not found.", "No vehicles match the keyword \"\".", "Vehicle with ID  not found.", (double) 1L);
        java.lang.String str16 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\". not found.");
        java.lang.String str18 = rentalSystem0.returnVehicle("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\".");
        rentalSystem0.addVehicle("hi!", "No vehicles match the keyword \"ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n\".", "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.", (double) 3);
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\".");
        java.lang.String str28 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found. not found. not found.");
        java.util.List<org.example.Customer> customerList29 = rentalSystem0.getCustomers();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found." + "'", str9, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\". not found.\"." + "'", str16, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\". not found.\".");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\". not found." + "'", str18, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\". not found.");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found. not found. not found.\"." + "'", str28, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found. not found. not found.\".");
        org.junit.Assert.assertNotNull(customerList29);
    }

    @Test
    public void test2659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2659");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("");
        int int4 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Vehicle> vehicleList5 = rentalSystem0.getVehicles();
        java.lang.String str7 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.");
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".", "Vehicle with ID hi! not found.");
        int int11 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\". not found. not found. not found.");
        rentalSystem0.addCustomer("Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found.\". not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found.");
        java.util.List<org.example.Vehicle> vehicleList18 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList19 = rentalSystem0.getCustomers();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID  not found." + "'", str3, "Vehicle with ID  not found.");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(vehicleList5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.\"." + "'", str7, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.\".");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(vehicleList18);
        org.junit.Assert.assertNotNull(customerList19);
    }

    @Test
    public void test2660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2660");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("");
        int int4 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str8 = rentalSystem0.rentVehicle("", "", (int) '#');
        java.lang.String str10 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\". not found.");
        java.lang.Class<?> wildcardClass11 = rentalSystem0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID  not found." + "'", str3, "Vehicle with ID  not found.");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID  not found." + "'", str8, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\". not found. not found." + "'", str10, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\". not found. not found.");
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test2661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2661");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        rentalSystem0.addCustomer("hi!", "Vehicle with ID Vehicle with ID  not found. not found.");
        java.util.List<org.example.Vehicle> vehicleList9 = rentalSystem0.getVehicles();
        int int10 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList11 = rentalSystem0.getCustomers();
        java.lang.String str15 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\". not found. not found. not found.", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\". not found.\".", (int) ' ');
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.\". not found. not found.", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found. not found. not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found.\". not found.", (double) 100);
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\".", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found. not found.\". not found.\".\".\". not found.");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(customerList11);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\". not found. not found. not found. not found." + "'", str15, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\". not found. not found. not found. not found.");
    }

    @Test
    public void test2662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2662");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID  not found.", 100);
        java.lang.String str12 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID  not found.\".", "Vehicle with ID Vehicle with ID hi! not found. not found.", (int) (short) -1);
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.", "ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n", "Vehicle with ID Vehicle with ID hi! not found. not found.", 100.0d);
        java.util.List<org.example.Vehicle> vehicleList18 = rentalSystem0.getVehicles();
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.", "Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.", (double) 10.0f);
        java.util.List<org.example.Vehicle> vehicleList24 = rentalSystem0.getVehicles();
        java.lang.String str28 = rentalSystem0.rentVehicle("Vehicle with ID ID: Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found., Model: ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n, Type: Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found., Daily Rate: $100.0, Status: Available\n not found.", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.\".\".\".\".", (int) (short) 100);
        int int29 = rentalSystem0.getAvailableVehicleCount();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found." + "'", str12, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList18);
        org.junit.Assert.assertNotNull(vehicleList24);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Vehicle with ID Vehicle with ID ID: Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found., Model: ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n, Type: Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found., Daily Rate: $100.0, Status: Available\n not found. not found." + "'", str28, "Vehicle with ID Vehicle with ID ID: Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found., Model: ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n, Type: Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found., Daily Rate: $100.0, Status: Available\n not found. not found.");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 2 + "'", int29 == 2);
    }

    @Test
    public void test2663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2663");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("hi!");
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("Vehicle with ID hi! not found.", "Vehicle with ID Vehicle with ID  not found. not found.");
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found. not found.", "Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.\".", (double) 0.0f);
        java.lang.String str16 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\". not found. not found. not found. not found.", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found.", 0);
        java.util.List<org.example.Vehicle> vehicleList17 = rentalSystem0.getVehicles();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID hi! not found." + "'", str3, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\". not found. not found. not found. not found. not found." + "'", str16, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\". not found. not found. not found. not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList17);
    }

    @Test
    public void test2664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2664");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList7 = rentalSystem0.getVehicles();
        java.lang.String str11 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID hi! not found.\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.", (int) (byte) 100);
        java.util.List<org.example.Customer> customerList12 = rentalSystem0.getCustomers();
        java.lang.String str14 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID  not found. not found.");
        java.lang.String str16 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\". not found.\". not found. not found.");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertNotNull(vehicleList7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found." + "'", str11, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.");
        org.junit.Assert.assertNotNull(customerList12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str14, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\". not found.\". not found. not found. not found." + "'", str16, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\". not found.\". not found. not found. not found.");
    }

    @Test
    public void test2665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2665");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("hi!");
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        int int5 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str9 = rentalSystem0.rentVehicle("No vehicles match the keyword \"\".", "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.", (int) (short) 10);
        java.lang.String str13 = rentalSystem0.rentVehicle("No vehicles match the keyword \"\".", "", (-1));
        int int14 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str16 = rentalSystem0.returnVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\".");
        java.util.List<org.example.Customer> customerList17 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList18 = rentalSystem0.getVehicles();
        java.lang.String str22 = rentalSystem0.rentVehicle("", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\".\".\". not found.", (int) (byte) 1);
        java.lang.String str24 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found. not found.\". not found. not found.\". not found.");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID hi! not found." + "'", str3, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Vehicle with ID No vehicles match the keyword \"\". not found." + "'", str9, "Vehicle with ID No vehicles match the keyword \"\". not found.");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID No vehicles match the keyword \"\". not found." + "'", str13, "Vehicle with ID No vehicles match the keyword \"\". not found.");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found." + "'", str16, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found.");
        org.junit.Assert.assertNotNull(customerList17);
        org.junit.Assert.assertNotNull(vehicleList18);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Vehicle with ID  not found." + "'", str22, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found. not found.\". not found. not found.\". not found.\"." + "'", str24, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found. not found.\". not found. not found.\". not found.\".");
    }

    @Test
    public void test2666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2666");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.");
        rentalSystem0.addCustomer("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\".");
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\".", "No vehicles match the keyword \"Vehicle with ID hi! not found.\".", (double) (short) 100);
        java.lang.String str21 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\".\". not found. not found.\".", "Vehicle with ID  not found.", (int) (byte) -1);
        java.lang.Class<?> wildcardClass22 = rentalSystem0.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\".\". not found. not found.\". not found." + "'", str21, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\".\". not found. not found.\". not found.");
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test2667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2667");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID  not found.\".", "hi!");
        int int10 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str12 = rentalSystem0.returnVehicle("No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".");
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found. not found. not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found. not found.", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found.\". not found.\".", (double) 100L);
        java.lang.String str19 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found. not found. not found.");
        int int20 = rentalSystem0.getAvailableVehicleCount();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found." + "'", str12, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found.");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found. not found. not found.\"." + "'", str19, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found. not found. not found.\".");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
    }

    @Test
    public void test2668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2668");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.returnVehicle("");
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".", "No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".");
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".\".", "ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n");
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found.\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found.", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\".\".\". not found.", 0.0d);
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\". not found. not found.", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found. not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found.", (double) (short) 100);
        int int25 = rentalSystem0.getAvailableVehicleCount();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID  not found." + "'", str8, "Vehicle with ID  not found.");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 2 + "'", int25 == 2);
    }

    @Test
    public void test2669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2669");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("");
        java.util.List<org.example.Vehicle> vehicleList4 = rentalSystem0.getVehicles();
        java.lang.String str6 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID  not found. not found.");
        java.util.List<org.example.Customer> customerList7 = rentalSystem0.getCustomers();
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID  not found.\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.", (double) ' ');
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found. not found.", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found. not found. not found.", "Vehicle with ID Vehicle with ID hi! not found. not found.", (double) '#');
        java.lang.String str19 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found. not found. not found.");
        java.lang.String str21 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found. not found. not found.");
        java.lang.String str23 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\". not found. not found. not found.");
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found. not found.\".\".\". not found. not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\". not found.\". not found.\". not found.");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID  not found." + "'", str3, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str6, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertNotNull(customerList7);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found. not found. not found.\"." + "'", str19, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found. not found. not found.\".");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found. not found. not found. not found." + "'", str21, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found. not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\". not found. not found. not found.\"." + "'", str23, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\". not found. not found. not found.\".");
    }

    @Test
    public void test2670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2670");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList5 = rentalSystem0.getVehicles();
        java.lang.String str9 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".", "No vehicles match the keyword \"Vehicle with ID  not found.\".", (int) ' ');
        java.lang.String str11 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        java.lang.String str13 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\".");
        int int14 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Vehicle> vehicleList15 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList16 = rentalSystem0.getVehicles();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertNotNull(vehicleList5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found." + "'", str9, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found." + "'", str11, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\".\"." + "'", str13, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\".\".");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(vehicleList15);
        org.junit.Assert.assertNotNull(vehicleList16);
    }

    @Test
    public void test2671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2671");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID  not found.", 100);
        java.lang.String str12 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID  not found.\".", "Vehicle with ID Vehicle with ID hi! not found. not found.", (int) (short) -1);
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.", "ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n", "Vehicle with ID Vehicle with ID hi! not found. not found.", 100.0d);
        java.util.List<org.example.Vehicle> vehicleList18 = rentalSystem0.getVehicles();
        java.lang.String str20 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".");
        java.lang.String str24 = rentalSystem0.rentVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\".", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\". not found. not found. not found. not found.", (int) (short) 0);
        int int25 = rentalSystem0.getAvailableVehicleCount();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found." + "'", str12, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\"." + "'", str20, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\". not found." + "'", str24, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\". not found.");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
    }

    @Test
    public void test2672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2672");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        int int2 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Vehicle> vehicleList3 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.");
        rentalSystem0.addCustomer("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found.", "Vehicle with ID Vehicle with ID hi! not found. not found.");
        java.lang.String str10 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.");
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found. not found.\". not found. not found. not found. not found.\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found. not found. not found.\".");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(vehicleList3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\"." + "'", str5, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\"." + "'", str10, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\".");
    }

    @Test
    public void test2673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2673");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.lang.String str7 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".");
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID  not found.");
        java.lang.String str14 = rentalSystem0.rentVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.", 0);
        java.lang.String str16 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\". not found.");
        rentalSystem0.addVehicle("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found.\".\".\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\". not found.\". not found. not found.", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.\". not found.\".\".\".\".", (double) 0);
        java.lang.String str25 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found.\". not found.\".", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n\".\".\". not found.", (int) ' ');
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\"." + "'", str7, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found." + "'", str14, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\". not found.\"." + "'", str16, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\". not found.\".");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found.\". not found.\". not found." + "'", str25, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found.\". not found.\". not found.");
    }

    @Test
    public void test2674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2674");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID  not found.\".", "hi!");
        int int10 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str12 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID  not found. not found.");
        java.lang.String str14 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.");
        java.lang.String str16 = rentalSystem0.searchVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".\".");
        java.util.List<org.example.Customer> customerList17 = rentalSystem0.getCustomers();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str12, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\"." + "'", str14, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".\".\"." + "'", str16, "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".\".\".");
        org.junit.Assert.assertNotNull(customerList17);
    }

    @Test
    public void test2675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2675");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID  not found.", 100);
        java.lang.String str12 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID  not found.\".", "Vehicle with ID Vehicle with ID hi! not found. not found.", (int) (short) -1);
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.");
        java.util.List<org.example.Customer> customerList16 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList17 = rentalSystem0.getCustomers();
        java.lang.String str21 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found. not found.\".", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\". not found. not found. not found. not found.", (int) ' ');
        java.util.List<org.example.Vehicle> vehicleList22 = rentalSystem0.getVehicles();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found." + "'", str12, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.");
        org.junit.Assert.assertNotNull(customerList16);
        org.junit.Assert.assertNotNull(customerList17);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found. not found.\". not found." + "'", str21, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found. not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList22);
    }

    @Test
    public void test2676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2676");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.", "Vehicle with ID Vehicle with ID hi! not found. not found.", "No vehicles match the keyword \"hi!\".", (double) 1L);
        java.lang.String str13 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"hi!\". not found.");
        java.lang.String str17 = rentalSystem0.rentVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found.", (int) '4');
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.\". not found.", "No vehicles match the keyword \"\".", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found.\".", (double) 100.0f);
        java.lang.String str24 = rentalSystem0.returnVehicle("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\".");
        java.lang.String str28 = rentalSystem0.rentVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\". not found.\".\". not found.", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\".\". not found.", (int) '#');
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\"." + "'", str13, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\".");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found." + "'", str17, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\". not found." + "'", str24, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\". not found.");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\". not found.\".\". not found. not found." + "'", str28, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\". not found.\".\". not found. not found.");
    }

    @Test
    public void test2677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2677");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID  not found.", 100);
        java.lang.String str12 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID  not found.\".", "Vehicle with ID Vehicle with ID hi! not found. not found.", (int) (short) -1);
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.");
        java.util.List<org.example.Vehicle> vehicleList16 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList17 = rentalSystem0.getVehicles();
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\".", "Vehicle with ID Vehicle with ID hi! not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".", (double) 10L);
        java.lang.String str24 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found.\".");
        java.util.List<org.example.Customer> customerList25 = rentalSystem0.getCustomers();
        java.lang.String str29 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.\". not found.\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found. not found.\". not found.", 3);
        java.lang.String str31 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found. not found.\". not found. not found.\". not found.\".");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found." + "'", str12, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList16);
        org.junit.Assert.assertNotNull(vehicleList17);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found.\".\"." + "'", str24, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found.\".\".");
        org.junit.Assert.assertNotNull(customerList25);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.\". not found.\". not found." + "'", str29, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.\". not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found. not found.\". not found. not found.\". not found.\". not found." + "'", str31, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found. not found.\". not found. not found.\". not found.\". not found.");
    }

    @Test
    public void test2678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2678");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("hi!");
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        int int5 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str9 = rentalSystem0.rentVehicle("No vehicles match the keyword \"\".", "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.", (int) (short) 10);
        java.lang.String str13 = rentalSystem0.rentVehicle("No vehicles match the keyword \"\".", "", (-1));
        int int14 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str16 = rentalSystem0.returnVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\".");
        java.util.List<org.example.Vehicle> vehicleList17 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList18 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList19 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList20 = rentalSystem0.getVehicles();
        java.lang.String str22 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.");
        java.lang.String str26 = rentalSystem0.rentVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\". not found. not found.\". not found.", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\". not found.\". not found.\".\". not found. not found. not found.", (int) '4');
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID hi! not found." + "'", str3, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Vehicle with ID No vehicles match the keyword \"\". not found." + "'", str9, "Vehicle with ID No vehicles match the keyword \"\". not found.");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID No vehicles match the keyword \"\". not found." + "'", str13, "Vehicle with ID No vehicles match the keyword \"\". not found.");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found." + "'", str16, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found.");
        org.junit.Assert.assertNotNull(vehicleList17);
        org.junit.Assert.assertNotNull(customerList18);
        org.junit.Assert.assertNotNull(customerList19);
        org.junit.Assert.assertNotNull(vehicleList20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found." + "'", str22, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\". not found. not found.\". not found. not found." + "'", str26, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\". not found. not found.\". not found. not found.");
    }

    @Test
    public void test2679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2679");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID  not found.\".", "hi!");
        int int10 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.", "ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\".", 100.0d);
        int int16 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str20 = rentalSystem0.rentVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\". not found. not found. not found.\".", (int) (byte) 1);
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\". not found.\". not found.\".", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\".\". not found.");
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\". not found. not found. not found.\".", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found.\".\".\". not found. not found. not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.\". not found. not found.", 0.0d);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found. not found." + "'", str20, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found. not found.");
    }

    @Test
    public void test2680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2680");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList4 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID  not found. not found.", "hi!");
        java.lang.String str11 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID hi! not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".", (int) '4');
        java.lang.String str13 = rentalSystem0.returnVehicle("");
        rentalSystem0.addVehicle("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\".\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\".", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID  not found.\".\".", 1.0d);
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\". not found. not found. not found.", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.");
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\". not found. not found. not found.", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\".\".\". not found.");
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\". not found.\". not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\". not found.\". not found.", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found. not found.", (double) 10.0f);
        java.util.List<org.example.Customer> customerList30 = rentalSystem0.getCustomers();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(vehicleList4);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found." + "'", str11, "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID  not found." + "'", str13, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList30);
    }

    @Test
    public void test2681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2681");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID  not found. not found.", "No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        int int5 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID hi! not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".", "Vehicle with ID Vehicle with ID hi! not found. not found.", (double) 100.0f);
        java.lang.String str14 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found. not found.", "", 0);
        java.util.List<org.example.Vehicle> vehicleList15 = rentalSystem0.getVehicles();
        java.lang.Class<?> wildcardClass16 = rentalSystem0.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found. not found. not found." + "'", str14, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found. not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList15);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test2682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2682");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        rentalSystem0.addCustomer("hi!", "Vehicle with ID Vehicle with ID  not found. not found.");
        java.util.List<org.example.Vehicle> vehicleList9 = rentalSystem0.getVehicles();
        java.lang.String str13 = rentalSystem0.rentVehicle("hi!", "No vehicles match the keyword \"Vehicle with ID  not found.\".", (int) '4');
        java.util.List<org.example.Customer> customerList14 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList15 = rentalSystem0.getVehicles();
        int int16 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.", (double) 100L);
        java.lang.String str23 = rentalSystem0.searchVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\".");
        java.lang.String str25 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\". not found.\".");
        java.lang.String str27 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\". not found.");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList9);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID hi! not found." + "'", str13, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertNotNull(customerList14);
        org.junit.Assert.assertNotNull(vehicleList15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\".\"." + "'", str23, "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\".\".");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\". not found.\". not found." + "'", str25, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\". not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\". not found. not found." + "'", str27, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\". not found. not found.");
    }

    @Test
    public void test2683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2683");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID  not found.", 100);
        java.lang.String str12 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID  not found.\".", "Vehicle with ID Vehicle with ID hi! not found. not found.", (int) (short) -1);
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\". not found.", "No vehicles match the keyword \"Vehicle with ID  not found.\".", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.\".", (double) (short) 1);
        java.lang.String str19 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found.");
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"\". not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\". not found.\". not found.", 10.0d);
        java.lang.String str26 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found. not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found." + "'", str12, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found.\"." + "'", str19, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found.\".");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found. not found. not found. not found." + "'", str26, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found. not found. not found. not found.");
    }

    @Test
    public void test2684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2684");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.returnVehicle("");
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".", "No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".");
        java.lang.String str15 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\".", "No vehicles match the keyword \"Vehicle with ID  not found.\".", (int) (short) 100);
        java.lang.String str19 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found.", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".\".\".", 0);
        int int20 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Vehicle> vehicleList21 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList22 = rentalSystem0.getVehicles();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID  not found." + "'", str8, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found." + "'", str15, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found. not found." + "'", str19, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found. not found.");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(vehicleList21);
        org.junit.Assert.assertNotNull(vehicleList22);
    }

    @Test
    public void test2685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2685");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.lang.String str4 = rentalSystem0.searchVehicle("hi!");
        java.util.List<org.example.Customer> customerList5 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found. not found.\".");
        java.lang.String str12 = rentalSystem0.rentVehicle("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\".\".", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\".\".", 0);
        java.util.List<org.example.Vehicle> vehicleList13 = rentalSystem0.getVehicles();
        java.lang.String str15 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\".\". not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "No vehicles match the keyword \"hi!\"." + "'", str4, "No vehicles match the keyword \"hi!\".");
        org.junit.Assert.assertNotNull(customerList5);
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found. not found.\".\"." + "'", str8, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found. not found.\".\".");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\".\". not found." + "'", str12, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\".\". not found.");
        org.junit.Assert.assertNotNull(vehicleList13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\".\". not found. not found." + "'", str15, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\".\". not found. not found.");
    }

    @Test
    public void test2686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2686");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.searchVehicle("Vehicle with ID  not found.");
        rentalSystem0.addVehicle("hi!", "Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID hi! not found.", (double) 0);
        rentalSystem0.addCustomer("Vehicle with ID hi! not found.", "hi!");
        java.util.List<org.example.Vehicle> vehicleList17 = rentalSystem0.getVehicles();
        int int18 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList19 = rentalSystem0.getCustomers();
        int int20 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addCustomer("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\". not found.\".\". not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found. not found.\".");
        java.lang.String str25 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found. not found. not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "No vehicles match the keyword \"Vehicle with ID  not found.\"." + "'", str8, "No vehicles match the keyword \"Vehicle with ID  not found.\".");
        org.junit.Assert.assertNotNull(vehicleList17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(customerList19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found. not found. not found.\". not found.\"." + "'", str25, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found. not found. not found.\". not found.\".");
    }

    @Test
    public void test2687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2687");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList4 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID  not found. not found.", "hi!");
        java.lang.String str11 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID hi! not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".", (int) '4');
        java.lang.String str15 = rentalSystem0.rentVehicle("", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.", (int) (byte) -1);
        java.lang.String str17 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found. not found.\". not found. not found.");
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found. not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found. not found. not found.\".", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\".\".\". not found.", (double) '4');
        java.lang.String str24 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found. not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(vehicleList4);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found." + "'", str11, "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Vehicle with ID  not found." + "'", str15, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found. not found.\". not found. not found.\"." + "'", str17, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found. not found.\". not found. not found.\".");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found. not found. not found. not found." + "'", str24, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found. not found. not found. not found.");
    }

    @Test
    public void test2688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2688");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("");
        rentalSystem0.addVehicle("Vehicle with ID  not found.", "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.", "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.", (double) (short) 0);
        java.util.List<org.example.Vehicle> vehicleList9 = rentalSystem0.getVehicles();
        int int10 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str12 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found. not found.\". not found. not found.\".");
        int int13 = rentalSystem0.getAvailableVehicleCount();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID  not found." + "'", str3, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found. not found.\". not found. not found.\".\"." + "'", str12, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found. not found.\". not found. not found.\".\".");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
    }

    @Test
    public void test2689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2689");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID  not found.\".", "hi!");
        int int10 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.", "ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\".", 100.0d);
        java.lang.String str19 = rentalSystem0.rentVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.", (int) (short) 1);
        java.lang.String str21 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found. not found.");
        java.lang.String str23 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\". not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found. not found." + "'", str19, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found. not found.");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found. not found. not found." + "'", str21, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\". not found. not found.\"." + "'", str23, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\". not found. not found.\".");
    }

    @Test
    public void test2690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2690");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList5 = rentalSystem0.getVehicles();
        java.lang.String str9 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".", "No vehicles match the keyword \"Vehicle with ID  not found.\".", (int) ' ');
        java.lang.String str13 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID  not found. not found.", "", (int) (byte) -1);
        int int14 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.", "Vehicle with ID hi! not found.");
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\".", (double) 1.0f);
        rentalSystem0.addVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\". not found.\".", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found.", 0.0d);
        java.lang.String str29 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found.\".");
        java.util.List<org.example.Customer> customerList30 = rentalSystem0.getCustomers();
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\". not found.\". not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\". not found.", (double) '#');
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\".\". not found. not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found.\". not found.");
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\".\". not found. not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found. not found. not found. not found.\".");
        java.lang.Class<?> wildcardClass42 = rentalSystem0.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertNotNull(vehicleList5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found." + "'", str9, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str13, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found.\".\"." + "'", str29, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found.\".\".");
        org.junit.Assert.assertNotNull(customerList30);
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test2691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2691");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID  not found.", 100);
        java.lang.String str12 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID  not found.\".", "Vehicle with ID Vehicle with ID hi! not found. not found.", (int) (short) -1);
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.");
        java.lang.String str19 = rentalSystem0.rentVehicle("No vehicles match the keyword \"hi!\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".", (int) '#');
        java.lang.String str23 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found. not found.\".", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".\".", (int) 'a');
        rentalSystem0.addVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.\".\".", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.\".\".\".\".\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\". not found.", (double) '4');
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found." + "'", str12, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Vehicle with ID No vehicles match the keyword \"hi!\". not found." + "'", str19, "Vehicle with ID No vehicles match the keyword \"hi!\". not found.");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found. not found.\". not found." + "'", str23, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found. not found.\". not found.");
    }

    @Test
    public void test2692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2692");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        int int7 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addCustomer("hi!", "Vehicle with ID Vehicle with ID  not found. not found.");
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\". not found. not found. not found.\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n\".\".\". not found. not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found.", (double) 0);
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\".\". not found. not found. not found. not found. not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\". not found.\". not found. not found.");
        java.lang.String str20 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found. not found. not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found. not found. not found. not found.\"." + "'", str20, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found. not found. not found. not found.\".");
    }

    @Test
    public void test2693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2693");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.lang.String str4 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found.");
        java.util.List<org.example.Vehicle> vehicleList5 = rentalSystem0.getVehicles();
        int int6 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str10 = rentalSystem0.rentVehicle("No vehicles match the keyword \"No vehicles match the keyword \"ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n\".\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found. not found.", 0);
        java.util.List<org.example.Customer> customerList11 = rentalSystem0.getCustomers();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found." + "'", str4, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n\".\". not found." + "'", str10, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n\".\". not found.");
        org.junit.Assert.assertNotNull(customerList11);
    }

    @Test
    public void test2694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2694");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID  not found.\".", "hi!");
        rentalSystem0.addCustomer("No vehicles match the keyword \"hi!\".", "hi!");
        java.lang.String str14 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        java.lang.String str18 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found.\".", (int) (byte) 100);
        int int19 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str23 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle is already available.\".", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.\".\".\". not found. not found. not found.", (int) '#');
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found." + "'", str14, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found. not found." + "'", str18, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found. not found.");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle is already available.\". not found." + "'", str23, "Vehicle with ID No vehicles match the keyword \"Vehicle is already available.\". not found.");
    }

    @Test
    public void test2695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2695");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        rentalSystem0.addCustomer("hi!", "Vehicle with ID Vehicle with ID  not found. not found.");
        java.util.List<org.example.Vehicle> vehicleList9 = rentalSystem0.getVehicles();
        java.lang.String str13 = rentalSystem0.rentVehicle("hi!", "No vehicles match the keyword \"Vehicle with ID  not found.\".", (int) '4');
        java.util.List<org.example.Customer> customerList14 = rentalSystem0.getCustomers();
        java.lang.String str16 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found. not found. not found. not found. not found. not found.");
        int int17 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str19 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\". not found. not found.");
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n\".\".\". not found. not found. not found. not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\". not found.\".\".");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList9);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID hi! not found." + "'", str13, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertNotNull(customerList14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found. not found. not found. not found. not found. not found. not found." + "'", str16, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found. not found. not found. not found. not found. not found. not found.");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\". not found. not found. not found." + "'", str19, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\". not found. not found. not found.");
    }

    @Test
    public void test2696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2696");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID  not found. not found.", "No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        java.lang.String str8 = rentalSystem0.rentVehicle("hi!", "No vehicles match the keyword \"Vehicle with ID  not found.\".", 100);
        java.lang.String str10 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID hi! not found. not found.");
        rentalSystem0.addVehicle("ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.", "No vehicles match the keyword \"\".", (double) (byte) 10);
        java.lang.String str17 = rentalSystem0.returnVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".");
        java.util.List<org.example.Vehicle> vehicleList18 = rentalSystem0.getVehicles();
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found.\". not found.\". not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\". not found.", 0.0d);
        java.lang.String str27 = rentalSystem0.rentVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found.", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found. not found.\".\". not found.", 3);
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found.\". not found. not found.", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found. not found. not found.\". not found.\".");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID hi! not found." + "'", str8, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found." + "'", str10, "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found." + "'", str17, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.");
        org.junit.Assert.assertNotNull(vehicleList18);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found. not found." + "'", str27, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found. not found.");
    }

    @Test
    public void test2697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2697");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList5 = rentalSystem0.getVehicles();
        java.lang.String str9 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".", "No vehicles match the keyword \"Vehicle with ID  not found.\".", (int) ' ');
        java.lang.String str13 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID  not found. not found.", "", (int) (byte) -1);
        int int14 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.", "Vehicle with ID hi! not found.");
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\".", (double) 1.0f);
        rentalSystem0.addVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\". not found.\".", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found.", 0.0d);
        java.lang.String str29 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found.\".");
        java.util.List<org.example.Customer> customerList30 = rentalSystem0.getCustomers();
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\". not found.\". not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\". not found.", (double) '#');
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\".\". not found. not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found.\". not found.");
        java.util.List<org.example.Customer> customerList39 = rentalSystem0.getCustomers();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertNotNull(vehicleList5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found." + "'", str9, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str13, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found.\".\"." + "'", str29, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found.\".\".");
        org.junit.Assert.assertNotNull(customerList30);
        org.junit.Assert.assertNotNull(customerList39);
    }

    @Test
    public void test2698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2698");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID  not found.\".", "hi!");
        rentalSystem0.addCustomer("No vehicles match the keyword \"hi!\".", "hi!");
        java.lang.String str14 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        java.lang.String str16 = rentalSystem0.searchVehicle("");
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found. not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found.\".\".");
        java.util.List<org.example.Vehicle> vehicleList20 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList21 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList22 = rentalSystem0.getCustomers();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found." + "'", str14, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "No vehicles match the keyword \"\"." + "'", str16, "No vehicles match the keyword \"\".");
        org.junit.Assert.assertNotNull(vehicleList20);
        org.junit.Assert.assertNotNull(customerList21);
        org.junit.Assert.assertNotNull(customerList22);
    }

    @Test
    public void test2699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2699");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList5 = rentalSystem0.getVehicles();
        java.lang.String str9 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".", "No vehicles match the keyword \"Vehicle with ID  not found.\".", (int) ' ');
        java.lang.String str13 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID  not found. not found.", "", (int) (byte) -1);
        int int14 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.", "Vehicle with ID hi! not found.");
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\".", (double) 1.0f);
        rentalSystem0.addVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\". not found.\".", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found.", 0.0d);
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.\".", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\".\". not found.");
        rentalSystem0.addCustomer("No vehicles match the keyword \"hi!\".", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found. not found.");
        java.lang.String str35 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\".\".\".\". not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertNotNull(vehicleList5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found." + "'", str9, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str13, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\".\".\".\". not found.\"." + "'", str35, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\".\".\".\". not found.\".");
    }

    @Test
    public void test2700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2700");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList7 = rentalSystem0.getVehicles();
        rentalSystem0.addVehicle("Vehicle with ID  not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".", 1.0d);
        java.util.List<org.example.Customer> customerList13 = rentalSystem0.getCustomers();
        // The following exception was thrown during execution in test generation
        try {
            rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found. not found.\".\". not found. not found.\".", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found. not found. not found.\".\". not found.\".\".", "", (double) 0L);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Type cannot be null or empty");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertNotNull(vehicleList7);
        org.junit.Assert.assertNotNull(customerList13);
    }

    @Test
    public void test2701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2701");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("");
        rentalSystem0.addVehicle("Vehicle with ID  not found.", "Vehicle with ID hi! not found.", "Vehicle with ID Vehicle with ID hi! not found. not found.", (double) '4');
        java.lang.String str10 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".");
        int int11 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str13 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found. not found.");
        java.util.List<org.example.Vehicle> vehicleList14 = rentalSystem0.getVehicles();
        java.lang.Class<?> wildcardClass15 = rentalSystem0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID  not found." + "'", str3, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\". not found." + "'", str10, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\". not found.");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found. not found. not found." + "'", str13, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found. not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test2702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2702");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("");
        int int4 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList5 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID  not found." + "'", str3, "Vehicle with ID  not found.");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(customerList5);
        org.junit.Assert.assertNotNull(customerList6);
    }

    @Test
    public void test2703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2703");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("hi!");
        rentalSystem0.addCustomer("ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n", "No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".");
        java.lang.String str10 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".", (int) (byte) 1);
        java.lang.String str14 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found. not found.", "No vehicles match the keyword \"No vehicles match the keyword \"\".\".", (-1));
        int int15 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Vehicle> vehicleList16 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\".\".\". not found. not found. not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\". not found.\". not found. not found.");
        java.util.List<org.example.Customer> customerList20 = rentalSystem0.getCustomers();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID hi! not found." + "'", str3, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found. not found." + "'", str10, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found. not found. not found." + "'", str14, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found. not found. not found.");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(vehicleList16);
        org.junit.Assert.assertNotNull(customerList20);
    }

    @Test
    public void test2704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2704");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.searchVehicle("Vehicle with ID  not found.");
        rentalSystem0.addVehicle("hi!", "Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID hi! not found.", (double) 0);
        rentalSystem0.addCustomer("Vehicle with ID hi! not found.", "hi!");
        java.lang.String str18 = rentalSystem0.returnVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".");
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\".", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\".");
        java.lang.String str23 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found. not found.");
        java.util.List<org.example.Customer> customerList24 = rentalSystem0.getCustomers();
        java.lang.Class<?> wildcardClass25 = rentalSystem0.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "No vehicles match the keyword \"Vehicle with ID  not found.\"." + "'", str8, "No vehicles match the keyword \"Vehicle with ID  not found.\".");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found." + "'", str18, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found. not found. not found." + "'", str23, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found. not found. not found.");
        org.junit.Assert.assertNotNull(customerList24);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test2705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2705");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList4 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID  not found. not found.", "hi!");
        java.lang.String str11 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID hi! not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".", (int) '4');
        java.lang.String str13 = rentalSystem0.returnVehicle("");
        int int14 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str16 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\". not found.\".");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(vehicleList4);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found." + "'", str11, "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID  not found." + "'", str13, "Vehicle with ID  not found.");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\". not found.\".\"." + "'", str16, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\". not found.\".\".");
    }

    @Test
    public void test2706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2706");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        rentalSystem0.addCustomer("hi!", "Vehicle with ID Vehicle with ID  not found. not found.");
        int int9 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList10 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found. not found. not found. not found. not found.", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found. not found.\". not found.\".");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(customerList10);
    }

    @Test
    public void test2707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2707");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList7 = rentalSystem0.getVehicles();
        java.lang.String str11 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID hi! not found.\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.", (int) (byte) 100);
        int int12 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Vehicle> vehicleList13 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList14 = rentalSystem0.getCustomers();
        java.lang.String str16 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.");
        java.lang.String str20 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found. not found.", 0);
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found. not found.", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\".\".\".");
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\". not found. not found. not found.\".\". not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found. not found. not found.\".\".", 1.0d);
        java.lang.String str32 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found. not found.\". not found. not found.\".", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\". not found.\".\".", (-1));
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertNotNull(vehicleList7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found." + "'", str11, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(vehicleList13);
        org.junit.Assert.assertNotNull(customerList14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found. not found." + "'", str16, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found. not found." + "'", str20, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found. not found.\". not found. not found.\". not found." + "'", str32, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found. not found.\". not found. not found.\". not found.");
    }

    @Test
    public void test2708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2708");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID  not found. not found.", "No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        java.lang.String str8 = rentalSystem0.rentVehicle("hi!", "No vehicles match the keyword \"Vehicle with ID  not found.\".", 100);
        java.lang.String str10 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID hi! not found. not found.");
        java.lang.String str14 = rentalSystem0.rentVehicle("No vehicles match the keyword \"hi!\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.", 10);
        java.util.List<org.example.Customer> customerList15 = rentalSystem0.getCustomers();
        java.lang.String str19 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found. not found.\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\". not found. not found.", (int) ' ');
        int int20 = rentalSystem0.getAvailableVehicleCount();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID hi! not found." + "'", str8, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found." + "'", str10, "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID No vehicles match the keyword \"hi!\". not found." + "'", str14, "Vehicle with ID No vehicles match the keyword \"hi!\". not found.");
        org.junit.Assert.assertNotNull(customerList15);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found. not found.\". not found." + "'", str19, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found. not found.\". not found.");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
    }

    @Test
    public void test2709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2709");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList4 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID  not found. not found.", "hi!");
        java.lang.String str11 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID hi! not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".", (int) '4');
        java.lang.String str13 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.");
        int int14 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str16 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\". not found. not found.");
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found. not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found.", 10.0d);
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found. not found. not found.", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found. not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.", (double) 1);
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\". not found.\". not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\".", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found. not found.", (double) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found.\". not found. not found.", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.\". not found.\".\".\".\". not found.\".", "ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n", (double) (-1L));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Daily rate cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(vehicleList4);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found." + "'", str11, "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found." + "'", str13, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\". not found. not found. not found." + "'", str16, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\". not found. not found. not found.");
    }

    @Test
    public void test2710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2710");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID  not found.\".", "hi!");
        java.lang.String str11 = rentalSystem0.returnVehicle("");
        int int12 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str14 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found.");
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.\". not found. not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n\". not found. not found.");
        int int18 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Vehicle> vehicleList19 = rentalSystem0.getVehicles();
        java.lang.String str23 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\".\". not found. not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.\".", (int) ' ');
        java.lang.String str25 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID  not found.\".");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID  not found." + "'", str11, "Vehicle with ID  not found.");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found.\"." + "'", str14, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found.\".");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(vehicleList19);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\".\". not found. not found. not found. not found." + "'", str23, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\".\". not found. not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found." + "'", str25, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.");
    }

    @Test
    public void test2711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2711");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.returnVehicle("");
        int int9 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str11 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.");
        java.lang.String str15 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID  not found. not found.", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".", (int) (short) 0);
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.");
        java.lang.String str20 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\". not found.");
        int int21 = rentalSystem0.getAvailableVehicleCount();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID  not found." + "'", str8, "Vehicle with ID  not found.");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found." + "'", str11, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str15, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\". not found.\"." + "'", str20, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\". not found.\".");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
    }

    @Test
    public void test2712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2712");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID  not found.\".", "hi!");
        java.lang.String str11 = rentalSystem0.returnVehicle("");
        int int12 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str14 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\". not found. not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID  not found." + "'", str11, "Vehicle with ID  not found.");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\". not found. not found. not found. not found." + "'", str14, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\". not found. not found. not found. not found.");
    }

    @Test
    public void test2713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2713");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID  not found. not found.", "No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        java.util.List<org.example.Vehicle> vehicleList5 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID No vehicles match the keyword \"\". not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.");
        java.lang.String str12 = rentalSystem0.rentVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\".\". not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\". not found.", 0);
        int int13 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str15 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID ID: Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found., Model: Vehicle with ID Vehicle with ID hi! not found. not found., Type: No vehicles match the keyword \"hi!\"., Daily Rate: $1.0, Status: Available\nID: Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.\". not found., Model: No vehicles match the keyword \"\"., Type: No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found.\"., Daily Rate: $100.0, Status: Available\n not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList5);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\".\". not found. not found." + "'", str12, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\".\". not found. not found.");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found., Model: Vehicle with ID Vehicle with ID hi! not found. not found., Type: No vehicles match the keyword \"hi!\"., Daily Rate: $1.0, Status: Available\nID: Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.\". not found., Model: No vehicles match the keyword \"\"., Type: No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found.\"., Daily Rate: $100.0, Status: Available\n not found. not found.\"." + "'", str15, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found., Model: Vehicle with ID Vehicle with ID hi! not found. not found., Type: No vehicles match the keyword \"hi!\"., Daily Rate: $1.0, Status: Available\nID: Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.\". not found., Model: No vehicles match the keyword \"\"., Type: No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found.\"., Daily Rate: $100.0, Status: Available\n not found. not found.\".");
    }

    @Test
    public void test2714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2714");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID  not found. not found.", "No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        java.lang.String str8 = rentalSystem0.rentVehicle("hi!", "No vehicles match the keyword \"Vehicle with ID  not found.\".", 100);
        java.lang.String str10 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID hi! not found. not found.");
        java.lang.String str12 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found. not found.");
        java.lang.String str14 = rentalSystem0.searchVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\".");
        java.lang.String str18 = rentalSystem0.rentVehicle("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\".\".", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\". not found. not found. not found. not found. not found.", (int) (byte) 100);
        java.lang.String str20 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.\". not found. not found.");
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found.\".\". not found.\". not found.\". not found. not found.", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found. not found. not found. not found.", (double) '#');
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID hi! not found." + "'", str8, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found." + "'", str10, "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found. not found.\"." + "'", str12, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found. not found.\".");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\".\"." + "'", str14, "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\".\".");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\".\". not found." + "'", str18, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\".\". not found.");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.\". not found. not found.\"." + "'", str20, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.\". not found. not found.\".");
    }

    @Test
    public void test2715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2715");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID  not found.\".", "hi!");
        java.lang.String str11 = rentalSystem0.returnVehicle("Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.");
        java.util.List<org.example.Vehicle> vehicleList12 = rentalSystem0.getVehicles();
        java.lang.String str14 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found.");
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\". not found. not found.", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found. not found.");
        int int18 = rentalSystem0.getAvailableVehicleCount();
        int int19 = rentalSystem0.getAvailableVehicleCount();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found." + "'", str11, "Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found. not found." + "'", str14, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found. not found.");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
    }

    @Test
    public void test2716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2716");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.searchVehicle("Vehicle with ID  not found.");
        rentalSystem0.addVehicle("hi!", "Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID hi! not found.", (double) 0);
        java.util.List<org.example.Vehicle> vehicleList14 = rentalSystem0.getVehicles();
        java.lang.String str16 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\". not found.");
        java.util.List<org.example.Customer> customerList17 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList18 = rentalSystem0.getVehicles();
        java.lang.Class<?> wildcardClass19 = vehicleList18.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "No vehicles match the keyword \"Vehicle with ID  not found.\"." + "'", str8, "No vehicles match the keyword \"Vehicle with ID  not found.\".");
        org.junit.Assert.assertNotNull(vehicleList14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\". not found.\"." + "'", str16, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\". not found.\".");
        org.junit.Assert.assertNotNull(customerList17);
        org.junit.Assert.assertNotNull(vehicleList18);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test2717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2717");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList7 = rentalSystem0.getVehicles();
        java.lang.String str11 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID hi! not found.\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.", (int) (byte) 100);
        java.lang.String str13 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".");
        java.lang.String str17 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".", (int) (byte) -1);
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\". not found.", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found.", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found.\".", 0.0d);
        java.util.List<org.example.Customer> customerList23 = rentalSystem0.getCustomers();
        java.lang.String str25 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.\". not found. not found.\".");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertNotNull(vehicleList7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found." + "'", str11, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\"." + "'", str13, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\".");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found." + "'", str17, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.");
        org.junit.Assert.assertNotNull(customerList23);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.\". not found. not found.\".\"." + "'", str25, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.\". not found. not found.\".\".");
    }

    @Test
    public void test2718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2718");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID  not found. not found.", "No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        java.lang.String str8 = rentalSystem0.rentVehicle("hi!", "No vehicles match the keyword \"Vehicle with ID  not found.\".", 100);
        java.lang.String str10 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID hi! not found. not found.");
        java.lang.String str12 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.");
        java.lang.String str16 = rentalSystem0.rentVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\". not found.\". not found.\".\". not found.", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found. not found.", (int) ' ');
        rentalSystem0.addCustomer("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\". not found. not found. not found. not found.\". not found.", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.\". not found. not found. not found.");
        int int20 = rentalSystem0.getAvailableVehicleCount();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID hi! not found." + "'", str8, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found." + "'", str10, "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found." + "'", str12, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\". not found.\". not found.\".\". not found. not found." + "'", str16, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\". not found.\". not found.\".\". not found. not found.");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
    }

    @Test
    public void test2719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2719");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID  not found. not found.", "No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        java.lang.String str8 = rentalSystem0.rentVehicle("hi!", "No vehicles match the keyword \"Vehicle with ID  not found.\".", 100);
        java.lang.String str10 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID hi! not found. not found.");
        java.lang.String str12 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.");
        java.lang.String str14 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        java.lang.String str16 = rentalSystem0.returnVehicle("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\".\".\".");
        java.lang.String str20 = rentalSystem0.rentVehicle("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\".\".\".", "Vehicle with ID Vehicle with ID ID: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Model: No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\"., Type: No vehicles match the keyword \"Vehicle with ID hi! not found.\"., Daily Rate: $100.0, Status: Available\n not found. not found.", (int) (short) 0);
        java.lang.String str24 = rentalSystem0.rentVehicle("No vehicles match the keyword \"ID: Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found. not found. not found., Model: No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID  not found.\".\"., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found.\"., Daily Rate: $1.0, Status: Available\n\".", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found. not found.\".\".", 0);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID hi! not found." + "'", str8, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found." + "'", str10, "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found." + "'", str12, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.\"." + "'", str14, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.\".");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\".\".\". not found." + "'", str16, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\".\".\". not found.");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\".\".\". not found." + "'", str20, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\".\".\". not found.");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Vehicle with ID No vehicles match the keyword \"ID: Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found. not found. not found., Model: No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID  not found.\".\"., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found.\"., Daily Rate: $1.0, Status: Available\n\". not found." + "'", str24, "Vehicle with ID No vehicles match the keyword \"ID: Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found. not found. not found., Model: No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID  not found.\".\"., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found.\"., Daily Rate: $1.0, Status: Available\n\". not found.");
    }

    @Test
    public void test2720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2720");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList4 = rentalSystem0.getVehicles();
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.", "ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.", (double) (byte) 100);
        rentalSystem0.addVehicle("Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.", "Vehicle with ID hi! not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found.", 10.0d);
        java.lang.String str18 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found.\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found. not found. not found.\". not found.", (int) '4');
        java.lang.String str22 = rentalSystem0.rentVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found.\".\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\". not found. not found. not found.\".", (int) (byte) 0);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(vehicleList4);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found.\". not found." + "'", str18, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found.\".\". not found." + "'", str22, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found.\".\". not found.");
    }

    @Test
    public void test2721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2721");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID  not found.\".", "hi!");
        int int10 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str12 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID  not found. not found.");
        java.lang.String str16 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.", (int) 'a');
        java.lang.String str18 = rentalSystem0.searchVehicle("Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.");
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.\". not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found. not found.\".", (double) ' ');
        int int24 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Vehicle> vehicleList25 = rentalSystem0.getVehicles();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str12, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found." + "'", str16, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\"." + "'", str18, "No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNotNull(vehicleList25);
    }

    @Test
    public void test2722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2722");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("");
        java.util.List<org.example.Vehicle> vehicleList4 = rentalSystem0.getVehicles();
        java.lang.String str6 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID  not found. not found.");
        int int7 = rentalSystem0.getAvailableVehicleCount();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID  not found." + "'", str3, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str6, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
    }

    @Test
    public void test2723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2723");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.returnVehicle("Vehicle with ID  not found.");
        java.lang.String str10 = rentalSystem0.returnVehicle("hi!");
        java.lang.String str12 = rentalSystem0.searchVehicle("");
        rentalSystem0.addCustomer("Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".");
        java.lang.String str19 = rentalSystem0.rentVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.", (int) '4');
        java.util.List<org.example.Customer> customerList20 = rentalSystem0.getCustomers();
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\".\". not found.\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\".\". not found. not found.\". not found.", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found. not found. not found.", (double) 'a');
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID  not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID  not found. not found.");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID hi! not found." + "'", str10, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "No vehicles match the keyword \"\"." + "'", str12, "No vehicles match the keyword \"\".");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found." + "'", str19, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found.");
        org.junit.Assert.assertNotNull(customerList20);
    }

    @Test
    public void test2724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2724");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        rentalSystem0.addCustomer("hi!", "Vehicle with ID Vehicle with ID  not found. not found.");
        java.util.List<org.example.Vehicle> vehicleList9 = rentalSystem0.getVehicles();
        java.lang.String str11 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID  not found. not found.");
        java.lang.String str15 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\". not found.\". not found. not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found. not found.\".", 2);
        rentalSystem0.addVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found. not found. not found.\".\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\". not found. not found. not found.\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found. not found.", (double) 1.0f);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList9);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"." + "'", str11, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\". not found.\". not found. not found. not found. not found." + "'", str15, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\". not found.\". not found. not found. not found. not found.");
    }

    @Test
    public void test2725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2725");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.searchVehicle("Vehicle with ID  not found.");
        rentalSystem0.addVehicle("hi!", "Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID hi! not found.", (double) 0);
        rentalSystem0.addCustomer("Vehicle with ID hi! not found.", "hi!");
        java.lang.String str18 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.");
        java.lang.String str20 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.");
        int int21 = rentalSystem0.getAvailableVehicleCount();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "No vehicles match the keyword \"Vehicle with ID  not found.\"." + "'", str8, "No vehicles match the keyword \"Vehicle with ID  not found.\".");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\"." + "'", str18, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\".");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.\"." + "'", str20, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.\".");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
    }

    @Test
    public void test2726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2726");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.lang.String str4 = rentalSystem0.searchVehicle("hi!");
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID  not found.\".", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\".", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\".", 100.0d);
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.\". not found.");
        java.util.List<org.example.Customer> customerList13 = rentalSystem0.getCustomers();
        java.lang.String str15 = rentalSystem0.searchVehicle("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\". not found.\".\".\".");
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found.\". not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\". not found.\". not found.", (double) 1L);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "No vehicles match the keyword \"hi!\"." + "'", str4, "No vehicles match the keyword \"hi!\".");
        org.junit.Assert.assertNotNull(customerList13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\". not found.\".\".\".\"." + "'", str15, "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\". not found.\".\".\".\".");
    }

    @Test
    public void test2727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2727");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.searchVehicle("Vehicle with ID  not found.");
        rentalSystem0.addVehicle("hi!", "Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID hi! not found.", (double) 0);
        rentalSystem0.addCustomer("ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\".");
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.\". not found.", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\". not found.\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".", (double) (byte) 10);
        java.lang.String str25 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found. not found.", (int) ' ');
        java.lang.String str27 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found. not found.\". not found. not found.\".");
        java.util.List<org.example.Vehicle> vehicleList28 = rentalSystem0.getVehicles();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "No vehicles match the keyword \"Vehicle with ID  not found.\"." + "'", str8, "No vehicles match the keyword \"Vehicle with ID  not found.\".");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\". not found." + "'", str25, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found. not found.\". not found. not found.\".\"." + "'", str27, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found. not found.\". not found. not found.\".\".");
        org.junit.Assert.assertNotNull(vehicleList28);
    }

    @Test
    public void test2728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2728");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("hi!");
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        int int5 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str9 = rentalSystem0.rentVehicle("No vehicles match the keyword \"\".", "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.", (int) (short) 10);
        java.lang.String str13 = rentalSystem0.rentVehicle("No vehicles match the keyword \"\".", "", (-1));
        int int14 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str16 = rentalSystem0.returnVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\".");
        java.util.List<org.example.Vehicle> vehicleList17 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList18 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList19 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList20 = rentalSystem0.getVehicles();
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found. not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found. not found. not found.\".", (double) (short) 1);
        java.lang.String str27 = rentalSystem0.returnVehicle("Vehicle is already available.");
        java.util.List<org.example.Customer> customerList28 = rentalSystem0.getCustomers();
        java.lang.String str30 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\". not found. not found.");
        java.lang.String str32 = rentalSystem0.returnVehicle("");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID hi! not found." + "'", str3, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Vehicle with ID No vehicles match the keyword \"\". not found." + "'", str9, "Vehicle with ID No vehicles match the keyword \"\". not found.");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID No vehicles match the keyword \"\". not found." + "'", str13, "Vehicle with ID No vehicles match the keyword \"\". not found.");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found." + "'", str16, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found.");
        org.junit.Assert.assertNotNull(vehicleList17);
        org.junit.Assert.assertNotNull(customerList18);
        org.junit.Assert.assertNotNull(customerList19);
        org.junit.Assert.assertNotNull(vehicleList20);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Vehicle with ID Vehicle is already available. not found." + "'", str27, "Vehicle with ID Vehicle is already available. not found.");
        org.junit.Assert.assertNotNull(customerList28);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\". not found. not found.\"." + "'", str30, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\". not found. not found.\".");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Vehicle with ID  not found." + "'", str32, "Vehicle with ID  not found.");
    }

    @Test
    public void test2729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2729");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID  not found.", 100);
        java.lang.String str12 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID  not found.\".", "Vehicle with ID Vehicle with ID hi! not found. not found.", (int) (short) -1);
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.");
        java.util.List<org.example.Customer> customerList16 = rentalSystem0.getCustomers();
        java.lang.String str18 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\". not found.\". not found. not found. not found. not found.");
        java.lang.String str20 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\". not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found." + "'", str12, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.");
        org.junit.Assert.assertNotNull(customerList16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\". not found.\". not found. not found. not found. not found.\"." + "'", str18, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\". not found.\". not found. not found. not found. not found.\".");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\". not found.\". not found.\"." + "'", str20, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\". not found.\". not found.\".");
    }

    @Test
    public void test2730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2730");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.searchVehicle("Vehicle with ID  not found.");
        rentalSystem0.addVehicle("hi!", "Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID hi! not found.", (double) 0);
        rentalSystem0.addCustomer("ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\".");
        java.util.List<org.example.Vehicle> vehicleList17 = rentalSystem0.getVehicles();
        java.lang.String str19 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\". not found.");
        java.util.List<org.example.Customer> customerList20 = rentalSystem0.getCustomers();
        // The following exception was thrown during execution in test generation
        try {
            rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found. not found. not found.", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\". not found.\".", (double) (-1L));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Daily rate cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "No vehicles match the keyword \"Vehicle with ID  not found.\"." + "'", str8, "No vehicles match the keyword \"Vehicle with ID  not found.\".");
        org.junit.Assert.assertNotNull(vehicleList17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\". not found.\"." + "'", str19, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\". not found.\".");
        org.junit.Assert.assertNotNull(customerList20);
    }

    @Test
    public void test2731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2731");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID  not found.", 100);
        java.lang.String str12 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID  not found.\".", "Vehicle with ID Vehicle with ID hi! not found. not found.", (int) (short) -1);
        java.lang.String str14 = rentalSystem0.searchVehicle("hi!");
        java.util.List<org.example.Vehicle> vehicleList15 = rentalSystem0.getVehicles();
        java.lang.String str17 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID hi! not found. not found.");
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found. not found. not found.");
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found. not found. not found. not found. not found.", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.\".\".\".\".\".", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found.\". not found.\". not found.\".", 100.0d);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found." + "'", str12, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "No vehicles match the keyword \"hi!\"." + "'", str14, "No vehicles match the keyword \"hi!\".");
        org.junit.Assert.assertNotNull(vehicleList15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\"." + "'", str17, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\".");
    }

    @Test
    public void test2732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2732");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("");
        int int4 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str8 = rentalSystem0.rentVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found.", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found. not found.", (int) '#');
        java.util.List<org.example.Vehicle> vehicleList9 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found.\".\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.\". not found.");
        java.util.List<org.example.Customer> customerList13 = rentalSystem0.getCustomers();
        java.lang.String str15 = rentalSystem0.searchVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found. not found.\".\".");
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found. not found.\". not found. not found. not found. not found. not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found.\". not found. not found.");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID  not found." + "'", str3, "Vehicle with ID  not found.");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList9);
        org.junit.Assert.assertNotNull(customerList13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found. not found.\".\".\"." + "'", str15, "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found. not found.\".\".\".");
    }

    @Test
    public void test2733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2733");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("");
        int int4 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str8 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\". not found. not found. not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\". not found. not found.\".", 100);
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\". not found.");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID  not found." + "'", str3, "Vehicle with ID  not found.");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\". not found. not found. not found. not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\". not found. not found. not found. not found. not found.");
    }

    @Test
    public void test2734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2734");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList5 = rentalSystem0.getVehicles();
        java.lang.String str9 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".", "No vehicles match the keyword \"Vehicle with ID  not found.\".", (int) ' ');
        java.lang.String str11 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        java.lang.Class<?> wildcardClass12 = rentalSystem0.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertNotNull(vehicleList5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found." + "'", str9, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found." + "'", str11, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.");
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test2735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2735");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList5 = rentalSystem0.getVehicles();
        java.lang.String str9 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".", "No vehicles match the keyword \"Vehicle with ID  not found.\".", (int) ' ');
        java.lang.String str11 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        java.util.List<org.example.Customer> customerList12 = rentalSystem0.getCustomers();
        java.lang.String str14 = rentalSystem0.returnVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.\".\".");
        java.util.List<org.example.Vehicle> vehicleList15 = rentalSystem0.getVehicles();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertNotNull(vehicleList5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found." + "'", str9, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found." + "'", str11, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.");
        org.junit.Assert.assertNotNull(customerList12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.\".\". not found." + "'", str14, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.\".\". not found.");
        org.junit.Assert.assertNotNull(vehicleList15);
    }

    @Test
    public void test2736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2736");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.lang.String str9 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.", (int) (byte) 1);
        java.lang.String str11 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\". not found.");
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found.\". not found.");
        java.lang.String str16 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\". not found.\".");
        int int17 = rentalSystem0.getAvailableVehicleCount();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found." + "'", str9, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\". not found.\"." + "'", str11, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\". not found.\".");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\". not found.\". not found." + "'", str16, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\". not found.\". not found.");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
    }

    @Test
    public void test2737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2737");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.returnVehicle("Vehicle with ID  not found.");
        int int9 = rentalSystem0.getAvailableVehicleCount();
        int int10 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\". not found.\". not found. not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\". not found.\".\". not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID  not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID  not found. not found.");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
    }

    @Test
    public void test2738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2738");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID  not found.", 100);
        java.lang.String str12 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID  not found.\".", "Vehicle with ID Vehicle with ID hi! not found. not found.", (int) (short) -1);
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.", "ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n", "Vehicle with ID Vehicle with ID hi! not found. not found.", 100.0d);
        java.util.List<org.example.Vehicle> vehicleList18 = rentalSystem0.getVehicles();
        java.lang.String str20 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".");
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found. not found.", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found. not found. not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.", 0.0d);
        java.util.List<org.example.Vehicle> vehicleList26 = rentalSystem0.getVehicles();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found." + "'", str12, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\"." + "'", str20, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".");
        org.junit.Assert.assertNotNull(vehicleList26);
    }

    @Test
    public void test2739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2739");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        java.lang.String str7 = rentalSystem0.searchVehicle("Vehicle with ID hi! not found.");
        java.util.List<org.example.Customer> customerList8 = rentalSystem0.getCustomers();
        java.lang.String str10 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\". not found.\". not found. not found. not found. not found.");
        int int11 = rentalSystem0.getAvailableVehicleCount();
        java.lang.Class<?> wildcardClass12 = rentalSystem0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "No vehicles match the keyword \"Vehicle with ID hi! not found.\"." + "'", str7, "No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        org.junit.Assert.assertNotNull(customerList8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\". not found.\". not found. not found. not found. not found.\"." + "'", str10, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\". not found.\". not found. not found. not found. not found.\".");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test2740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2740");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.");
        rentalSystem0.addCustomer("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\".");
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\".", "No vehicles match the keyword \"Vehicle with ID hi! not found.\".", (double) (short) 100);
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\". not found.\".", "ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found.", 10.0d);
        java.lang.String str24 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID  not found.\".");
        java.util.List<org.example.Vehicle> vehicleList25 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList26 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList27 = rentalSystem0.getVehicles();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID  not found.\".\"." + "'", str24, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID  not found.\".\".");
        org.junit.Assert.assertNotNull(vehicleList25);
        org.junit.Assert.assertNotNull(vehicleList26);
        org.junit.Assert.assertNotNull(vehicleList27);
    }

    @Test
    public void test2741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2741");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("");
        int int4 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str8 = rentalSystem0.rentVehicle("", "", (int) '#');
        java.lang.String str10 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\". not found.");
        java.lang.String str12 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found.");
        java.util.List<org.example.Vehicle> vehicleList13 = rentalSystem0.getVehicles();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID  not found." + "'", str3, "Vehicle with ID  not found.");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID  not found." + "'", str8, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\". not found. not found." + "'", str10, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\". not found. not found.");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found.\"." + "'", str12, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found.\".");
        org.junit.Assert.assertNotNull(vehicleList13);
    }

    @Test
    public void test2742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2742");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("");
        int int4 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Vehicle> vehicleList5 = rentalSystem0.getVehicles();
        java.lang.String str7 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.");
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".", "Vehicle with ID hi! not found.");
        java.lang.String str12 = rentalSystem0.searchVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\".");
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".", "ID: Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found., Model: Vehicle with ID Vehicle with ID hi! not found. not found., Type: No vehicles match the keyword \"hi!\"., Daily Rate: $1.0, Status: Available\nID: Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.\". not found., Model: No vehicles match the keyword \"\"., Type: No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found.\"., Daily Rate: $100.0, Status: Available\n", "Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found.", 1.0d);
        java.lang.String str19 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.\".");
        int int20 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found. not found.\".", "Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.\". not found. not found.\".", (double) 100);
        // The following exception was thrown during execution in test generation
        try {
            rentalSystem0.addVehicle("", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\". not found. not found. not found.", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n\".\". not found. not found. not found. not found.", (double) (-1.0f));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Vehicle ID cannot be null or empty");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID  not found." + "'", str3, "Vehicle with ID  not found.");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(vehicleList5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.\"." + "'", str7, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.\".");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\".\"." + "'", str12, "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\".\".");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.\".\"." + "'", str19, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.\".\".");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
    }

    @Test
    public void test2743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2743");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.returnVehicle("Vehicle with ID  not found.");
        int int9 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str11 = rentalSystem0.returnVehicle("Vehicle with ID  not found.");
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.", "No vehicles match the keyword \"Vehicle with ID  not found.\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".", 1.0d);
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.\".", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found. not found. not found.");
        int int20 = rentalSystem0.getAvailableVehicleCount();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID  not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID  not found. not found.");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID Vehicle with ID  not found. not found." + "'", str11, "Vehicle with ID Vehicle with ID  not found. not found.");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
    }

    @Test
    public void test2744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2744");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        int int2 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        int int4 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".", "No vehicles match the keyword \"Vehicle with ID  not found.\".");
        int int8 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str10 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\".");
        java.util.List<org.example.Vehicle> vehicleList11 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList12 = rentalSystem0.getVehicles();
        java.lang.String str16 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\". not found. not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\".\".", 10);
        java.util.List<org.example.Customer> customerList17 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList18 = rentalSystem0.getCustomers();
        java.lang.String str20 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\". not found. not found. not found.\".");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found." + "'", str10, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList11);
        org.junit.Assert.assertNotNull(vehicleList12);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\". not found. not found. not found." + "'", str16, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\". not found. not found. not found.");
        org.junit.Assert.assertNotNull(customerList17);
        org.junit.Assert.assertNotNull(customerList18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\". not found. not found. not found.\". not found." + "'", str20, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\". not found. not found. not found.\". not found.");
    }

    @Test
    public void test2745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2745");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.returnVehicle("Vehicle with ID  not found.");
        java.lang.String str10 = rentalSystem0.returnVehicle("hi!");
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\".", (double) 2);
        rentalSystem0.addVehicle("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\".\".\". not found. not found. not found.\".", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\".\".\". not found.", (double) (byte) 100);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID  not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID  not found. not found.");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID hi! not found." + "'", str10, "Vehicle with ID hi! not found.");
    }

    @Test
    public void test2746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2746");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.searchVehicle("Vehicle with ID  not found.");
        rentalSystem0.addVehicle("hi!", "Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID hi! not found.", (double) 0);
        rentalSystem0.addCustomer("Vehicle with ID hi! not found.", "hi!");
        java.lang.String str18 = rentalSystem0.returnVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".");
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID hi! not found.\".", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.", (double) (byte) 10);
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found.", 1.0d);
        java.lang.String str32 = rentalSystem0.rentVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found.", "", (-1));
        java.lang.String str34 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\". not found.\".");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "No vehicles match the keyword \"Vehicle with ID  not found.\"." + "'", str8, "No vehicles match the keyword \"Vehicle with ID  not found.\".");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found." + "'", str18, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found. not found." + "'", str32, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found. not found.");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\". not found.\".\"." + "'", str34, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\". not found.\".\".");
    }

    @Test
    public void test2747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2747");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID  not found.\".", "hi!");
        int int10 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.", "ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\".", 100.0d);
        java.lang.String str19 = rentalSystem0.rentVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.", (int) (short) 1);
        java.lang.String str21 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found. not found.");
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\".\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.\". not found.");
        rentalSystem0.addVehicle("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.\". not found.", "Vehicle with ID  not found.", (double) 1L);
        java.lang.String str31 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.\". not found. not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found. not found." + "'", str19, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found. not found.");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found. not found. not found." + "'", str21, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.\". not found. not found. not found.\"." + "'", str31, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.\". not found. not found. not found.\".");
    }

    @Test
    public void test2748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2748");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList7 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found.", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".");
        java.util.List<org.example.Vehicle> vehicleList11 = rentalSystem0.getVehicles();
        java.lang.String str15 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found.", (int) (byte) 10);
        int int16 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\". not found. not found. not found.", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found. not found. not found.\".\". not found.\".\". not found.");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertNotNull(vehicleList7);
        org.junit.Assert.assertNotNull(vehicleList11);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.\". not found." + "'", str15, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.\". not found.");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
    }

    @Test
    public void test2749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2749");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.searchVehicle("Vehicle with ID  not found.");
        rentalSystem0.addVehicle("hi!", "Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID hi! not found.", (double) 0);
        java.util.List<org.example.Customer> customerList14 = rentalSystem0.getCustomers();
        int int15 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str17 = rentalSystem0.returnVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\". not found.\".\".");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "No vehicles match the keyword \"Vehicle with ID  not found.\"." + "'", str8, "No vehicles match the keyword \"Vehicle with ID  not found.\".");
        org.junit.Assert.assertNotNull(customerList14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\". not found.\".\". not found." + "'", str17, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\". not found.\".\". not found.");
    }

    @Test
    public void test2750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2750");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("hi!");
        java.lang.String str5 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\".", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".\".");
        java.util.List<org.example.Vehicle> vehicleList9 = rentalSystem0.getVehicles();
        java.lang.String str11 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID  not found.\".\".\". not found.\".\". not found.");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID hi! not found." + "'", str3, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found." + "'", str5, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList9);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID  not found.\".\".\". not found.\".\". not found.\"." + "'", str11, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID  not found.\".\".\". not found.\".\". not found.\".");
    }

    @Test
    public void test2751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2751");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList5 = rentalSystem0.getVehicles();
        java.lang.String str9 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".", "No vehicles match the keyword \"Vehicle with ID  not found.\".", (int) ' ');
        java.lang.String str13 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID  not found. not found.", "", (int) (byte) -1);
        int int14 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.", "Vehicle with ID hi! not found.");
        rentalSystem0.addCustomer("Vehicle with ID No vehicles match the keyword \"hi!\". not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\". not found.");
        java.util.List<org.example.Customer> customerList21 = rentalSystem0.getCustomers();
        java.lang.String str23 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found. not found. not found.\".");
        java.util.List<org.example.Customer> customerList24 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.\". not found. not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found. not found.\".\".");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertNotNull(vehicleList5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found." + "'", str9, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str13, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(customerList21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found. not found. not found.\". not found." + "'", str23, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found. not found. not found.\". not found.");
        org.junit.Assert.assertNotNull(customerList24);
    }

    @Test
    public void test2752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2752");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.returnVehicle("");
        int int9 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\".", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".\".", "hi!", (double) 1L);
        java.util.List<org.example.Customer> customerList15 = rentalSystem0.getCustomers();
        int int16 = rentalSystem0.getAvailableVehicleCount();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID  not found." + "'", str8, "Vehicle with ID  not found.");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(customerList15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
    }

    @Test
    public void test2753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2753");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        int int7 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addCustomer("hi!", "Vehicle with ID Vehicle with ID  not found. not found.");
        java.lang.String str12 = rentalSystem0.searchVehicle("No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".");
        java.lang.String str14 = rentalSystem0.searchVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".\".");
        java.lang.String str16 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\". not found. not found. not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\"." + "'", str12, "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\".");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".\".\"." + "'", str14, "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".\".\".");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\". not found. not found. not found.\". not found.\"." + "'", str16, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\". not found. not found. not found.\". not found.\".");
    }

    @Test
    public void test2754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2754");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.returnVehicle("");
        int int9 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str13 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found.", (int) (short) 0);
        java.util.List<org.example.Vehicle> vehicleList14 = rentalSystem0.getVehicles();
        java.lang.String str16 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\". not found.");
        rentalSystem0.addVehicle("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\".\".\".\".\".", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\".", "Vehicle with ID ID: Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found., Model: Vehicle with ID Vehicle with ID hi! not found. not found., Type: No vehicles match the keyword \"hi!\"., Daily Rate: $1.0, Status: Available\nID: Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.\". not found., Model: No vehicles match the keyword \"\"., Type: No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found.\"., Daily Rate: $100.0, Status: Available\n not found.", (double) 10.0f);
        java.lang.Class<?> wildcardClass22 = rentalSystem0.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID  not found." + "'", str8, "Vehicle with ID  not found.");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str13, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\". not found.\"." + "'", str16, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\". not found.\".");
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test2755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2755");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.lang.String str4 = rentalSystem0.searchVehicle("hi!");
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID  not found.\".", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\".", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\".", 100.0d);
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.\". not found.");
        java.util.List<org.example.Customer> customerList13 = rentalSystem0.getCustomers();
        // The following exception was thrown during execution in test generation
        try {
            rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\". not found. not found.\".", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"\".\". not found.\".\".\".", "", (double) 100.0f);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Type cannot be null or empty");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "No vehicles match the keyword \"hi!\"." + "'", str4, "No vehicles match the keyword \"hi!\".");
        org.junit.Assert.assertNotNull(customerList13);
    }

    @Test
    public void test2756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2756");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.");
        rentalSystem0.addCustomer("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\".");
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\".", "No vehicles match the keyword \"Vehicle with ID hi! not found.\".", (double) (short) 100);
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\". not found.\".", "ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found.", 10.0d);
        java.lang.String str24 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID  not found.\".");
        java.util.List<org.example.Vehicle> vehicleList25 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList26 = rentalSystem0.getVehicles();
        int int27 = rentalSystem0.getAvailableVehicleCount();
        java.lang.Class<?> wildcardClass28 = rentalSystem0.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID  not found.\".\"." + "'", str24, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID  not found.\".\".");
        org.junit.Assert.assertNotNull(vehicleList25);
        org.junit.Assert.assertNotNull(vehicleList26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 2 + "'", int27 == 2);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test2757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2757");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.returnVehicle("");
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".", "No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".");
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".\".", "ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n");
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found.\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found.", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\".\".\". not found.", 0.0d);
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\". not found. not found.", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found. not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found.", (double) (short) 100);
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\". not found.\".\". not found.", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.\".\". not found.", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".\".\". not found.", (double) (short) 0);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID  not found." + "'", str8, "Vehicle with ID  not found.");
    }

    @Test
    public void test2758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2758");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID  not found.\".", "hi!");
        rentalSystem0.addCustomer("No vehicles match the keyword \"hi!\".", "hi!");
        java.lang.String str14 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        java.util.List<org.example.Vehicle> vehicleList15 = rentalSystem0.getVehicles();
        java.lang.String str17 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.");
        int int18 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found. not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\". not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.\". not found.", (double) 1.0f);
        java.lang.String str25 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found. not found.");
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\". not found. not found. not found. not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\".\".\". not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found." + "'", str14, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found." + "'", str17, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found. not found.\"." + "'", str25, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found. not found.\".");
    }

    @Test
    public void test2759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2759");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("hi!");
        java.lang.String str5 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\".", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".\".");
        java.util.List<org.example.Customer> customerList9 = rentalSystem0.getCustomers();
        java.lang.Class<?> wildcardClass10 = rentalSystem0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID hi! not found." + "'", str3, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found." + "'", str5, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.");
        org.junit.Assert.assertNotNull(customerList9);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test2760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2760");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        int int2 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Vehicle> vehicleList3 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList4 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found. not found.\". not found.\".", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found. not found. not found.");
        java.lang.String str9 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\". not found. not found.\".");
        java.util.List<org.example.Vehicle> vehicleList10 = rentalSystem0.getVehicles();
        java.lang.String str14 = rentalSystem0.rentVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found., Model: Vehicle with ID Vehicle with ID hi! not found. not found., Type: No vehicles match the keyword \"hi!\"., Daily Rate: $1.0, Status: Available\nID: Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.\". not found., Model: No vehicles match the keyword \"\"., Type: No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found.\"., Daily Rate: $100.0, Status: Available\n not found.\". not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found. not found.\".\".", (int) ' ');
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(vehicleList3);
        org.junit.Assert.assertNotNull(vehicleList4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\". not found. not found.\". not found." + "'", str9, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\". not found. not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList10);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found., Model: Vehicle with ID Vehicle with ID hi! not found. not found., Type: No vehicles match the keyword \"hi!\"., Daily Rate: $1.0, Status: Available\nID: Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.\". not found., Model: No vehicles match the keyword \"\"., Type: No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found.\"., Daily Rate: $100.0, Status: Available\n not found.\". not found. not found." + "'", str14, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found., Model: Vehicle with ID Vehicle with ID hi! not found. not found., Type: No vehicles match the keyword \"hi!\"., Daily Rate: $1.0, Status: Available\nID: Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.\". not found., Model: No vehicles match the keyword \"\"., Type: No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found.\"., Daily Rate: $100.0, Status: Available\n not found.\". not found. not found.");
    }

    @Test
    public void test2761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2761");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID  not found.\".", "hi!");
        rentalSystem0.addCustomer("No vehicles match the keyword \"hi!\".", "hi!");
        java.lang.String str14 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        java.util.List<org.example.Vehicle> vehicleList15 = rentalSystem0.getVehicles();
        java.lang.String str17 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.");
        java.util.List<org.example.Customer> customerList18 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList19 = rentalSystem0.getCustomers();
        java.lang.Class<?> wildcardClass20 = rentalSystem0.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found." + "'", str14, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found." + "'", str17, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.");
        org.junit.Assert.assertNotNull(customerList18);
        org.junit.Assert.assertNotNull(customerList19);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test2762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2762");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        int int7 = rentalSystem0.getAvailableVehicleCount();
        int int8 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\".", "hi!");
        java.lang.String str13 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.");
        java.lang.String str15 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\".\". not found. not found.");
        int int16 = rentalSystem0.getAvailableVehicleCount();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found." + "'", str13, "Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\".\". not found. not found.\"." + "'", str15, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\".\". not found. not found.\".");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
    }

    @Test
    public void test2763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2763");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID  not found.\".", "hi!");
        rentalSystem0.addCustomer("No vehicles match the keyword \"hi!\".", "hi!");
        java.lang.String str14 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        java.util.List<org.example.Vehicle> vehicleList15 = rentalSystem0.getVehicles();
        java.lang.String str17 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.");
        int int18 = rentalSystem0.getAvailableVehicleCount();
        int int19 = rentalSystem0.getAvailableVehicleCount();
        int int20 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found.\".\".\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found. not found. not found.\".");
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\". not found.\". not found.\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found. not found. not found.\".", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found. not found. not found. not found.\". not found.\".", (double) (byte) 0);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found." + "'", str14, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found." + "'", str17, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
    }

    @Test
    public void test2764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2764");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("hi!");
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("Vehicle with ID hi! not found.", "Vehicle with ID Vehicle with ID  not found. not found.");
        // The following exception was thrown during execution in test generation
        try {
            rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\". not found. not found. not found. not found. not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.", "Vehicle with ID  not found.", (double) (-1L));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Daily rate cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID hi! not found." + "'", str3, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertNotNull(customerList4);
    }

    @Test
    public void test2765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2765");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("");
        java.util.List<org.example.Vehicle> vehicleList4 = rentalSystem0.getVehicles();
        java.lang.String str6 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID  not found. not found.");
        java.util.List<org.example.Customer> customerList7 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.\".");
        rentalSystem0.addCustomer("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found.\".");
        java.lang.String str15 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.\". not found.\".\".\".\". not found.");
        java.util.List<org.example.Customer> customerList16 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList17 = rentalSystem0.getVehicles();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID  not found." + "'", str3, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str6, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertNotNull(customerList7);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.\". not found.\".\".\".\". not found.\"." + "'", str15, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.\". not found.\".\".\".\". not found.\".");
        org.junit.Assert.assertNotNull(customerList16);
        org.junit.Assert.assertNotNull(vehicleList17);
    }

    @Test
    public void test2766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2766");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("");
        rentalSystem0.addVehicle("Vehicle with ID  not found.", "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.", "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.", (double) (short) 0);
        java.util.List<org.example.Vehicle> vehicleList9 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList10 = rentalSystem0.getVehicles();
        java.lang.String str12 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\".\". not found. not found.");
        java.lang.String str14 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\".\". not found.");
        java.util.List<org.example.Vehicle> vehicleList15 = rentalSystem0.getVehicles();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID  not found." + "'", str3, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList9);
        org.junit.Assert.assertNotNull(vehicleList10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\".\". not found. not found. not found." + "'", str12, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\".\". not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\".\". not found. not found." + "'", str14, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\".\". not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList15);
    }

    @Test
    public void test2767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2767");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        int int7 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList8 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.\".", "No vehicles match the keyword \"Vehicle with ID  not found.\".");
        rentalSystem0.addCustomer("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\". not found. not found. not found. not found.\".\".\".\". not found.", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".\".\". not found.");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(customerList8);
    }

    @Test
    public void test2768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2768");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.lang.String str4 = rentalSystem0.searchVehicle("hi!");
        java.util.List<org.example.Customer> customerList5 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found. not found.\".");
        java.lang.String str12 = rentalSystem0.rentVehicle("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\".\".", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\".\".", 0);
        java.util.List<org.example.Vehicle> vehicleList13 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\". not found. not found.\".", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found. not found.\". not found.\".\". not found.");
        rentalSystem0.addCustomer("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\".\".\". not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\".\".\". not found. not found.");
        java.lang.String str23 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\".\". not found. not found. not found. not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found.\".\". not found. not found.\".\".", (int) (byte) 10);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "No vehicles match the keyword \"hi!\"." + "'", str4, "No vehicles match the keyword \"hi!\".");
        org.junit.Assert.assertNotNull(customerList5);
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found. not found.\".\"." + "'", str8, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found. not found.\".\".");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\".\". not found." + "'", str12, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\".\". not found.");
        org.junit.Assert.assertNotNull(vehicleList13);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\".\". not found. not found. not found. not found. not found." + "'", str23, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\".\". not found. not found. not found. not found. not found.");
    }

    @Test
    public void test2769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2769");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.searchVehicle("Vehicle with ID  not found.");
        rentalSystem0.addVehicle("hi!", "Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID hi! not found.", (double) 0);
        java.util.List<org.example.Customer> customerList14 = rentalSystem0.getCustomers();
        java.lang.String str18 = rentalSystem0.rentVehicle("Vehicle with ID No vehicles match the keyword \"hi!\". not found.", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found. not found.", (int) (short) -1);
        java.lang.String str20 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.");
        java.util.List<org.example.Customer> customerList21 = rentalSystem0.getCustomers();
        java.lang.String str23 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "No vehicles match the keyword \"Vehicle with ID  not found.\"." + "'", str8, "No vehicles match the keyword \"Vehicle with ID  not found.\".");
        org.junit.Assert.assertNotNull(customerList14);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found." + "'", str18, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found." + "'", str20, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.");
        org.junit.Assert.assertNotNull(customerList21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\". not found. not found." + "'", str23, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\". not found. not found.");
    }

    @Test
    public void test2770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2770");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID  not found.", 100);
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID  not found.\".", "Vehicle with ID Vehicle with ID  not found. not found.");
        java.util.List<org.example.Vehicle> vehicleList12 = rentalSystem0.getVehicles();
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.", "No vehicles match the keyword \"\".", "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.", (double) 1L);
        int int18 = rentalSystem0.getAvailableVehicleCount();
        int int19 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str21 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\".\". not found. not found. not found. not found.");
        java.lang.Class<?> wildcardClass22 = rentalSystem0.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList12);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\".\". not found. not found. not found. not found. not found." + "'", str21, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\".\". not found. not found. not found. not found. not found.");
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test2771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2771");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        int int7 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str9 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".");
        java.lang.String str11 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\". not found.");
        java.lang.String str13 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found. not found.\". not found.");
        java.lang.String str15 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found. not found.");
        java.util.List<org.example.Customer> customerList16 = rentalSystem0.getCustomers();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\". not found." + "'", str9, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\". not found.\"." + "'", str11, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\". not found.\".");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found. not found.\". not found. not found." + "'", str13, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found. not found.\". not found. not found.");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found. not found. not found." + "'", str15, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found. not found. not found.");
        org.junit.Assert.assertNotNull(customerList16);
    }

    @Test
    public void test2772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2772");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        int int2 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        int int4 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".", "No vehicles match the keyword \"Vehicle with ID  not found.\".");
        int int8 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str10 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\".");
        java.util.List<org.example.Vehicle> vehicleList11 = rentalSystem0.getVehicles();
        java.lang.String str13 = rentalSystem0.searchVehicle("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\".\".\".");
        java.lang.String str17 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\". not found. not found. not found. not found.", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\". not found. not found. not found.", 0);
        java.lang.String str19 = rentalSystem0.returnVehicle("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\".\".\".\".");
        rentalSystem0.addVehicle("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\".\".\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found.\". not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\". not found.\". not found.\". not found. not found.", (double) 0L);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found." + "'", str10, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\".\".\".\"." + "'", str13, "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\".\".\".\".");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\". not found. not found. not found. not found. not found." + "'", str17, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\". not found. not found. not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\".\".\".\". not found." + "'", str19, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\".\".\".\". not found.");
    }

    @Test
    public void test2773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2773");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.returnVehicle("");
        int int9 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str11 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.");
        java.lang.String str15 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID  not found. not found.", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".", (int) (short) 0);
        java.lang.String str19 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\".\".\". not found. not found. not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.", 0);
        java.lang.String str23 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found. not found. not found.", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.\".", (int) (short) 10);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID  not found." + "'", str8, "Vehicle with ID  not found.");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found." + "'", str11, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str15, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\".\".\". not found. not found. not found. not found." + "'", str19, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\".\".\". not found. not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found. not found. not found. not found." + "'", str23, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found. not found. not found. not found.");
    }

    @Test
    public void test2774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2774");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        rentalSystem0.addCustomer("hi!", "Vehicle with ID Vehicle with ID  not found. not found.");
        java.util.List<org.example.Vehicle> vehicleList9 = rentalSystem0.getVehicles();
        java.lang.String str13 = rentalSystem0.rentVehicle("hi!", "No vehicles match the keyword \"Vehicle with ID  not found.\".", (int) '4');
        java.util.List<org.example.Customer> customerList14 = rentalSystem0.getCustomers();
        java.lang.String str16 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".");
        java.lang.String str18 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\".\".\". not found. not found.\".");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList9);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID hi! not found." + "'", str13, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertNotNull(customerList14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\"." + "'", str16, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\".");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\".\".\". not found. not found.\". not found." + "'", str18, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\".\".\". not found. not found.\". not found.");
    }

    @Test
    public void test2775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2775");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        int int7 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList8 = rentalSystem0.getCustomers();
        java.lang.String str10 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found.");
        java.lang.String str12 = rentalSystem0.searchVehicle("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\".\".");
        java.lang.String str14 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\". not found. not found. not found. not found.\".");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(customerList8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found.\"." + "'", str10, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found.\".");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\".\".\"." + "'", str12, "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\".\".\".");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\". not found. not found. not found. not found.\". not found." + "'", str14, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\". not found. not found. not found. not found.\". not found.");
    }

    @Test
    public void test2776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2776");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.lang.String str7 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\". not found.\". not found.");
        java.lang.String str9 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found.\".\".\". not found. not found.");
        java.lang.String str11 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\". not found. not found.\".");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\". not found.\". not found. not found." + "'", str7, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\". not found.\". not found. not found.");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found.\".\".\". not found. not found. not found." + "'", str9, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found.\".\".\". not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\". not found. not found.\". not found." + "'", str11, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\". not found. not found.\". not found.");
    }

    @Test
    public void test2777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2777");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.lang.String str9 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.", (int) (byte) 1);
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID hi! not found.\".", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\".");
        java.lang.String str16 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found.", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\".", (int) (byte) 100);
        int int17 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str19 = rentalSystem0.searchVehicle("");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found." + "'", str9, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found." + "'", str16, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "No vehicles match the keyword \"\"." + "'", str19, "No vehicles match the keyword \"\".");
    }

    @Test
    public void test2778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2778");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID  not found. not found.", "No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        java.lang.String str8 = rentalSystem0.rentVehicle("hi!", "No vehicles match the keyword \"Vehicle with ID  not found.\".", 100);
        int int9 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str11 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found.");
        java.util.List<org.example.Vehicle> vehicleList12 = rentalSystem0.getVehicles();
        java.lang.String str14 = rentalSystem0.returnVehicle("");
        rentalSystem0.addVehicle("No vehicles match the keyword \"hi!\".", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found. not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found.\". not found.", (double) 0.0f);
        int int20 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Vehicle> vehicleList21 = rentalSystem0.getVehicles();
        java.lang.String str23 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID hi! not found." + "'", str8, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found.\"." + "'", str11, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found.\".");
        org.junit.Assert.assertNotNull(vehicleList12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID  not found." + "'", str14, "Vehicle with ID  not found.");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(vehicleList21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found. not found. not found." + "'", str23, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found. not found. not found.");
    }

    @Test
    public void test2779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2779");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("hi!");
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\".\".\". not found. not found. not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.\". not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.\".", (double) 10.0f);
        java.lang.Class<?> wildcardClass9 = rentalSystem0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID hi! not found." + "'", str3, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test2780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2780");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("");
        java.util.List<org.example.Vehicle> vehicleList4 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.rentVehicle("", "Vehicle with ID hi! not found.", (int) (short) 100);
        java.util.List<org.example.Vehicle> vehicleList9 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList10 = rentalSystem0.getVehicles();
        java.lang.String str12 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\". not found. not found. not found. not found.\".");
        int int13 = rentalSystem0.getAvailableVehicleCount();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID  not found." + "'", str3, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID  not found." + "'", str8, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList9);
        org.junit.Assert.assertNotNull(vehicleList10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\". not found. not found. not found. not found.\". not found." + "'", str12, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\". not found. not found. not found. not found.\". not found.");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
    }

    @Test
    public void test2781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2781");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.rentVehicle("", "No vehicles match the keyword \"Vehicle with ID hi! not found.\".", (int) (byte) 100);
        java.util.List<org.example.Vehicle> vehicleList9 = rentalSystem0.getVehicles();
        java.lang.String str11 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.");
        java.util.List<org.example.Vehicle> vehicleList12 = rentalSystem0.getVehicles();
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found. not found. not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID  not found.\".\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found.\".", (double) 1);
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\". not found.\".", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\".\". not found.");
        java.lang.Class<?> wildcardClass21 = rentalSystem0.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID  not found." + "'", str8, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList9);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found." + "'", str11, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList12);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test2782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2782");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.lang.String str9 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.", (int) (byte) 1);
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID  not found. not found.", "No vehicles match the keyword \"\".", "Vehicle with ID  not found.", (double) 1L);
        rentalSystem0.addCustomer("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID  not found.\".\".\". not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.\".");
        int int18 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str20 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found.\". not found.\". not found.");
        int int21 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList22 = rentalSystem0.getCustomers();
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\".\".\".\".\".", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\". not found. not found. not found. not found. not found.\".\".", (double) 10L);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found." + "'", str9, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found.\". not found.\". not found. not found." + "'", str20, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found.\". not found.\". not found. not found.");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNotNull(customerList22);
    }

    @Test
    public void test2783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2783");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.lang.String str5 = rentalSystem0.returnVehicle("Vehicle with ID  not found.");
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID  not found.\".", "No vehicles match the keyword \"\".");
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.", "Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.\".", (double) (byte) 100);
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found. not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.\".");
        java.util.List<org.example.Vehicle> vehicleList17 = rentalSystem0.getVehicles();
        // The following exception was thrown during execution in test generation
        try {
            rentalSystem0.addCustomer("", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\".");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Name cannot be null or empty");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID Vehicle with ID  not found. not found." + "'", str5, "Vehicle with ID Vehicle with ID  not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList17);
    }

    @Test
    public void test2784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2784");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("hi!");
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.lang.String str6 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID  not found. not found.");
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\". not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".", (double) (byte) 1);
        java.util.List<org.example.Vehicle> vehicleList12 = rentalSystem0.getVehicles();
        int int13 = rentalSystem0.getAvailableVehicleCount();
        // The following exception was thrown during execution in test generation
        try {
            rentalSystem0.addVehicle("", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found. not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\". not found. not found.", (double) 1.0f);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Vehicle ID cannot be null or empty");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID hi! not found." + "'", str3, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str6, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
    }

    @Test
    public void test2785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2785");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList5 = rentalSystem0.getVehicles();
        java.lang.String str7 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found. not found.");
        java.util.List<org.example.Vehicle> vehicleList8 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList9 = rentalSystem0.getVehicles();
        java.lang.String str11 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertNotNull(vehicleList5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found. not found.\"." + "'", str7, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found. not found.\".");
        org.junit.Assert.assertNotNull(vehicleList8);
        org.junit.Assert.assertNotNull(vehicleList9);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found." + "'", str11, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found.");
    }

    @Test
    public void test2786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2786");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID  not found. not found.", "No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        int int5 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList7 = rentalSystem0.getCustomers();
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.\". not found.\".", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.\". not found.\".\".\".\". not found.\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\". not found. not found. not found. not found.\".", (double) 0.0f);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertNotNull(customerList7);
    }

    @Test
    public void test2787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2787");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.lang.String str7 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".");
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID  not found.");
        int int11 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str13 = rentalSystem0.returnVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".");
        rentalSystem0.addCustomer("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.\". not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.");
        java.lang.String str20 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found. not found. not found. not found.\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\". not found.\". not found.", (int) (byte) 100);
        java.lang.Class<?> wildcardClass21 = rentalSystem0.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\"." + "'", str7, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\". not found." + "'", str13, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\". not found.");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found. not found. not found. not found.\". not found." + "'", str20, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found. not found. not found. not found.\". not found.");
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test2788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2788");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.rentVehicle("", "No vehicles match the keyword \"Vehicle with ID hi! not found.\".", (int) (byte) 100);
        java.lang.String str10 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.");
        int int11 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found. not found.\".");
        java.util.List<org.example.Vehicle> vehicleList15 = rentalSystem0.getVehicles();
        java.lang.Class<?> wildcardClass16 = rentalSystem0.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID  not found." + "'", str8, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found." + "'", str10, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(vehicleList15);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test2789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2789");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        rentalSystem0.addCustomer("hi!", "Vehicle with ID Vehicle with ID  not found. not found.");
        java.util.List<org.example.Vehicle> vehicleList9 = rentalSystem0.getVehicles();
        java.lang.String str13 = rentalSystem0.rentVehicle("hi!", "No vehicles match the keyword \"Vehicle with ID  not found.\".", (int) '4');
        java.util.List<org.example.Customer> customerList14 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList15 = rentalSystem0.getVehicles();
        int int16 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.", (double) 100L);
        java.lang.String str23 = rentalSystem0.searchVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\".");
        java.util.List<org.example.Customer> customerList24 = rentalSystem0.getCustomers();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList9);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID hi! not found." + "'", str13, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertNotNull(customerList14);
        org.junit.Assert.assertNotNull(vehicleList15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\".\"." + "'", str23, "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\".\".");
        org.junit.Assert.assertNotNull(customerList24);
    }

    @Test
    public void test2790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2790");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID  not found.\".", "hi!");
        int int10 = rentalSystem0.getAvailableVehicleCount();
        int int11 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str13 = rentalSystem0.searchVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\".\".");
        java.lang.Class<?> wildcardClass14 = rentalSystem0.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\".\".\"." + "'", str13, "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\".\".\".");
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test2791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2791");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID  not found. not found.", "No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        java.lang.String str8 = rentalSystem0.rentVehicle("hi!", "No vehicles match the keyword \"Vehicle with ID  not found.\".", 100);
        java.lang.String str10 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID hi! not found. not found.");
        rentalSystem0.addVehicle("ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.", "No vehicles match the keyword \"\".", (double) (byte) 10);
        java.lang.String str19 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found. not found.", "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.", (int) (byte) -1);
        int int20 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList21 = rentalSystem0.getCustomers();
        java.lang.String str23 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID  not found.\".");
        java.util.List<org.example.Vehicle> vehicleList24 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList25 = rentalSystem0.getCustomers();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID hi! not found." + "'", str8, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found." + "'", str10, "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found. not found. not found." + "'", str19, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found. not found. not found.");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(customerList21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found." + "'", str23, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList24);
        org.junit.Assert.assertNotNull(customerList25);
    }

    @Test
    public void test2792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2792");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.returnVehicle("");
        java.util.List<org.example.Customer> customerList9 = rentalSystem0.getCustomers();
        java.lang.String str11 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.");
        java.util.List<org.example.Vehicle> vehicleList12 = rentalSystem0.getVehicles();
        java.lang.String str14 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n\". not found.");
        java.lang.String str16 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\". not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID  not found." + "'", str8, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList9);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found." + "'", str11, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n\". not found.\"." + "'", str14, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n\". not found.\".");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\". not found.\". not found. not found." + "'", str16, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\". not found.\". not found. not found.");
    }

    @Test
    public void test2793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2793");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("hi!");
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        int int5 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\". not found.\". not found. not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found. not found.\".");
        java.lang.String str11 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\".\".\".\".\".\". not found.");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID hi! not found." + "'", str3, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\".\".\".\".\".\". not found. not found." + "'", str11, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\".\".\".\".\".\". not found. not found.");
    }

    @Test
    public void test2794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2794");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.returnVehicle("Vehicle with ID  not found.");
        java.lang.String str12 = rentalSystem0.rentVehicle("Vehicle with ID hi! not found.", "Vehicle with ID Vehicle with ID  not found. not found.", (int) (byte) 10);
        java.lang.String str14 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        java.util.List<org.example.Vehicle> vehicleList15 = rentalSystem0.getVehicles();
        java.lang.String str17 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\". not found.\".");
        java.lang.String str19 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\".\".\". not found. not found. not found.");
        java.lang.String str23 = rentalSystem0.rentVehicle("ID: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Model: No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\"., Type: No vehicles match the keyword \"Vehicle with ID hi! not found.\"., Daily Rate: $100.0, Status: Available\n", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".", (int) (short) -1);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID  not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID  not found. not found.");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID Vehicle with ID hi! not found. not found." + "'", str12, "Vehicle with ID Vehicle with ID hi! not found. not found.");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found." + "'", str14, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\". not found.\".\"." + "'", str17, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\". not found.\".\".");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\".\".\". not found. not found. not found. not found." + "'", str19, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\".\".\". not found. not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Vehicle with ID ID: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Model: No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\"., Type: No vehicles match the keyword \"Vehicle with ID hi! not found.\"., Daily Rate: $100.0, Status: Available\n not found." + "'", str23, "Vehicle with ID ID: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Model: No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\"., Type: No vehicles match the keyword \"Vehicle with ID hi! not found.\"., Daily Rate: $100.0, Status: Available\n not found.");
    }

    @Test
    public void test2795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2795");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList5 = rentalSystem0.getVehicles();
        java.lang.String str9 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".", "No vehicles match the keyword \"Vehicle with ID  not found.\".", (int) ' ');
        java.lang.String str13 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID  not found. not found.", "", (int) (byte) -1);
        java.util.List<org.example.Vehicle> vehicleList14 = rentalSystem0.getVehicles();
        int int15 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addCustomer("ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\". not found.\". not found.");
        java.util.List<org.example.Vehicle> vehicleList19 = rentalSystem0.getVehicles();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertNotNull(vehicleList5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found." + "'", str9, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str13, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(vehicleList19);
    }

    @Test
    public void test2796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2796");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID  not found.\".", "hi!");
        int int10 = rentalSystem0.getAvailableVehicleCount();
        int int11 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList12 = rentalSystem0.getCustomers();
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found. not found. not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\".", (double) (short) 100);
        java.util.List<org.example.Customer> customerList18 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList19 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList20 = rentalSystem0.getCustomers();
        int int21 = rentalSystem0.getAvailableVehicleCount();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(customerList12);
        org.junit.Assert.assertNotNull(customerList18);
        org.junit.Assert.assertNotNull(vehicleList19);
        org.junit.Assert.assertNotNull(customerList20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
    }

    @Test
    public void test2797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2797");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.searchVehicle("Vehicle with ID  not found.");
        rentalSystem0.addVehicle("hi!", "Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID hi! not found.", (double) 0);
        rentalSystem0.addCustomer("ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\".");
        java.util.List<org.example.Vehicle> vehicleList17 = rentalSystem0.getVehicles();
        java.lang.String str19 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\". not found.");
        java.util.List<org.example.Customer> customerList20 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList21 = rentalSystem0.getCustomers();
        java.lang.Class<?> wildcardClass22 = customerList21.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "No vehicles match the keyword \"Vehicle with ID  not found.\"." + "'", str8, "No vehicles match the keyword \"Vehicle with ID  not found.\".");
        org.junit.Assert.assertNotNull(vehicleList17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\". not found.\"." + "'", str19, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\". not found.\".");
        org.junit.Assert.assertNotNull(customerList20);
        org.junit.Assert.assertNotNull(customerList21);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test2798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2798");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        int int7 = rentalSystem0.getAvailableVehicleCount();
        int int8 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\".", "hi!");
        java.lang.String str15 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\".", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID  not found.\".\".", (int) 'a');
        java.lang.String str17 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\".");
        java.lang.String str19 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found. not found.");
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\". not found.\".\".\". not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found. not found.", "Vehicle with ID Vehicle with ID ID: Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found., Model: ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n, Type: Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found., Daily Rate: $100.0, Status: Available\n not found. not found.", (double) 1L);
        java.lang.String str28 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found. not found.\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\". not found.", (int) '4');
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found." + "'", str15, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\".\"." + "'", str17, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\".\".");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found. not found. not found." + "'", str19, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found. not found.\". not found." + "'", str28, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found. not found.\". not found.");
    }

    @Test
    public void test2799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2799");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("");
        rentalSystem0.addVehicle("Vehicle with ID  not found.", "Vehicle with ID hi! not found.", "Vehicle with ID Vehicle with ID hi! not found. not found.", (double) '4');
        java.lang.String str10 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".");
        int int11 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str13 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found. not found.");
        java.util.List<org.example.Vehicle> vehicleList14 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList15 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList16 = rentalSystem0.getCustomers();
        java.lang.String str20 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\". not found.", (int) (short) 100);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID  not found." + "'", str3, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\". not found." + "'", str10, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\". not found.");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found. not found. not found." + "'", str13, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found. not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList14);
        org.junit.Assert.assertNotNull(customerList15);
        org.junit.Assert.assertNotNull(customerList16);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found." + "'", str20, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found.");
    }

    @Test
    public void test2800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2800");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.searchVehicle("Vehicle with ID  not found.");
        rentalSystem0.addVehicle("hi!", "Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID hi! not found.", (double) 0);
        rentalSystem0.addCustomer("ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\".");
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.\". not found.", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\". not found.\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".", (double) (byte) 10);
        java.lang.String str25 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found. not found.", (int) ' ');
        java.lang.String str27 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found. not found.\". not found. not found.\".");
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\". not found. not found. not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found. not found.", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\".\".", (double) 1.0f);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "No vehicles match the keyword \"Vehicle with ID  not found.\"." + "'", str8, "No vehicles match the keyword \"Vehicle with ID  not found.\".");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\". not found." + "'", str25, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found. not found.\". not found. not found.\".\"." + "'", str27, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found. not found.\". not found. not found.\".\".");
    }

    @Test
    public void test2801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2801");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found.\". not found.\". not found.", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".", "No vehicles match the keyword \"ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n\".", (double) 10);
        int int10 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str12 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.\". not found. not found. not found.");
        java.lang.String str16 = rentalSystem0.rentVehicle("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\".\".\".", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\". not found. not found. not found. not found.", (int) (byte) -1);
        // The following exception was thrown during execution in test generation
        try {
            rentalSystem0.addCustomer("", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found. not found. not found. not found.\".");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Name cannot be null or empty");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.\". not found. not found. not found. not found." + "'", str12, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.\". not found. not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\".\".\". not found." + "'", str16, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\".\".\". not found.");
    }

    @Test
    public void test2802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2802");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("hi!");
        rentalSystem0.addCustomer("ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n", "No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".");
        java.lang.String str10 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".", (int) (byte) 1);
        java.lang.String str12 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.");
        java.lang.String str14 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found.\". not found. not found.");
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\".\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\".\". not found. not found.\". not found.");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID hi! not found." + "'", str3, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found. not found." + "'", str10, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found." + "'", str12, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found.\". not found. not found.\"." + "'", str14, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found.\". not found. not found.\".");
    }

    @Test
    public void test2803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2803");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID  not found. not found.", "No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        java.util.List<org.example.Vehicle> vehicleList5 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID No vehicles match the keyword \"\". not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.");
        java.util.List<org.example.Customer> customerList9 = rentalSystem0.getCustomers();
        rentalSystem0.addVehicle("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found.\".\".\".", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found.\".\". not found.\".", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\".\". not found. not found. not found.", (double) (short) 0);
        java.util.List<org.example.Customer> customerList15 = rentalSystem0.getCustomers();
        int int16 = rentalSystem0.getAvailableVehicleCount();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList5);
        org.junit.Assert.assertNotNull(customerList9);
        org.junit.Assert.assertNotNull(customerList15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
    }

    @Test
    public void test2804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2804");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID  not found.\".", "hi!");
        rentalSystem0.addCustomer("No vehicles match the keyword \"hi!\".", "hi!");
        java.lang.String str14 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        java.util.List<org.example.Vehicle> vehicleList15 = rentalSystem0.getVehicles();
        java.lang.String str17 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.");
        int int18 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found. not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\". not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.\". not found.", (double) 1.0f);
        java.lang.String str25 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found. not found.");
        int int26 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found.\".\".", "No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found." + "'", str14, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found." + "'", str17, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found. not found.\"." + "'", str25, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found. not found.\".");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
    }

    @Test
    public void test2805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2805");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.returnVehicle("Vehicle with ID  not found.");
        java.lang.String str10 = rentalSystem0.returnVehicle("hi!");
        java.lang.String str14 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID hi! not found. not found.", "ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n", (int) (short) -1);
        java.lang.String str18 = rentalSystem0.rentVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\". not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\". not found. not found. not found.\".\".", (int) (byte) 10);
        java.lang.String str20 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\".\". not found.\".");
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found. not found. not found.\".\". not found.", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found. not found. not found. not found.", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".\". not found.\".", (double) (byte) 100);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID  not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID  not found. not found.");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID hi! not found." + "'", str10, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found." + "'", str14, "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\". not found. not found." + "'", str18, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\". not found. not found.");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\".\". not found.\". not found." + "'", str20, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\".\". not found.\". not found.");
    }

    @Test
    public void test2806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2806");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID  not found.\".", "hi!");
        int int10 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList11 = rentalSystem0.getCustomers();
        java.lang.String str13 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.");
        int int14 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Vehicle> vehicleList15 = rentalSystem0.getVehicles();
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found. not found. not found.\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\". not found. not found.", (double) 0L);
        java.lang.Class<?> wildcardClass21 = rentalSystem0.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(customerList11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\"." + "'", str13, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(vehicleList15);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test2807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2807");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        int int2 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        int int4 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addVehicle("Vehicle with ID  not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.", (double) (byte) 100);
        java.lang.String str11 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".");
        java.util.List<org.example.Customer> customerList12 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList13 = rentalSystem0.getVehicles();
        java.lang.String str15 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\". not found.");
        java.lang.String str19 = rentalSystem0.rentVehicle("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\".\".\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\".\". not found. not found.", (int) '#');
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\". not found." + "'", str11, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\". not found.");
        org.junit.Assert.assertNotNull(customerList12);
        org.junit.Assert.assertNotNull(vehicleList13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\". not found. not found." + "'", str15, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\". not found. not found.");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\".\".\". not found." + "'", str19, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\".\".\". not found.");
    }

    @Test
    public void test2808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2808");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.lang.String str7 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".");
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID  not found.");
        java.util.List<org.example.Customer> customerList11 = rentalSystem0.getCustomers();
        java.lang.String str15 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n\". not found. not found. not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found.\". not found.", (int) (short) 1);
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.\".\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\". not found.\". not found.\".\". not found. not found.\".");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\"." + "'", str7, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".");
        org.junit.Assert.assertNotNull(customerList11);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n\". not found. not found. not found. not found." + "'", str15, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n\". not found. not found. not found. not found.");
    }

    @Test
    public void test2809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2809");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("hi!");
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        int int5 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str7 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found.\".\". not found.");
        rentalSystem0.addVehicle("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n\".\".\".\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.\". not found. not found.", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"\".\". not found.\".\".\".", 1.0d);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID hi! not found." + "'", str3, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found.\".\". not found.\"." + "'", str7, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found.\".\". not found.\".");
    }

    @Test
    public void test2810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2810");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList5 = rentalSystem0.getVehicles();
        java.lang.String str9 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".", "No vehicles match the keyword \"Vehicle with ID  not found.\".", (int) ' ');
        java.lang.String str11 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        java.lang.String str13 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\".");
        int int14 = rentalSystem0.getAvailableVehicleCount();
        int int15 = rentalSystem0.getAvailableVehicleCount();
        // The following exception was thrown during execution in test generation
        try {
            rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\".\".", "");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Customer ID cannot be null or empty");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertNotNull(vehicleList5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found." + "'", str9, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found." + "'", str11, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\".\"." + "'", str13, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\".\".");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
    }

    @Test
    public void test2811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2811");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("hi!");
        rentalSystem0.addCustomer("ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n", "No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".");
        java.lang.String str10 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".", (int) (byte) 1);
        java.lang.String str14 = rentalSystem0.rentVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\". not found.", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".\".\".", 100);
        java.lang.String str18 = rentalSystem0.rentVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.\". not found.", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\".\".\". not found. not found. not found. not found.", 0);
        java.lang.String str20 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found.\".");
        java.lang.String str24 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\". not found. not found.\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\". not found.\". not found.", (int) '4');
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID hi! not found." + "'", str3, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found. not found." + "'", str10, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\". not found. not found." + "'", str14, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\". not found. not found.");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.\". not found. not found." + "'", str18, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.\". not found. not found.");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found.\". not found." + "'", str20, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\". not found. not found.\". not found." + "'", str24, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\". not found. not found.\". not found.");
    }

    @Test
    public void test2812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2812");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.", "Vehicle with ID Vehicle with ID hi! not found. not found.", "No vehicles match the keyword \"hi!\".", (double) 1L);
        java.lang.String str13 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"hi!\". not found.");
        java.lang.String str17 = rentalSystem0.rentVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found.", (int) '4');
        java.util.List<org.example.Vehicle> vehicleList18 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList19 = rentalSystem0.getVehicles();
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\".", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\". not found.", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".", 0.0d);
        int int25 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList26 = rentalSystem0.getCustomers();
        java.lang.Class<?> wildcardClass27 = rentalSystem0.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\"." + "'", str13, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\".");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found." + "'", str17, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.");
        org.junit.Assert.assertNotNull(vehicleList18);
        org.junit.Assert.assertNotNull(vehicleList19);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 2 + "'", int25 == 2);
        org.junit.Assert.assertNotNull(customerList26);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test2813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2813");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.returnVehicle("");
        int int9 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList10 = rentalSystem0.getCustomers();
        int int11 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addCustomer("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found.\". not found.");
        java.util.List<org.example.Vehicle> vehicleList15 = rentalSystem0.getVehicles();
        // The following exception was thrown during execution in test generation
        try {
            rentalSystem0.addVehicle("", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found. not found. not found.\".\".\". not found.", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\". not found.\".", 1.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Vehicle ID cannot be null or empty");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID  not found." + "'", str8, "Vehicle with ID  not found.");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(customerList10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(vehicleList15);
    }

    @Test
    public void test2814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2814");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        int int7 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addCustomer("hi!", "Vehicle with ID Vehicle with ID  not found. not found.");
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\". not found. not found. not found.\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n\".\".\". not found. not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found.", (double) 0);
        java.util.List<org.example.Customer> customerList16 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList17 = rentalSystem0.getCustomers();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(customerList16);
        org.junit.Assert.assertNotNull(customerList17);
    }

    @Test
    public void test2815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2815");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList5 = rentalSystem0.getVehicles();
        java.lang.String str9 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".", "No vehicles match the keyword \"Vehicle with ID  not found.\".", (int) ' ');
        java.lang.String str13 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID  not found. not found.", "", (int) (byte) -1);
        int int14 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.", "Vehicle with ID hi! not found.");
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\".", (double) 1.0f);
        rentalSystem0.addVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\". not found.\".", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found.", 0.0d);
        java.lang.String str29 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found.\".");
        java.util.List<org.example.Customer> customerList30 = rentalSystem0.getCustomers();
        java.lang.String str32 = rentalSystem0.returnVehicle("");
        // The following exception was thrown during execution in test generation
        try {
            rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\". not found. not found.", "", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found.", (double) 10L);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Model cannot be null or empty");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertNotNull(vehicleList5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found." + "'", str9, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str13, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found.\".\"." + "'", str29, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found.\".\".");
        org.junit.Assert.assertNotNull(customerList30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Vehicle with ID  not found." + "'", str32, "Vehicle with ID  not found.");
    }

    @Test
    public void test2816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2816");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.returnVehicle("");
        java.util.List<org.example.Customer> customerList9 = rentalSystem0.getCustomers();
        java.lang.String str11 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.");
        java.lang.String str15 = rentalSystem0.rentVehicle("Vehicle with ID No vehicles match the keyword \"\". not found.", "ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n", (int) (short) -1);
        int int16 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\". not found. not found. not found. not found. not found.\".", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n\". not found. not found. not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID  not found." + "'", str8, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList9);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found." + "'", str11, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found.");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found." + "'", str15, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found.");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
    }

    @Test
    public void test2817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2817");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.rentVehicle("", "No vehicles match the keyword \"Vehicle with ID hi! not found.\".", (int) (byte) 100);
        java.util.List<org.example.Vehicle> vehicleList9 = rentalSystem0.getVehicles();
        java.lang.String str11 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.");
        java.util.List<org.example.Vehicle> vehicleList12 = rentalSystem0.getVehicles();
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found. not found. not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID  not found.\".\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found.\".", (double) 1);
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\". not found.\".", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\".\". not found.");
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\".\".\".\".", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.\".\".");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID  not found." + "'", str8, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList9);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found." + "'", str11, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList12);
    }

    @Test
    public void test2818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2818");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.returnVehicle("");
        int int9 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str11 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.");
        java.util.List<org.example.Customer> customerList12 = rentalSystem0.getCustomers();
        java.lang.String str14 = rentalSystem0.searchVehicle("");
        java.lang.String str18 = rentalSystem0.rentVehicle("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\".\".\".", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found. not found. not found. not found.", (int) (byte) 0);
        java.util.List<org.example.Customer> customerList19 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList20 = rentalSystem0.getCustomers();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID  not found." + "'", str8, "Vehicle with ID  not found.");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found." + "'", str11, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.");
        org.junit.Assert.assertNotNull(customerList12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "No vehicles match the keyword \"\"." + "'", str14, "No vehicles match the keyword \"\".");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\".\".\". not found." + "'", str18, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\".\".\". not found.");
        org.junit.Assert.assertNotNull(customerList19);
        org.junit.Assert.assertNotNull(customerList20);
    }

    @Test
    public void test2819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2819");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList4 = rentalSystem0.getVehicles();
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.", "ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.", (double) (byte) 100);
        java.lang.String str13 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".", "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.", (int) 'a');
        java.util.List<org.example.Vehicle> vehicleList14 = rentalSystem0.getVehicles();
        // The following exception was thrown during execution in test generation
        try {
            rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found. not found. not found. not found.\". not found. not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\". not found.\". not found.\".\". not found. not found.\".", "", (double) 10L);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Type cannot be null or empty");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(vehicleList4);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found." + "'", str13, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList14);
    }

    @Test
    public void test2820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2820");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("hi!");
        rentalSystem0.addCustomer("ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n", "No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".");
        java.lang.String str10 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".", (int) (byte) 1);
        java.lang.String str12 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.");
        java.lang.String str14 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found.\". not found. not found.");
        java.lang.String str18 = rentalSystem0.rentVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\".\".\". not found. not found. not found.\".\".", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\". not found. not found.\".\". not found. not found. not found.", 100);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID hi! not found." + "'", str3, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found. not found." + "'", str10, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found." + "'", str12, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found.\". not found. not found.\"." + "'", str14, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found.\". not found. not found.\".");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\".\".\". not found. not found. not found.\".\". not found." + "'", str18, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\".\".\". not found. not found. not found.\".\". not found.");
    }

    @Test
    public void test2821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2821");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("");
        java.util.List<org.example.Vehicle> vehicleList4 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.rentVehicle("", "Vehicle with ID hi! not found.", (int) (short) 100);
        java.util.List<org.example.Vehicle> vehicleList9 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList10 = rentalSystem0.getVehicles();
        java.lang.String str12 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\". not found. not found. not found. not found.\".");
        java.lang.String str14 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\". not found.\". not found. not found.");
        java.lang.String str16 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found. not found.");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID  not found." + "'", str3, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID  not found." + "'", str8, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList9);
        org.junit.Assert.assertNotNull(vehicleList10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\". not found. not found. not found. not found.\". not found." + "'", str12, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\". not found. not found. not found. not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\". not found.\". not found. not found. not found." + "'", str14, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\". not found.\". not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found. not found. not found." + "'", str16, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found. not found. not found.");
    }

    @Test
    public void test2822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2822");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.lang.String str4 = rentalSystem0.searchVehicle("hi!");
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID  not found.\".", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\".", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\".", 100.0d);
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.\". not found.");
        java.util.List<org.example.Customer> customerList13 = rentalSystem0.getCustomers();
        java.lang.String str15 = rentalSystem0.searchVehicle("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\". not found.\".\".\".");
        java.lang.String str19 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.\".\".\". not found. not found.", "", (int) '#');
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "No vehicles match the keyword \"hi!\"." + "'", str4, "No vehicles match the keyword \"hi!\".");
        org.junit.Assert.assertNotNull(customerList13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\". not found.\".\".\".\"." + "'", str15, "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\". not found.\".\".\".\".");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.\".\".\". not found. not found. not found." + "'", str19, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.\".\".\". not found. not found. not found.");
    }

    @Test
    public void test2823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2823");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("hi!");
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        int int5 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str10 = rentalSystem0.rentVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found.", (int) (byte) 1);
        java.lang.String str14 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\".", (int) (byte) 0);
        java.lang.Class<?> wildcardClass15 = rentalSystem0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID hi! not found." + "'", str3, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found. not found." + "'", str10, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found. not found.");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\". not found." + "'", str14, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\". not found.");
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test2824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2824");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList7 = rentalSystem0.getVehicles();
        java.lang.String str11 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID hi! not found.\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.", (int) (byte) 100);
        int int12 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Vehicle> vehicleList13 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList14 = rentalSystem0.getCustomers();
        java.lang.String str16 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.");
        java.lang.String str18 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\". not found.");
        java.lang.String str22 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\". not found. not found. not found. not found.", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\".\". not found.", 100);
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\".\". not found.\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found.\". not found.\". not found.");
        java.lang.String str27 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\".\".\". not found. not found. not found.");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertNotNull(vehicleList7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found." + "'", str11, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(vehicleList13);
        org.junit.Assert.assertNotNull(customerList14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found. not found." + "'", str16, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\". not found.\"." + "'", str18, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\". not found.\".");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\". not found. not found. not found. not found. not found." + "'", str22, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\". not found. not found. not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\".\".\". not found. not found. not found. not found." + "'", str27, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\".\".\". not found. not found. not found. not found.");
    }

    @Test
    public void test2825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2825");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.");
        java.util.List<org.example.Customer> customerList9 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList10 = rentalSystem0.getVehicles();
        java.lang.String str12 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found. not found.\". not found. not found.");
        java.util.List<org.example.Customer> customerList13 = rentalSystem0.getCustomers();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\"." + "'", str8, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\".");
        org.junit.Assert.assertNotNull(customerList9);
        org.junit.Assert.assertNotNull(vehicleList10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found. not found.\". not found. not found.\"." + "'", str12, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found. not found.\". not found. not found.\".");
        org.junit.Assert.assertNotNull(customerList13);
    }

    @Test
    public void test2826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2826");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.searchVehicle("Vehicle with ID  not found.");
        rentalSystem0.addVehicle("hi!", "Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID hi! not found.", (double) 0);
        rentalSystem0.addCustomer("Vehicle with ID hi! not found.", "hi!");
        java.util.List<org.example.Vehicle> vehicleList17 = rentalSystem0.getVehicles();
        int int18 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList19 = rentalSystem0.getCustomers();
        int int20 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList21 = rentalSystem0.getCustomers();
        int int22 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Vehicle> vehicleList23 = rentalSystem0.getVehicles();
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\".\". not found. not found. not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\". not found.\".\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.\". not found. not found. not found. not found. not found.\". not found.", (double) (short) 100);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "No vehicles match the keyword \"Vehicle with ID  not found.\"." + "'", str8, "No vehicles match the keyword \"Vehicle with ID  not found.\".");
        org.junit.Assert.assertNotNull(vehicleList17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(customerList19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(customerList21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNotNull(vehicleList23);
    }

    @Test
    public void test2827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2827");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.lang.String str9 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.", (int) (byte) 1);
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID hi! not found.\".", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\".");
        java.lang.String str16 = rentalSystem0.rentVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.", "Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.", (int) (short) 100);
        int int17 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str19 = rentalSystem0.returnVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.\".\".");
        java.lang.String str21 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\". not found. not found. not found. not found.");
        java.util.List<org.example.Customer> customerList22 = rentalSystem0.getCustomers();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found." + "'", str9, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found. not found." + "'", str16, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found. not found.");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.\".\". not found." + "'", str19, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.\".\". not found.");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\". not found. not found. not found. not found.\"." + "'", str21, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\". not found. not found. not found. not found.\".");
        org.junit.Assert.assertNotNull(customerList22);
    }

    @Test
    public void test2828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2828");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("hi!");
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        int int5 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str9 = rentalSystem0.rentVehicle("No vehicles match the keyword \"\".", "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.", (int) (short) 10);
        java.lang.String str13 = rentalSystem0.rentVehicle("No vehicles match the keyword \"\".", "", (-1));
        int int14 = rentalSystem0.getAvailableVehicleCount();
        int int15 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str17 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\".");
        java.lang.String str19 = rentalSystem0.returnVehicle("");
        int int20 = rentalSystem0.getAvailableVehicleCount();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID hi! not found." + "'", str3, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Vehicle with ID No vehicles match the keyword \"\". not found." + "'", str9, "Vehicle with ID No vehicles match the keyword \"\". not found.");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID No vehicles match the keyword \"\". not found." + "'", str13, "Vehicle with ID No vehicles match the keyword \"\". not found.");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\".\"." + "'", str17, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\".\".");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Vehicle with ID  not found." + "'", str19, "Vehicle with ID  not found.");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
    }

    @Test
    public void test2829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2829");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        int int2 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        int int4 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".", "No vehicles match the keyword \"Vehicle with ID  not found.\".");
        int int8 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str10 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\".");
        java.lang.String str12 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\".");
        int int13 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str17 = rentalSystem0.rentVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\". not found.\". not found.", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found. not found. not found.\". not found.\". not found.\".", 2);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found." + "'", str10, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\".\"." + "'", str12, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\".\".");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\". not found.\". not found. not found." + "'", str17, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\". not found.\". not found. not found.");
    }

    @Test
    public void test2830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2830");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.lang.String str5 = rentalSystem0.returnVehicle("Vehicle with ID  not found.");
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        rentalSystem0.addVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\".", "Vehicle with ID No vehicles match the keyword \"hi!\". not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\".", (double) (short) 0);
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\". not found. not found. not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.");
        java.util.List<org.example.Vehicle> vehicleList15 = rentalSystem0.getVehicles();
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found.\".\". not found.\". not found.", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\".\". not found. not found. not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\". not found.\". not found.", (double) '4');
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID Vehicle with ID  not found. not found." + "'", str5, "Vehicle with ID Vehicle with ID  not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertNotNull(vehicleList15);
    }

    @Test
    public void test2831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2831");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.returnVehicle("Vehicle with ID  not found.");
        java.lang.String str12 = rentalSystem0.rentVehicle("Vehicle with ID hi! not found.", "Vehicle with ID Vehicle with ID  not found. not found.", (int) (byte) 10);
        java.lang.String str14 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        java.util.List<org.example.Vehicle> vehicleList15 = rentalSystem0.getVehicles();
        java.lang.String str19 = rentalSystem0.rentVehicle("", "Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.", (int) (byte) 100);
        java.lang.String str21 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.");
        java.util.List<org.example.Vehicle> vehicleList22 = rentalSystem0.getVehicles();
        java.lang.String str24 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found. not found.");
        int int25 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str27 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found.");
        int int28 = rentalSystem0.getAvailableVehicleCount();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID  not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID  not found. not found.");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID Vehicle with ID hi! not found. not found." + "'", str12, "Vehicle with ID Vehicle with ID hi! not found. not found.");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found." + "'", str14, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList15);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Vehicle with ID  not found." + "'", str19, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.\"." + "'", str21, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.\".");
        org.junit.Assert.assertNotNull(vehicleList22);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found. not found.\"." + "'", str24, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found. not found.\".");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found. not found." + "'", str27, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found. not found.");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
    }

    @Test
    public void test2832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2832");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("");
        int int4 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Vehicle> vehicleList5 = rentalSystem0.getVehicles();
        java.lang.String str7 = rentalSystem0.searchVehicle("hi!");
        java.lang.String str11 = rentalSystem0.rentVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found.", "", (int) (byte) 0);
        java.lang.String str13 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\". not found.");
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\". not found. not found. not found.", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\". not found.\".", "Vehicle with ID Vehicle with ID hi! not found. not found.", (double) 1L);
        // The following exception was thrown during execution in test generation
        try {
            rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found. not found. not found.", "ID: Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found., Model: No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\"., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found. not found. not found.\"., Daily Rate: $100.0, Status: Available\n", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\".\". not found. not found. not found. not found. not found.", (-1.0d));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Daily rate cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID  not found." + "'", str3, "Vehicle with ID  not found.");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(vehicleList5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "No vehicles match the keyword \"hi!\"." + "'", str7, "No vehicles match the keyword \"hi!\".");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found." + "'", str11, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found.");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\". not found.\"." + "'", str13, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\". not found.\".");
    }

    @Test
    public void test2833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2833");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        int int7 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\".\".", "Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.", "ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n", 1.0d);
        java.util.List<org.example.Customer> customerList13 = rentalSystem0.getCustomers();
        int int14 = rentalSystem0.getAvailableVehicleCount();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(customerList13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
    }

    @Test
    public void test2834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2834");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID  not found.\".", "hi!");
        int int10 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str12 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID  not found. not found.");
        java.util.List<org.example.Customer> customerList13 = rentalSystem0.getCustomers();
        int int14 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Vehicle> vehicleList15 = rentalSystem0.getVehicles();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str12, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertNotNull(customerList13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(vehicleList15);
    }

    @Test
    public void test2835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2835");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("hi!");
        java.lang.String str5 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\".", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".\".");
        java.lang.String str12 = rentalSystem0.rentVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\".\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\".", 1);
        java.util.List<org.example.Vehicle> vehicleList13 = rentalSystem0.getVehicles();
        java.lang.String str17 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\".", "Vehicle with ID ID: Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found., Model: No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\"., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found. not found. not found.\"., Daily Rate: $100.0, Status: Available\n not found.", (int) (short) 0);
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.\". not found. not found. not found. not found. not found.\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.\". not found.");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID hi! not found." + "'", str3, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found." + "'", str5, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\".\". not found." + "'", str12, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\".\". not found.");
        org.junit.Assert.assertNotNull(vehicleList13);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\". not found." + "'", str17, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\". not found.");
    }

    @Test
    public void test2836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2836");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID  not found.\".", "hi!");
        java.lang.String str11 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.");
        java.lang.String str13 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID hi! not found. not found.");
        java.lang.String str15 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\". not found. not found. not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\"." + "'", str11, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\".");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found." + "'", str13, "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\". not found. not found. not found. not found.\"." + "'", str15, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\". not found. not found. not found. not found.\".");
    }

    @Test
    public void test2837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2837");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        int int2 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        int int4 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList5 = rentalSystem0.getCustomers();
        java.lang.String str7 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.");
        java.lang.String str9 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found. not found. not found.\".");
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found.\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.\". not found.\".", (double) ' ');
        java.lang.String str18 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\".\". not found. not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\".", 2);
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\". not found. not found. not found. not found. not found.", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found. not found.", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found.", (double) (byte) 0);
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.\". not found.\".", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\". not found. not found. not found.\".\".", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID  not found.\".\".\".\".", (double) '4');
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(customerList5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found. not found." + "'", str7, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found. not found.");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found. not found. not found.\". not found." + "'", str9, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found. not found. not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\".\". not found. not found. not found." + "'", str18, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\".\". not found. not found. not found.");
    }

    @Test
    public void test2838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2838");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList5 = rentalSystem0.getVehicles();
        java.lang.String str9 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".", "No vehicles match the keyword \"Vehicle with ID  not found.\".", (int) ' ');
        java.lang.String str11 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\".", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\".\".");
        java.lang.String str18 = rentalSystem0.rentVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\".\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\". not found.", 0);
        java.util.List<org.example.Customer> customerList19 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList20 = rentalSystem0.getVehicles();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertNotNull(vehicleList5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found." + "'", str9, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found." + "'", str11, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\".\". not found." + "'", str18, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\".\". not found.");
        org.junit.Assert.assertNotNull(customerList19);
        org.junit.Assert.assertNotNull(vehicleList20);
    }

    @Test
    public void test2839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2839");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.lang.String str4 = rentalSystem0.searchVehicle("hi!");
        java.lang.Class<?> wildcardClass5 = rentalSystem0.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "No vehicles match the keyword \"hi!\"." + "'", str4, "No vehicles match the keyword \"hi!\".");
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test2840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2840");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID  not found. not found.", "No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        java.lang.String str8 = rentalSystem0.rentVehicle("hi!", "No vehicles match the keyword \"Vehicle with ID  not found.\".", 100);
        java.lang.String str10 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID hi! not found. not found.");
        java.lang.String str14 = rentalSystem0.rentVehicle("No vehicles match the keyword \"hi!\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.", 10);
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\". not found.\". not found. not found. not found. not found.\". not found.", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found. not found. not found.", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".\". not found. not found. not found. not found. not found.", (double) ' ');
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID hi! not found." + "'", str8, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found." + "'", str10, "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID No vehicles match the keyword \"hi!\". not found." + "'", str14, "Vehicle with ID No vehicles match the keyword \"hi!\". not found.");
    }

    @Test
    public void test2841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2841");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID  not found.\".", "hi!");
        rentalSystem0.addCustomer("No vehicles match the keyword \"hi!\".", "hi!");
        java.lang.String str14 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        java.util.List<org.example.Vehicle> vehicleList15 = rentalSystem0.getVehicles();
        java.lang.String str17 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.");
        int int18 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found. not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\". not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.\". not found.", (double) 1.0f);
        java.lang.String str25 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found. not found.");
        java.lang.String str27 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\".\"., Model: No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.\"., Type: Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found., Daily Rate: $10.0, Status: Available\n not found. not found.\".");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found." + "'", str14, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found." + "'", str17, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found. not found.\"." + "'", str25, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found. not found.\".");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\".\"., Model: No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.\"., Type: Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found., Daily Rate: $10.0, Status: Available\n not found. not found.\". not found." + "'", str27, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\".\"., Model: No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.\"., Type: Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found., Daily Rate: $10.0, Status: Available\n not found. not found.\". not found.");
    }

    @Test
    public void test2842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2842");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.");
        java.lang.String str10 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"hi!\". not found.");
        java.util.List<org.example.Vehicle> vehicleList11 = rentalSystem0.getVehicles();
        java.lang.Class<?> wildcardClass12 = vehicleList11.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\"." + "'", str8, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\".");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\"." + "'", str10, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\".");
        org.junit.Assert.assertNotNull(vehicleList11);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test2843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2843");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.returnVehicle("");
        int int9 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str13 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found.", (int) (short) 0);
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\". not found.", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found. not found. not found.", "Vehicle with ID No vehicles match the keyword \"\". not found.", (double) ' ');
        // The following exception was thrown during execution in test generation
        try {
            rentalSystem0.addVehicle("", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID  not found.\".\". not found. not found.\". not found.", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.\". not found. not found. not found. not found.", 0.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Vehicle ID cannot be null or empty");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID  not found." + "'", str8, "Vehicle with ID  not found.");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str13, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
    }

    @Test
    public void test2844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2844");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList7 = rentalSystem0.getVehicles();
        rentalSystem0.addVehicle("Vehicle with ID  not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".", 1.0d);
        java.util.List<org.example.Customer> customerList13 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList14 = rentalSystem0.getVehicles();
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\".\".\". not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found.\". not found.", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n\".\".\". not found. not found. not found. not found.", (double) 0L);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertNotNull(vehicleList7);
        org.junit.Assert.assertNotNull(customerList13);
        org.junit.Assert.assertNotNull(vehicleList14);
    }

    @Test
    public void test2845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2845");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        int int7 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addCustomer("hi!", "Vehicle with ID Vehicle with ID  not found. not found.");
        int int11 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found. not found.", (double) (byte) 1);
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\". not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found. not found.\".\".", "Vehicle is already available.", (double) 1);
        java.lang.String str23 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\". not found.\". not found. not found.\".");
        java.lang.Class<?> wildcardClass24 = rentalSystem0.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\". not found.\". not found. not found.\". not found." + "'", str23, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\". not found.\". not found. not found.\". not found.");
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test2846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2846");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("");
        rentalSystem0.addVehicle("Vehicle with ID  not found.", "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.", "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.", (double) (short) 0);
        int int9 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str13 = rentalSystem0.rentVehicle("", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\".", (int) (short) -1);
        int int14 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str18 = rentalSystem0.rentVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\". not found. not found. not found.\". not found.", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\".\". not found. not found. not found. not found.", 2);
        java.util.List<org.example.Vehicle> vehicleList19 = rentalSystem0.getVehicles();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID  not found." + "'", str3, "Vehicle with ID  not found.");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID  not found." + "'", str13, "Vehicle with ID  not found.");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\". not found. not found. not found.\". not found. not found." + "'", str18, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\". not found. not found. not found.\". not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList19);
    }

    @Test
    public void test2847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2847");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.lang.String str4 = rentalSystem0.searchVehicle("hi!");
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID  not found.\".", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\".", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\".", 100.0d);
        rentalSystem0.addCustomer("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.");
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found. not found. not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.");
        java.util.List<org.example.Customer> customerList16 = rentalSystem0.getCustomers();
        java.lang.String str18 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found., Model: Vehicle with ID Vehicle with ID hi! not found. not found., Type: No vehicles match the keyword \"hi!\"., Daily Rate: $1.0, Status: Available\nID: Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.\". not found., Model: No vehicles match the keyword \"\"., Type: No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found.\"., Daily Rate: $100.0, Status: Available\n not found. not found.\".");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "No vehicles match the keyword \"hi!\"." + "'", str4, "No vehicles match the keyword \"hi!\".");
        org.junit.Assert.assertNotNull(customerList16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found., Model: Vehicle with ID Vehicle with ID hi! not found. not found., Type: No vehicles match the keyword \"hi!\"., Daily Rate: $1.0, Status: Available\nID: Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.\". not found., Model: No vehicles match the keyword \"\"., Type: No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found.\"., Daily Rate: $100.0, Status: Available\n not found. not found.\". not found." + "'", str18, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found., Model: Vehicle with ID Vehicle with ID hi! not found. not found., Type: No vehicles match the keyword \"hi!\"., Daily Rate: $1.0, Status: Available\nID: Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.\". not found., Model: No vehicles match the keyword \"\"., Type: No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found.\"., Daily Rate: $100.0, Status: Available\n not found. not found.\". not found.");
    }

    @Test
    public void test2848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2848");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList7 = rentalSystem0.getVehicles();
        java.lang.String str11 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID hi! not found.\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.", (int) (byte) 100);
        java.lang.String str13 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".");
        java.lang.String str17 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".", (int) (byte) -1);
        java.util.List<org.example.Vehicle> vehicleList18 = rentalSystem0.getVehicles();
        java.lang.String str20 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\". not found.");
        java.lang.String str22 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\". not found.\". not found. not found.\".");
        java.util.List<org.example.Customer> customerList23 = rentalSystem0.getCustomers();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertNotNull(vehicleList7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found." + "'", str11, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\"." + "'", str13, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\".");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found." + "'", str17, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\". not found. not found." + "'", str20, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\". not found. not found.");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\". not found.\". not found. not found.\". not found." + "'", str22, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\". not found.\". not found. not found.\". not found.");
        org.junit.Assert.assertNotNull(customerList23);
    }

    @Test
    public void test2849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2849");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        int int7 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addCustomer("hi!", "Vehicle with ID Vehicle with ID  not found. not found.");
        java.lang.String str12 = rentalSystem0.searchVehicle("No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".");
        java.lang.String str14 = rentalSystem0.searchVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".\".");
        java.util.List<org.example.Vehicle> vehicleList15 = rentalSystem0.getVehicles();
        int int16 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Vehicle> vehicleList17 = rentalSystem0.getVehicles();
        java.lang.String str19 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.\". not found.");
        rentalSystem0.addVehicle("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\".\".\".", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID  not found.\".\".", "ID: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Model: No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\"., Type: No vehicles match the keyword \"Vehicle with ID hi! not found.\"., Daily Rate: $100.0, Status: Available\n", (double) 100);
        java.lang.String str28 = rentalSystem0.rentVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found.\".\". not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found. not found.", (int) (byte) -1);
        java.lang.Class<?> wildcardClass29 = rentalSystem0.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\"." + "'", str12, "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\".");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".\".\"." + "'", str14, "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".\".\".");
        org.junit.Assert.assertNotNull(vehicleList15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(vehicleList17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.\". not found. not found." + "'", str19, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.\". not found. not found.");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found.\".\". not found. not found." + "'", str28, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found.\".\". not found. not found.");
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test2850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2850");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID  not found.\".", "hi!");
        int int10 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str12 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID  not found. not found.");
        java.util.List<org.example.Customer> customerList13 = rentalSystem0.getCustomers();
        java.lang.Class<?> wildcardClass14 = rentalSystem0.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str12, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertNotNull(customerList13);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test2851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2851");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.");
        java.lang.String str10 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"hi!\". not found.");
        java.util.List<org.example.Vehicle> vehicleList11 = rentalSystem0.getVehicles();
        java.lang.String str15 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found. not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.\".\".", (int) 'a');
        java.lang.String str17 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".");
        int int18 = rentalSystem0.getAvailableVehicleCount();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\"." + "'", str8, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\".");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\"." + "'", str10, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\".");
        org.junit.Assert.assertNotNull(vehicleList11);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found. not found. not found." + "'", str15, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\". not found." + "'", str17, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\". not found.");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
    }

    @Test
    public void test2852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2852");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList5 = rentalSystem0.getVehicles();
        java.lang.String str9 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".", "No vehicles match the keyword \"Vehicle with ID  not found.\".", (int) ' ');
        java.lang.String str11 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        java.lang.String str13 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\".\".\". not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertNotNull(vehicleList5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found." + "'", str9, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found." + "'", str11, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\".\".\". not found.\"." + "'", str13, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\".\".\". not found.\".");
    }

    @Test
    public void test2853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2853");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.");
        java.lang.String str10 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".");
        java.util.List<org.example.Vehicle> vehicleList11 = rentalSystem0.getVehicles();
        java.lang.String str13 = rentalSystem0.searchVehicle("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.\". not found.\".\".\".");
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.\". not found.", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\". not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\".\". not found. not found. not found.\".", (double) ' ');
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\"." + "'", str8, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".\"." + "'", str10, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".\".");
        org.junit.Assert.assertNotNull(vehicleList11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.\". not found.\".\".\".\"." + "'", str13, "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.\". not found.\".\".\".\".");
    }

    @Test
    public void test2854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2854");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID  not found.", 100);
        java.lang.String str12 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID  not found.\".", "Vehicle with ID Vehicle with ID hi! not found. not found.", (int) (short) -1);
        java.lang.String str14 = rentalSystem0.searchVehicle("hi!");
        java.util.List<org.example.Vehicle> vehicleList15 = rentalSystem0.getVehicles();
        java.lang.String str17 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID hi! not found. not found.");
        java.lang.String str19 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.");
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found. not found.");
        java.lang.String str24 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found. not found. not found. not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found." + "'", str12, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "No vehicles match the keyword \"hi!\"." + "'", str14, "No vehicles match the keyword \"hi!\".");
        org.junit.Assert.assertNotNull(vehicleList15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\"." + "'", str17, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\".");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.\"." + "'", str19, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.\".");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found. not found. not found. not found. not found.\"." + "'", str24, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found. not found. not found. not found. not found.\".");
    }

    @Test
    public void test2855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2855");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.returnVehicle("Vehicle with ID  not found.");
        java.util.List<org.example.Vehicle> vehicleList9 = rentalSystem0.getVehicles();
        int int10 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle is already available. not found.", "No vehicles match the keyword \"No vehicles match the keyword \"ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n\".\".");
        java.util.List<org.example.Vehicle> vehicleList14 = rentalSystem0.getVehicles();
        java.lang.Class<?> wildcardClass15 = vehicleList14.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID  not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID  not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(vehicleList14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test2856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2856");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("hi!");
        java.lang.String str5 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList7 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList8 = rentalSystem0.getCustomers();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID hi! not found." + "'", str3, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found." + "'", str5, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertNotNull(vehicleList7);
        org.junit.Assert.assertNotNull(customerList8);
    }

    @Test
    public void test2857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2857");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("");
        int int4 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Vehicle> vehicleList5 = rentalSystem0.getVehicles();
        java.lang.String str7 = rentalSystem0.searchVehicle("hi!");
        java.util.List<org.example.Vehicle> vehicleList8 = rentalSystem0.getVehicles();
        java.lang.String str10 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.");
        java.lang.String str12 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\". not found.");
        java.util.List<org.example.Customer> customerList13 = rentalSystem0.getCustomers();
        java.lang.Class<?> wildcardClass14 = rentalSystem0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID  not found." + "'", str3, "Vehicle with ID  not found.");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(vehicleList5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "No vehicles match the keyword \"hi!\"." + "'", str7, "No vehicles match the keyword \"hi!\".");
        org.junit.Assert.assertNotNull(vehicleList8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found." + "'", str10, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\". not found. not found." + "'", str12, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\". not found. not found.");
        org.junit.Assert.assertNotNull(customerList13);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test2858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2858");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID  not found.\".", "hi!");
        java.lang.String str11 = rentalSystem0.returnVehicle("Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.");
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found.", "No vehicles match the keyword \"Vehicle with ID  not found.\".", (double) (short) 1);
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found. not found. not found.\".\".", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found. not found. not found.");
        java.lang.Class<?> wildcardClass20 = rentalSystem0.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found." + "'", str11, "Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.");
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test2859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2859");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList4 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID  not found. not found.", "hi!");
        int int8 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str10 = rentalSystem0.searchVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\".\".");
        java.lang.String str14 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.\".", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\".\".\". not found.", (int) (byte) 100);
        int int15 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str19 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found. not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\". not found. not found. not found.\".", (int) (short) 10);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(vehicleList4);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\".\".\"." + "'", str10, "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\".\".\".");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.\". not found." + "'", str14, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.\". not found.");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found. not found. not found. not found." + "'", str19, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found. not found. not found. not found.");
    }

    @Test
    public void test2860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2860");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("");
        rentalSystem0.addVehicle("Vehicle with ID  not found.", "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.", "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.", (double) (short) 0);
        java.lang.String str10 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"hi!\". not found.");
        int int11 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str13 = rentalSystem0.returnVehicle("Vehicle with ID  not found.");
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\".\". not found. not found. not found.", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\".\". not found. not found. not found.");
        int int17 = rentalSystem0.getAvailableVehicleCount();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID  not found." + "'", str3, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found." + "'", str10, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle is already available." + "'", str13, "Vehicle is already available.");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
    }

    @Test
    public void test2861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2861");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.searchVehicle("Vehicle with ID  not found.");
        rentalSystem0.addVehicle("hi!", "Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID hi! not found.", (double) 0);
        rentalSystem0.addCustomer("Vehicle with ID hi! not found.", "hi!");
        java.lang.String str18 = rentalSystem0.returnVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".");
        java.util.List<org.example.Customer> customerList19 = rentalSystem0.getCustomers();
        java.lang.String str23 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found. not found. not found.", 100);
        java.lang.String str25 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\". not found.\". not found. not found.\".");
        int int26 = rentalSystem0.getAvailableVehicleCount();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "No vehicles match the keyword \"Vehicle with ID  not found.\"." + "'", str8, "No vehicles match the keyword \"Vehicle with ID  not found.\".");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found." + "'", str18, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.");
        org.junit.Assert.assertNotNull(customerList19);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\". not found." + "'", str23, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\". not found.\". not found. not found.\". not found." + "'", str25, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\". not found.\". not found. not found.\". not found.");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
    }

    @Test
    public void test2862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2862");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("");
        java.util.List<org.example.Vehicle> vehicleList4 = rentalSystem0.getVehicles();
        java.lang.String str6 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID  not found. not found.");
        java.util.List<org.example.Customer> customerList7 = rentalSystem0.getCustomers();
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID  not found.\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.", (double) ' ');
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found. not found.", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found. not found. not found.", "Vehicle with ID Vehicle with ID hi! not found. not found.", (double) '#');
        java.lang.String str19 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found. not found. not found.");
        java.lang.String str21 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found. not found. not found.");
        java.lang.String str23 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\". not found. not found. not found.");
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\".\".\". not found. not found. not found. not found.", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"\".\". not found. not found.\".\". not found.");
        java.lang.String str28 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\".\". not found. not found. not found.");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID  not found." + "'", str3, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str6, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertNotNull(customerList7);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found. not found. not found.\"." + "'", str19, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found. not found. not found.\".");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found. not found. not found. not found." + "'", str21, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found. not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\". not found. not found. not found.\"." + "'", str23, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\". not found. not found. not found.\".");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\".\". not found. not found. not found. not found." + "'", str28, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\".\". not found. not found. not found. not found.");
    }

    @Test
    public void test2863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2863");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        rentalSystem0.addCustomer("hi!", "Vehicle with ID Vehicle with ID  not found. not found.");
        java.util.List<org.example.Vehicle> vehicleList9 = rentalSystem0.getVehicles();
        java.lang.String str13 = rentalSystem0.rentVehicle("hi!", "No vehicles match the keyword \"Vehicle with ID  not found.\".", (int) '4');
        java.util.List<org.example.Customer> customerList14 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList15 = rentalSystem0.getVehicles();
        int int16 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList17 = rentalSystem0.getCustomers();
        int int18 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Vehicle> vehicleList19 = rentalSystem0.getVehicles();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList9);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID hi! not found." + "'", str13, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertNotNull(customerList14);
        org.junit.Assert.assertNotNull(vehicleList15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(customerList17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(vehicleList19);
    }

    @Test
    public void test2864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2864");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList5 = rentalSystem0.getVehicles();
        java.lang.String str9 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".", "No vehicles match the keyword \"Vehicle with ID  not found.\".", (int) ' ');
        java.lang.String str13 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID  not found. not found.", "", (int) (byte) -1);
        int int14 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.", "Vehicle with ID hi! not found.");
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\".", (double) 1.0f);
        rentalSystem0.addVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\". not found.\".", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found.", 0.0d);
        java.lang.String str29 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found.\".");
        java.util.List<org.example.Customer> customerList30 = rentalSystem0.getCustomers();
        java.lang.String str32 = rentalSystem0.returnVehicle("");
        java.util.List<org.example.Customer> customerList33 = rentalSystem0.getCustomers();
        java.lang.String str35 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.\".\". not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertNotNull(vehicleList5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found." + "'", str9, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str13, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found.\".\"." + "'", str29, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found.\".\".");
        org.junit.Assert.assertNotNull(customerList30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Vehicle with ID  not found." + "'", str32, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.\".\". not found. not found. not found." + "'", str35, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.\".\". not found. not found. not found.");
    }

    @Test
    public void test2865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2865");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID  not found.\".", "hi!");
        java.lang.String str11 = rentalSystem0.returnVehicle("Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.");
        java.util.List<org.example.Vehicle> vehicleList12 = rentalSystem0.getVehicles();
        java.lang.String str14 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found.");
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\". not found. not found.", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found. not found.");
        int int18 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str20 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found. not found.");
        java.lang.String str22 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found.\". not found. not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found." + "'", str11, "Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found. not found." + "'", str14, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found. not found.");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found. not found.\"." + "'", str20, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found. not found.\".");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found.\". not found. not found. not found.\"." + "'", str22, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found.\". not found. not found. not found.\".");
    }

    @Test
    public void test2866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2866");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("");
        java.util.List<org.example.Vehicle> vehicleList4 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.rentVehicle("", "Vehicle with ID hi! not found.", (int) (short) 100);
        java.util.List<org.example.Vehicle> vehicleList9 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList10 = rentalSystem0.getVehicles();
        java.lang.String str12 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\". not found. not found. not found. not found.\".");
        java.lang.Class<?> wildcardClass13 = rentalSystem0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID  not found." + "'", str3, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID  not found." + "'", str8, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList9);
        org.junit.Assert.assertNotNull(vehicleList10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\". not found. not found. not found. not found.\". not found." + "'", str12, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\". not found. not found. not found. not found.\". not found.");
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test2867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2867");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.lang.String str9 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.", (int) (byte) 1);
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID  not found. not found.", "No vehicles match the keyword \"\".", "Vehicle with ID  not found.", (double) 1L);
        java.lang.String str16 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\". not found.");
        java.lang.String str18 = rentalSystem0.returnVehicle("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\".");
        java.util.List<org.example.Customer> customerList19 = rentalSystem0.getCustomers();
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\". not found. not found. not found.\". not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.\".", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.", (double) (short) 0);
        java.lang.String str26 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\". not found. not found.\".");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found." + "'", str9, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\". not found.\"." + "'", str16, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\". not found.\".");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\". not found." + "'", str18, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\". not found.");
        org.junit.Assert.assertNotNull(customerList19);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\". not found. not found.\".\"." + "'", str26, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\". not found. not found.\".\".");
    }

    @Test
    public void test2868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2868");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("");
        java.util.List<org.example.Vehicle> vehicleList4 = rentalSystem0.getVehicles();
        java.lang.String str6 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID  not found. not found.");
        java.util.List<org.example.Customer> customerList7 = rentalSystem0.getCustomers();
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID  not found.\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.", (double) ' ');
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found. not found.", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found. not found. not found.", "Vehicle with ID Vehicle with ID hi! not found. not found.", (double) '#');
        java.lang.String str19 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found. not found. not found.");
        java.lang.String str21 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found. not found. not found.");
        java.lang.String str23 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\". not found. not found. not found.");
        int int24 = rentalSystem0.getAvailableVehicleCount();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID  not found." + "'", str3, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str6, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertNotNull(customerList7);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found. not found. not found.\"." + "'", str19, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found. not found. not found.\".");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found. not found. not found. not found." + "'", str21, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found. not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\". not found. not found. not found.\"." + "'", str23, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\". not found. not found. not found.\".");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2 + "'", int24 == 2);
    }

    @Test
    public void test2869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2869");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.returnVehicle("Vehicle with ID  not found.");
        java.lang.String str10 = rentalSystem0.returnVehicle("hi!");
        java.lang.String str12 = rentalSystem0.searchVehicle("");
        java.lang.String str16 = rentalSystem0.rentVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found.", "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.", 0);
        java.lang.String str18 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".");
        int int19 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str21 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\". not found.\". not found. not found.");
        java.util.List<org.example.Vehicle> vehicleList22 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList23 = rentalSystem0.getVehicles();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID  not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID  not found. not found.");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID hi! not found." + "'", str10, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "No vehicles match the keyword \"\"." + "'", str12, "No vehicles match the keyword \"\".");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found." + "'", str16, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found.");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\"." + "'", str18, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\".");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\". not found.\". not found. not found. not found." + "'", str21, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\". not found.\". not found. not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList22);
        org.junit.Assert.assertNotNull(vehicleList23);
    }

    @Test
    public void test2870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2870");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID  not found.", 100);
        java.lang.String str12 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID  not found.\".", "Vehicle with ID Vehicle with ID hi! not found. not found.", (int) (short) -1);
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.", "ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n", "Vehicle with ID Vehicle with ID hi! not found. not found.", 100.0d);
        java.util.List<org.example.Vehicle> vehicleList18 = rentalSystem0.getVehicles();
        java.lang.String str20 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".");
        java.lang.String str22 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found. not found. not found. not found.\".");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found." + "'", str12, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\"." + "'", str20, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found. not found. not found. not found.\". not found." + "'", str22, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found. not found. not found. not found.\". not found.");
    }

    @Test
    public void test2871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2871");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.");
        java.lang.String str10 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"hi!\". not found.");
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\".", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found.");
        int int14 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str18 = rentalSystem0.rentVehicle("", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\". not found. not found. not found. not found.\".", 100);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\"." + "'", str8, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\".");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\"." + "'", str10, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\".");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Vehicle with ID  not found." + "'", str18, "Vehicle with ID  not found.");
    }

    @Test
    public void test2872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2872");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList7 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList8 = rentalSystem0.getCustomers();
        int int9 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str13 = rentalSystem0.rentVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\".\".\".", (int) '#');
        java.lang.String str15 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\".\".\". not found. not found. not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertNotNull(vehicleList7);
        org.junit.Assert.assertNotNull(customerList8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found." + "'", str13, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\".\".\". not found. not found. not found. not found.\"." + "'", str15, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\".\".\". not found. not found. not found. not found.\".");
    }

    @Test
    public void test2873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2873");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("");
        java.lang.String str5 = rentalSystem0.searchVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".\".");
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\". not found. not found.\".", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found. not found. not found.");
        java.lang.Class<?> wildcardClass9 = rentalSystem0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID  not found." + "'", str3, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".\".\"." + "'", str5, "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".\".\".");
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test2874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2874");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        int int2 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        int int4 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".", "No vehicles match the keyword \"Vehicle with ID  not found.\".");
        int int8 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str10 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\".");
        java.util.List<org.example.Vehicle> vehicleList11 = rentalSystem0.getVehicles();
        rentalSystem0.addVehicle("No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\". not found.", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.\".", (double) '#');
        rentalSystem0.addCustomer("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found.");
        int int20 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found.\". not found.", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\". not found. not found. not found.", "ID: Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found. not found.\". not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\". not found., Type: No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\"., Daily Rate: $10.0, Status: Available\n", (double) ' ');
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found." + "'", str10, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList11);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
    }

    @Test
    public void test2875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2875");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("hi!");
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        int int5 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str9 = rentalSystem0.rentVehicle("No vehicles match the keyword \"\".", "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.", (int) (short) 10);
        java.lang.String str11 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".");
        java.lang.String str13 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".");
        rentalSystem0.addCustomer("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\". not found. not found. not found. not found.\". not found.", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.\".\".\".");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID hi! not found." + "'", str3, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Vehicle with ID No vehicles match the keyword \"\". not found." + "'", str9, "Vehicle with ID No vehicles match the keyword \"\". not found.");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\". not found." + "'", str11, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\". not found." + "'", str13, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\". not found.");
    }

    @Test
    public void test2876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2876");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\".\". not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\".\".", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\". not found.\".", (double) (short) 100);
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\". not found. not found. not found. not found. not found.", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found. not found. not found. not found.", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\". not found.\". not found.\".\".\".", (double) (byte) 10);
        // The following exception was thrown during execution in test generation
        try {
            rentalSystem0.addCustomer("", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found. not found.\". not found. not found. not found. not found. not found.");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Name cannot be null or empty");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
    }

    @Test
    public void test2877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2877");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList7 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found.", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".");
        java.util.List<org.example.Vehicle> vehicleList11 = rentalSystem0.getVehicles();
        int int12 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.\".\".\".\". not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\". not found. not found. not found.\".", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found. not found. not found.\".\".\". not found.", (double) ' ');
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertNotNull(vehicleList7);
        org.junit.Assert.assertNotNull(vehicleList11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
    }

    @Test
    public void test2878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2878");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        rentalSystem0.addCustomer("hi!", "Vehicle with ID Vehicle with ID  not found. not found.");
        java.util.List<org.example.Vehicle> vehicleList9 = rentalSystem0.getVehicles();
        java.lang.String str13 = rentalSystem0.rentVehicle("hi!", "No vehicles match the keyword \"Vehicle with ID  not found.\".", (int) '4');
        java.lang.String str15 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found.");
        java.util.List<org.example.Vehicle> vehicleList16 = rentalSystem0.getVehicles();
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\".\".\". not found.", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\". not found.\".", (double) (byte) 1);
        java.lang.String str23 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"\".\".\". not found.");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList9);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID hi! not found." + "'", str13, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found." + "'", str15, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList16);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"\".\".\". not found.\"." + "'", str23, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"\".\".\". not found.\".");
    }

    @Test
    public void test2879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2879");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        int int7 = rentalSystem0.getAvailableVehicleCount();
        int int8 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList9 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList10 = rentalSystem0.getCustomers();
        java.lang.String str14 = rentalSystem0.rentVehicle("Vehicle with ID hi! not found.", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\". not found.", (int) '4');
        int int15 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\".\".", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.\". not found.\".");
        int int19 = rentalSystem0.getAvailableVehicleCount();
        int int20 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str24 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found.\". not found. not found. not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\".\".\". not found. not found.", (int) (byte) 1);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(customerList9);
        org.junit.Assert.assertNotNull(customerList10);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID Vehicle with ID hi! not found. not found." + "'", str14, "Vehicle with ID Vehicle with ID hi! not found. not found.");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found.\". not found. not found. not found. not found." + "'", str24, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found.\". not found. not found. not found. not found.");
    }

    @Test
    public void test2880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2880");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID  not found.", 100);
        java.lang.String str12 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID  not found.\".", "Vehicle with ID Vehicle with ID hi! not found. not found.", (int) (short) -1);
        java.lang.String str14 = rentalSystem0.searchVehicle("hi!");
        java.util.List<org.example.Vehicle> vehicleList15 = rentalSystem0.getVehicles();
        java.lang.String str17 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID hi! not found. not found.");
        java.lang.String str19 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.");
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\". not found.\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found. not found.\". not found.");
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\". not found.\".", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\".\".");
        java.util.List<org.example.Customer> customerList26 = rentalSystem0.getCustomers();
        java.lang.String str28 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.\".\". not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found." + "'", str12, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "No vehicles match the keyword \"hi!\"." + "'", str14, "No vehicles match the keyword \"hi!\".");
        org.junit.Assert.assertNotNull(vehicleList15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\"." + "'", str17, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\".");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.\"." + "'", str19, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.\".");
        org.junit.Assert.assertNotNull(customerList26);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.\".\". not found. not found." + "'", str28, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.\".\". not found. not found.");
    }

    @Test
    public void test2881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2881");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.lang.String str7 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".");
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID  not found.");
        java.util.List<org.example.Customer> customerList11 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList12 = rentalSystem0.getCustomers();
        int int13 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str15 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found. not found.\".\". not found. not found.\".");
        java.util.List<org.example.Vehicle> vehicleList16 = rentalSystem0.getVehicles();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\"." + "'", str7, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".");
        org.junit.Assert.assertNotNull(customerList11);
        org.junit.Assert.assertNotNull(customerList12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found. not found.\".\". not found. not found.\".\"." + "'", str15, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found. not found.\".\". not found. not found.\".\".");
        org.junit.Assert.assertNotNull(vehicleList16);
    }

    @Test
    public void test2882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2882");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList7 = rentalSystem0.getVehicles();
        java.lang.String str11 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID hi! not found.\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.", (int) (byte) 100);
        int int12 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Vehicle> vehicleList13 = rentalSystem0.getVehicles();
        java.lang.String str15 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\".");
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID  not found.\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\".", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.", (double) (byte) 1);
        java.util.List<org.example.Customer> customerList21 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList22 = rentalSystem0.getCustomers();
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found.\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found. not found.\". not found. not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found.", (double) (byte) 100);
        java.lang.String str29 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\". not found. not found. not found.");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertNotNull(vehicleList7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found." + "'", str11, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(vehicleList13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found." + "'", str15, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.");
        org.junit.Assert.assertNotNull(customerList21);
        org.junit.Assert.assertNotNull(customerList22);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\". not found. not found. not found.\"." + "'", str29, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\". not found. not found. not found.\".");
    }

    @Test
    public void test2883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2883");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.lang.String str7 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".");
        java.util.List<org.example.Vehicle> vehicleList8 = rentalSystem0.getVehicles();
        java.lang.String str10 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found. not found.\". not found.\".\".\". not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\"." + "'", str7, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".");
        org.junit.Assert.assertNotNull(vehicleList8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found. not found.\". not found.\".\".\". not found.\"." + "'", str10, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found. not found.\". not found.\".\".\". not found.\".");
    }

    @Test
    public void test2884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2884");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.", "Vehicle with ID Vehicle with ID hi! not found. not found.", "No vehicles match the keyword \"hi!\".", (double) 1L);
        java.lang.String str13 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"hi!\". not found.");
        java.lang.String str17 = rentalSystem0.rentVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found.", (int) '4');
        int int18 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Vehicle> vehicleList19 = rentalSystem0.getVehicles();
        int int20 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str22 = rentalSystem0.returnVehicle("Vehicle with ID ID: No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\".\"., Model: No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.\"., Type: Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found., Daily Rate: $10.0, Status: Available\n not found.");
        java.lang.Class<?> wildcardClass23 = rentalSystem0.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\"." + "'", str13, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\".");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found." + "'", str17, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(vehicleList19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Vehicle with ID Vehicle with ID ID: No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\".\"., Model: No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.\"., Type: Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found., Daily Rate: $10.0, Status: Available\n not found. not found." + "'", str22, "Vehicle with ID Vehicle with ID ID: No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\".\"., Model: No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.\"., Type: Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found., Daily Rate: $10.0, Status: Available\n not found. not found.");
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test2885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2885");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        rentalSystem0.addCustomer("hi!", "Vehicle with ID Vehicle with ID  not found. not found.");
        java.util.List<org.example.Vehicle> vehicleList9 = rentalSystem0.getVehicles();
        java.lang.String str13 = rentalSystem0.rentVehicle("hi!", "No vehicles match the keyword \"Vehicle with ID  not found.\".", (int) '4');
        java.util.List<org.example.Customer> customerList14 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList15 = rentalSystem0.getVehicles();
        int int16 = rentalSystem0.getAvailableVehicleCount();
        int int17 = rentalSystem0.getAvailableVehicleCount();
        int int18 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList19 = rentalSystem0.getCustomers();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList9);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID hi! not found." + "'", str13, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertNotNull(customerList14);
        org.junit.Assert.assertNotNull(vehicleList15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(customerList19);
    }

    @Test
    public void test2886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2886");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList5 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.\". not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\". not found. not found. not found.\". not found. not found.\".");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertNotNull(vehicleList5);
        org.junit.Assert.assertNotNull(vehicleList6);
    }

    @Test
    public void test2887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2887");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList4 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID  not found. not found.", "hi!");
        java.lang.String str11 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID hi! not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".", (int) '4');
        java.lang.String str13 = rentalSystem0.returnVehicle("");
        rentalSystem0.addVehicle("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\".\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\".", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID  not found.\".\".", 1.0d);
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\". not found. not found. not found.", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.");
        java.lang.String str25 = rentalSystem0.rentVehicle("ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\". not found. not found. not found.", (int) '4');
        java.lang.String str27 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found. not found. not found.\".\". not found.\".");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(vehicleList4);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found." + "'", str11, "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID  not found." + "'", str13, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found." + "'", str25, "Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found. not found. not found.\".\". not found.\". not found." + "'", str27, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found. not found. not found.\".\". not found.\". not found.");
    }

    @Test
    public void test2888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2888");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID  not found.\".", "hi!");
        java.lang.String str11 = rentalSystem0.returnVehicle("");
        int int12 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str14 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found.");
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.\". not found. not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n\". not found. not found.");
        java.util.List<org.example.Vehicle> vehicleList18 = rentalSystem0.getVehicles();
        java.lang.String str20 = rentalSystem0.searchVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\".\".");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID  not found." + "'", str11, "Vehicle with ID  not found.");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found.\"." + "'", str14, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found.\".");
        org.junit.Assert.assertNotNull(vehicleList18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\".\".\"." + "'", str20, "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\".\".\".");
    }

    @Test
    public void test2889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2889");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList4 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID  not found. not found.", "hi!");
        java.lang.String str11 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID hi! not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".", (int) '4');
        java.lang.String str13 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.");
        int int14 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str16 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\". not found. not found.");
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found. not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found.", 10.0d);
        java.lang.String str23 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".");
        int int24 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found.", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\". not found. not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found. not found. not found. not found. not found.\".", (double) 2);
        java.util.List<org.example.Customer> customerList30 = rentalSystem0.getCustomers();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(vehicleList4);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found." + "'", str11, "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found." + "'", str13, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\". not found. not found. not found." + "'", str16, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\". not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\". not found." + "'", str23, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\". not found.");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNotNull(customerList30);
    }

    @Test
    public void test2890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2890");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList7 = rentalSystem0.getVehicles();
        java.lang.String str11 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID hi! not found.\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.", (int) (byte) 100);
        int int12 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Vehicle> vehicleList13 = rentalSystem0.getVehicles();
        java.lang.String str15 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\".");
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\".\". not found. not found.", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found. not found. not found.\". not found.\".", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".\". not found. not found. not found.", (double) (byte) 10);
        java.util.List<org.example.Vehicle> vehicleList21 = rentalSystem0.getVehicles();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertNotNull(vehicleList7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found." + "'", str11, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(vehicleList13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found." + "'", str15, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList21);
    }

    @Test
    public void test2891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2891");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("hi!");
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        int int5 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str9 = rentalSystem0.rentVehicle("No vehicles match the keyword \"\".", "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.", (int) (short) 10);
        java.lang.String str13 = rentalSystem0.rentVehicle("No vehicles match the keyword \"\".", "", (-1));
        java.lang.String str15 = rentalSystem0.returnVehicle("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\".");
        java.util.List<org.example.Customer> customerList16 = rentalSystem0.getCustomers();
        java.lang.String str18 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.\". not found.\".\".\".\". not found.");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID hi! not found." + "'", str3, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Vehicle with ID No vehicles match the keyword \"\". not found." + "'", str9, "Vehicle with ID No vehicles match the keyword \"\". not found.");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID No vehicles match the keyword \"\". not found." + "'", str13, "Vehicle with ID No vehicles match the keyword \"\". not found.");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\". not found." + "'", str15, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\". not found.");
        org.junit.Assert.assertNotNull(customerList16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.\". not found.\".\".\".\". not found. not found." + "'", str18, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.\". not found.\".\".\".\". not found. not found.");
    }

    @Test
    public void test2892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2892");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID  not found.\".", "hi!");
        int int10 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str12 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID  not found. not found.");
        java.lang.String str16 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.", (int) 'a');
        java.lang.String str18 = rentalSystem0.searchVehicle("Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.");
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.\". not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found. not found.\".", (double) ' ');
        java.util.List<org.example.Customer> customerList24 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList25 = rentalSystem0.getCustomers();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str12, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found." + "'", str16, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\"." + "'", str18, "No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".");
        org.junit.Assert.assertNotNull(customerList24);
        org.junit.Assert.assertNotNull(customerList25);
    }

    @Test
    public void test2893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2893");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.returnVehicle("Vehicle with ID  not found.");
        java.lang.String str10 = rentalSystem0.returnVehicle("hi!");
        java.lang.String str14 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID hi! not found. not found.", "ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n", (int) (short) -1);
        rentalSystem0.addCustomer("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.");
        int int18 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found. not found.\". not found. not found.\".\".", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\". not found.\".");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID  not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID  not found. not found.");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID hi! not found." + "'", str10, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found." + "'", str14, "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
    }

    @Test
    public void test2894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2894");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        int int2 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        int int4 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".", "No vehicles match the keyword \"Vehicle with ID  not found.\".");
        int int8 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str10 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\".");
        java.lang.String str12 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".");
        java.util.List<org.example.Vehicle> vehicleList13 = rentalSystem0.getVehicles();
        java.lang.Class<?> wildcardClass14 = vehicleList13.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found." + "'", str10, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\"." + "'", str12, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\".");
        org.junit.Assert.assertNotNull(vehicleList13);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test2895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2895");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        java.lang.String str7 = rentalSystem0.searchVehicle("Vehicle with ID hi! not found.");
        java.util.List<org.example.Customer> customerList8 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList9 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\".\".", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found. not found. not found. not found.");
        int int13 = rentalSystem0.getAvailableVehicleCount();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "No vehicles match the keyword \"Vehicle with ID hi! not found.\"." + "'", str7, "No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        org.junit.Assert.assertNotNull(customerList8);
        org.junit.Assert.assertNotNull(vehicleList9);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
    }

    @Test
    public void test2896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2896");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID  not found.\".", "hi!");
        java.lang.String str11 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.");
        java.lang.String str13 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.");
        java.lang.String str15 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.\".");
        rentalSystem0.addCustomer("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.\".\". not found.", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\". not found. not found. not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\"." + "'", str11, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\".");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\"." + "'", str13, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\".");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.\".\"." + "'", str15, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.\".\".");
    }

    @Test
    public void test2897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2897");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList4 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID  not found. not found.", "hi!");
        java.lang.String str11 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID hi! not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".", (int) '4');
        java.lang.String str13 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.");
        int int14 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str18 = rentalSystem0.rentVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\".\". not found.", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\".\".\". not found.", (int) (byte) 100);
        java.lang.String str20 = rentalSystem0.returnVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found. not found. not found.\".\". not found.\".\".");
        java.util.List<org.example.Customer> customerList21 = rentalSystem0.getCustomers();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(vehicleList4);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found." + "'", str11, "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found." + "'", str13, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\".\". not found. not found." + "'", str18, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\".\". not found. not found.");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found. not found. not found.\".\". not found.\".\". not found." + "'", str20, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found. not found. not found.\".\". not found.\".\". not found.");
        org.junit.Assert.assertNotNull(customerList21);
    }

    @Test
    public void test2898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2898");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.", "Vehicle with ID Vehicle with ID hi! not found. not found.", "No vehicles match the keyword \"hi!\".", (double) 1L);
        java.lang.String str13 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\". not found.");
        java.lang.String str17 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n\".\".\". not found. not found.\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found. not found.\". not found.\". not found. not found.", (int) (short) -1);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\". not found.\"." + "'", str13, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\". not found.\".");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n\".\".\". not found. not found.\". not found." + "'", str17, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n\".\".\". not found. not found.\". not found.");
    }

    @Test
    public void test2899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2899");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("hi!");
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.lang.String str6 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".");
        java.lang.String str10 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\".\".\". not found. not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found. not found. not found. not found.\".\".", (int) (short) 10);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID hi! not found." + "'", str3, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\"." + "'", str6, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\".");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\".\".\". not found. not found. not found." + "'", str10, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\".\".\". not found. not found. not found.");
    }

    @Test
    public void test2900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2900");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        int int2 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        int int4 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList5 = rentalSystem0.getCustomers();
        java.lang.String str7 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.");
        java.lang.String str9 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found. not found. not found.\".");
        java.lang.String str11 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\".\". not found. not found.");
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found.\".\". not found.\". not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found.\".\". not found. not found.\".");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(customerList5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found. not found." + "'", str7, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found. not found.");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found. not found. not found.\". not found." + "'", str9, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found. not found. not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\".\". not found. not found.\"." + "'", str11, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\".\". not found. not found.\".");
    }

    @Test
    public void test2901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2901");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList7 = rentalSystem0.getVehicles();
        java.lang.String str11 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID hi! not found.\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.", (int) (byte) 100);
        java.lang.String str13 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".");
        int int14 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList15 = rentalSystem0.getCustomers();
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found.", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.", (double) '4');
        int int21 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str23 = rentalSystem0.returnVehicle("");
        java.lang.String str25 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\". not found.");
        java.lang.String str27 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found. not found.");
        java.lang.Class<?> wildcardClass28 = rentalSystem0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertNotNull(vehicleList7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found." + "'", str11, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\"." + "'", str13, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\".");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(customerList15);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Vehicle with ID  not found." + "'", str23, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\". not found. not found." + "'", str25, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\". not found. not found.");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found. not found.\"." + "'", str27, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found. not found.\".");
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test2902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2902");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID  not found.", 100);
        int int9 = rentalSystem0.getAvailableVehicleCount();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
    }

    @Test
    public void test2903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2903");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("hi!");
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        int int5 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str9 = rentalSystem0.rentVehicle("No vehicles match the keyword \"\".", "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.", (int) (short) 10);
        java.lang.String str13 = rentalSystem0.rentVehicle("No vehicles match the keyword \"\".", "", (-1));
        int int14 = rentalSystem0.getAvailableVehicleCount();
        int int15 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str17 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\".");
        int int18 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found.\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\". not found. not found. not found.\". not found.", (double) 10.0f);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID hi! not found." + "'", str3, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Vehicle with ID No vehicles match the keyword \"\". not found." + "'", str9, "Vehicle with ID No vehicles match the keyword \"\". not found.");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID No vehicles match the keyword \"\". not found." + "'", str13, "Vehicle with ID No vehicles match the keyword \"\". not found.");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\".\"." + "'", str17, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\".\".");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
    }

    @Test
    public void test2904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2904");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList7 = rentalSystem0.getVehicles();
        java.lang.String str11 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID hi! not found.\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.", (int) (byte) 100);
        java.lang.String str13 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".");
        int int14 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList15 = rentalSystem0.getCustomers();
        java.lang.Class<?> wildcardClass16 = rentalSystem0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertNotNull(vehicleList7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found." + "'", str11, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\"." + "'", str13, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\".");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(customerList15);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test2905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2905");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.");
        rentalSystem0.addCustomer("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\".");
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\".", "No vehicles match the keyword \"Vehicle with ID hi! not found.\".", (double) (short) 100);
        java.util.List<org.example.Customer> customerList18 = rentalSystem0.getCustomers();
        java.lang.String str20 = rentalSystem0.searchVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.\".\".");
        java.lang.String str24 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found., Model: Vehicle with ID Vehicle with ID hi! not found. not found., Type: No vehicles match the keyword \"hi!\"., Daily Rate: $1.0, Status: Available\nID: Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.\". not found., Model: No vehicles match the keyword \"\"., Type: No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found.\"., Daily Rate: $100.0, Status: Available\n not found. not found.\". not found.", (int) '4');
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertNotNull(customerList18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.\".\".\"." + "'", str20, "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.\".\".\".");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\". not found." + "'", str24, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\". not found.");
    }

    @Test
    public void test2906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2906");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("");
        rentalSystem0.addVehicle("Vehicle with ID  not found.", "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.", "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.", (double) (short) 0);
        java.lang.String str10 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"hi!\". not found.");
        int int11 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str13 = rentalSystem0.returnVehicle("Vehicle with ID  not found.");
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.\". not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found. not found.\".", (double) 1.0f);
        rentalSystem0.addVehicle("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\".\".\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found.\".", "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.", (double) 10L);
        java.util.List<org.example.Vehicle> vehicleList24 = rentalSystem0.getVehicles();
        int int25 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\". not found.\". not found.\".\". not found. not found.\".", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\". not found. not found. not found.");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID  not found." + "'", str3, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found." + "'", str10, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle is already available." + "'", str13, "Vehicle is already available.");
        org.junit.Assert.assertNotNull(vehicleList24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 3 + "'", int25 == 3);
    }

    @Test
    public void test2907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2907");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("hi!");
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList5 = rentalSystem0.getVehicles();
        java.lang.String str7 = rentalSystem0.searchVehicle("");
        java.util.List<org.example.Vehicle> vehicleList8 = rentalSystem0.getVehicles();
        java.lang.String str12 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.\".", (-1));
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.\".", "hi!", "Vehicle with ID hi! not found.", (double) 'a');
        java.lang.String str21 = rentalSystem0.rentVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\". not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found. not found. not found.\".", 100);
        java.lang.Class<?> wildcardClass22 = rentalSystem0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID hi! not found." + "'", str3, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertNotNull(vehicleList5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "No vehicles match the keyword \"\"." + "'", str7, "No vehicles match the keyword \"\".");
        org.junit.Assert.assertNotNull(vehicleList8);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\". not found." + "'", str12, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\". not found. not found." + "'", str21, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\". not found. not found.");
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test2908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2908");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        int int7 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList8 = rentalSystem0.getCustomers();
        java.lang.String str10 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        java.lang.String str12 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"\". not found.");
        java.util.List<org.example.Customer> customerList13 = rentalSystem0.getCustomers();
        java.lang.String str15 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\".\". not found. not found. not found. not found.");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(customerList8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found." + "'", str10, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\"." + "'", str12, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".");
        org.junit.Assert.assertNotNull(customerList13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\".\". not found. not found. not found. not found.\"." + "'", str15, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\".\". not found. not found. not found. not found.\".");
    }

    @Test
    public void test2909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2909");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList4 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID  not found. not found.", "hi!");
        java.lang.String str11 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID hi! not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".", (int) '4');
        java.lang.String str15 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".", (int) (short) -1);
        java.util.List<org.example.Customer> customerList16 = rentalSystem0.getCustomers();
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\". not found.\".", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found. not found. not found.", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\".\".\".\".", (double) 0);
        java.util.List<org.example.Customer> customerList22 = rentalSystem0.getCustomers();
        java.lang.Class<?> wildcardClass23 = rentalSystem0.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(vehicleList4);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found." + "'", str11, "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\". not found." + "'", str15, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\". not found.");
        org.junit.Assert.assertNotNull(customerList16);
        org.junit.Assert.assertNotNull(customerList22);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test2910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2910");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        int int7 = rentalSystem0.getAvailableVehicleCount();
        int int8 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\".", "hi!");
        java.lang.String str15 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\".", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID  not found.\".\".", (int) 'a');
        java.lang.String str17 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found. not found.");
        java.lang.String str19 = rentalSystem0.returnVehicle("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.\". not found.\".\".\".");
        java.lang.String str21 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID ID: Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found., Model: Vehicle with ID Vehicle with ID hi! not found. not found., Type: No vehicles match the keyword \"hi!\"., Daily Rate: $1.0, Status: Available\nID: Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.\". not found., Model: No vehicles match the keyword \"\"., Type: No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found.\"., Daily Rate: $100.0, Status: Available\n not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found." + "'", str15, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found. not found.\"." + "'", str17, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found. not found.\".");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.\". not found.\".\".\". not found." + "'", str19, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.\". not found.\".\".\". not found.");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found., Model: Vehicle with ID Vehicle with ID hi! not found. not found., Type: No vehicles match the keyword \"hi!\"., Daily Rate: $1.0, Status: Available\nID: Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.\". not found., Model: No vehicles match the keyword \"\"., Type: No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found.\"., Daily Rate: $100.0, Status: Available\n not found. not found. not found." + "'", str21, "Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found., Model: Vehicle with ID Vehicle with ID hi! not found. not found., Type: No vehicles match the keyword \"hi!\"., Daily Rate: $1.0, Status: Available\nID: Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.\". not found., Model: No vehicles match the keyword \"\"., Type: No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found.\"., Daily Rate: $100.0, Status: Available\n not found. not found. not found.");
    }

    @Test
    public void test2911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2911");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.returnVehicle("");
        java.util.List<org.example.Customer> customerList9 = rentalSystem0.getCustomers();
        java.lang.String str11 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.");
        java.lang.String str15 = rentalSystem0.rentVehicle("Vehicle with ID No vehicles match the keyword \"\". not found.", "ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n", (int) (short) -1);
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\".\".\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\". not found. not found.");
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\". not found. not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found. not found.", "Vehicle with ID Vehicle with ID hi! not found. not found.", (double) (short) 1);
        java.lang.String str27 = rentalSystem0.rentVehicle("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\".\".\".\".", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\". not found.\".", (-1));
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\". not found. not found.\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\". not found. not found.", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\". not found.\".", (double) (byte) 10);
        java.lang.String str36 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found. not found.\".\". not found. not found.\".", "ID: hi!, Model: Vehicle with ID Vehicle with ID  not found. not found., Type: Vehicle with ID hi! not found., Daily Rate: $0.0, Status: Available\n", 10);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID  not found." + "'", str8, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList9);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found." + "'", str11, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found.");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found." + "'", str15, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found.");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\".\".\".\". not found." + "'", str27, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\".\".\".\". not found.");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found. not found.\".\". not found. not found.\". not found." + "'", str36, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found. not found.\".\". not found. not found.\". not found.");
    }

    @Test
    public void test2912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2912");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID  not found. not found.", "No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        int int5 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID hi! not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".", "Vehicle with ID Vehicle with ID hi! not found. not found.", (double) 100.0f);
        java.util.List<org.example.Vehicle> vehicleList11 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList12 = rentalSystem0.getVehicles();
        java.lang.Class<?> wildcardClass13 = vehicleList12.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(vehicleList11);
        org.junit.Assert.assertNotNull(vehicleList12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test2913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2913");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID  not found.\".", "hi!");
        java.lang.String str11 = rentalSystem0.returnVehicle("");
        int int12 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str14 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.\".");
        // The following exception was thrown during execution in test generation
        try {
            rentalSystem0.addVehicle("ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found. not found.\". not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\". not found.\". not found. not found.\". not found.", (double) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Daily rate cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID  not found." + "'", str11, "Vehicle with ID  not found.");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.\".\"." + "'", str14, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.\".\".");
    }

    @Test
    public void test2914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2914");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList7 = rentalSystem0.getVehicles();
        java.lang.String str11 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID hi! not found.\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.", (int) (byte) 100);
        java.lang.String str13 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".");
        int int14 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList15 = rentalSystem0.getCustomers();
        java.lang.String str19 = rentalSystem0.rentVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.\". not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID  not found.\".\".", (int) (short) 100);
        java.util.List<org.example.Vehicle> vehicleList20 = rentalSystem0.getVehicles();
        java.lang.String str22 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\". not found.");
        java.util.List<org.example.Vehicle> vehicleList23 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList24 = rentalSystem0.getVehicles();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertNotNull(vehicleList7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found." + "'", str11, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\"." + "'", str13, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\".");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(customerList15);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.\". not found. not found." + "'", str19, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.\". not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\". not found. not found." + "'", str22, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\". not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList23);
        org.junit.Assert.assertNotNull(vehicleList24);
    }

    @Test
    public void test2915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2915");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList7 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found.", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".");
        java.util.List<org.example.Vehicle> vehicleList11 = rentalSystem0.getVehicles();
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found. not found. not found.\".", 100.0d);
        java.lang.String str18 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\". not found. not found. not found.");
        java.lang.String str20 = rentalSystem0.returnVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found.\".\".");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertNotNull(vehicleList7);
        org.junit.Assert.assertNotNull(vehicleList11);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\". not found. not found. not found.\"." + "'", str18, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\". not found. not found. not found.\".");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found.\".\". not found." + "'", str20, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found.\".\". not found.");
    }

    @Test
    public void test2916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2916");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("");
        rentalSystem0.addVehicle("Vehicle with ID  not found.", "Vehicle with ID hi! not found.", "Vehicle with ID Vehicle with ID hi! not found. not found.", (double) '4');
        java.lang.String str10 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".");
        int int11 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found. not found.", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found. not found.", 100.0d);
        java.util.List<org.example.Vehicle> vehicleList17 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList18 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList19 = rentalSystem0.getCustomers();
        java.lang.String str23 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\". not found. not found. not found. not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found. not found.", (-1));
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID  not found." + "'", str3, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\". not found." + "'", str10, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\". not found.");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(vehicleList17);
        org.junit.Assert.assertNotNull(vehicleList18);
        org.junit.Assert.assertNotNull(customerList19);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\". not found. not found. not found. not found. not found." + "'", str23, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\". not found. not found. not found. not found. not found.");
    }

    @Test
    public void test2917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2917");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID  not found. not found.", "No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        int int5 = rentalSystem0.getAvailableVehicleCount();
        int int6 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Vehicle> vehicleList7 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found.");
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\".\".", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\". not found. not found. not found.");
        rentalSystem0.addCustomer("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found.\".\". not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\".\". not found. not found. not found.\".");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(vehicleList7);
    }

    @Test
    public void test2918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2918");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("hi!");
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        int int5 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str9 = rentalSystem0.rentVehicle("No vehicles match the keyword \"\".", "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.", (int) (short) 10);
        java.lang.String str11 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".");
        java.util.List<org.example.Customer> customerList12 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList13 = rentalSystem0.getVehicles();
        java.lang.Class<?> wildcardClass14 = vehicleList13.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID hi! not found." + "'", str3, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Vehicle with ID No vehicles match the keyword \"\". not found." + "'", str9, "Vehicle with ID No vehicles match the keyword \"\". not found.");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\". not found." + "'", str11, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\". not found.");
        org.junit.Assert.assertNotNull(customerList12);
        org.junit.Assert.assertNotNull(vehicleList13);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test2919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2919");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID  not found. not found.", "No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        java.lang.String str8 = rentalSystem0.rentVehicle("hi!", "No vehicles match the keyword \"Vehicle with ID  not found.\".", 100);
        int int9 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str13 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".", "No vehicles match the keyword \"Vehicle with ID hi! not found.\".", 0);
        java.lang.String str15 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\". not found. not found.\".");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID hi! not found." + "'", str8, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\". not found." + "'", str13, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\". not found. not found.\". not found." + "'", str15, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\". not found. not found.\". not found.");
    }

    @Test
    public void test2920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2920");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("");
        int int4 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Vehicle> vehicleList5 = rentalSystem0.getVehicles();
        java.lang.String str7 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found.");
        java.lang.String str9 = rentalSystem0.searchVehicle("No vehicles match the keyword \"ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n\".");
        java.lang.String str11 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found.");
        java.lang.String str13 = rentalSystem0.returnVehicle("");
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found.\".");
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\". not found. not found.", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found.\". not found.\". not found. not found. not found.", "No vehicles match the keyword \"ID: Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found. not found. not found., Model: No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID  not found.\".\"., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found.\"., Daily Rate: $1.0, Status: Available\n\".", (double) 100);
        java.lang.String str25 = rentalSystem0.rentVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n\".\".\".\". not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\". not found. not found.", (int) '4');
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID  not found." + "'", str3, "Vehicle with ID  not found.");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(vehicleList5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found." + "'", str7, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n\".\"." + "'", str9, "No vehicles match the keyword \"No vehicles match the keyword \"ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n\".\".");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found.\"." + "'", str11, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found.\".");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID  not found." + "'", str13, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n\".\".\".\". not found. not found." + "'", str25, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n\".\".\".\". not found. not found.");
    }

    @Test
    public void test2921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2921");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID  not found. not found.", "No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        java.lang.String str8 = rentalSystem0.rentVehicle("hi!", "No vehicles match the keyword \"Vehicle with ID  not found.\".", 100);
        java.lang.String str10 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID hi! not found. not found.");
        java.lang.String str12 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found. not found.");
        int int13 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList14 = rentalSystem0.getCustomers();
        java.lang.String str16 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\". not found.\". not found.\".");
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\".\".\". not found. not found. not found. not found.", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found. not found. not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\". not found. not found.\".", (double) 1);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID hi! not found." + "'", str8, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found." + "'", str10, "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found. not found.\"." + "'", str12, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found. not found.\".");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(customerList14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\". not found.\". not found.\".\"." + "'", str16, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\". not found.\". not found.\".\".");
    }

    @Test
    public void test2922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2922");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.searchVehicle("Vehicle with ID  not found.");
        rentalSystem0.addVehicle("hi!", "Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID hi! not found.", (double) 0);
        rentalSystem0.addCustomer("Vehicle with ID hi! not found.", "hi!");
        java.lang.String str18 = rentalSystem0.returnVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".");
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID hi! not found.\".", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.", (double) (byte) 10);
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found.", 1.0d);
        int int29 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found. not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\". not found. not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found.\".\".", (double) 0L);
        // The following exception was thrown during execution in test generation
        try {
            rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\". not found. not found. not found. not found.\". not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found.\". not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\". not found. not found. not found. not found.\".\".", (double) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Daily rate cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "No vehicles match the keyword \"Vehicle with ID  not found.\"." + "'", str8, "No vehicles match the keyword \"Vehicle with ID  not found.\".");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found." + "'", str18, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 3 + "'", int29 == 3);
    }

    @Test
    public void test2923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2923");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("");
        java.util.List<org.example.Vehicle> vehicleList4 = rentalSystem0.getVehicles();
        java.lang.String str6 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID  not found. not found.");
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\". not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.", (double) 100.0f);
        java.lang.String str13 = rentalSystem0.returnVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\". not found.\".\".");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID  not found." + "'", str3, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str6, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\". not found.\".\". not found." + "'", str13, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\". not found.\".\". not found.");
    }

    @Test
    public void test2924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2924");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.", "Vehicle with ID Vehicle with ID hi! not found. not found.", "No vehicles match the keyword \"hi!\".", (double) 1L);
        java.lang.String str13 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"hi!\". not found.");
        java.lang.String str17 = rentalSystem0.rentVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found.", (int) '4');
        int int18 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Vehicle> vehicleList19 = rentalSystem0.getVehicles();
        int int20 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Vehicle> vehicleList21 = rentalSystem0.getVehicles();
        java.lang.String str25 = rentalSystem0.rentVehicle("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\".\".\".\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\". not found. not found. not found.\".", (int) (short) 10);
        java.util.List<org.example.Customer> customerList26 = rentalSystem0.getCustomers();
        java.lang.String str28 = rentalSystem0.searchVehicle("");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\"." + "'", str13, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\".");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found." + "'", str17, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(vehicleList19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(vehicleList21);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\".\".\".\". not found." + "'", str25, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\".\".\".\". not found.");
        org.junit.Assert.assertNotNull(customerList26);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "ID: Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found., Model: Vehicle with ID Vehicle with ID hi! not found. not found., Type: No vehicles match the keyword \"hi!\"., Daily Rate: $1.0, Status: Available\n" + "'", str28, "ID: Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found., Model: Vehicle with ID Vehicle with ID hi! not found. not found., Type: No vehicles match the keyword \"hi!\"., Daily Rate: $1.0, Status: Available\n");
    }

    @Test
    public void test2925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2925");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID  not found.\".", "hi!");
        int int10 = rentalSystem0.getAvailableVehicleCount();
        int int11 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList12 = rentalSystem0.getCustomers();
        int int13 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\". not found.\".", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found. not found. not found.");
        java.util.List<org.example.Vehicle> vehicleList17 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\". not found. not found. not found.\".", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.\".\".\".");
        java.lang.String str22 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(customerList12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(vehicleList17);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\"." + "'", str22, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\".");
    }

    @Test
    public void test2926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2926");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID  not found. not found.", "No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        java.util.List<org.example.Customer> customerList5 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        int int7 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str9 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found., Model: Vehicle with ID Vehicle with ID hi! not found. not found., Type: No vehicles match the keyword \"hi!\"., Daily Rate: $1.0, Status: Available\nID: Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.\". not found., Model: No vehicles match the keyword \"\"., Type: No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found.\"., Daily Rate: $100.0, Status: Available\n not found. not found. not found.");
        java.lang.Class<?> wildcardClass10 = rentalSystem0.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(customerList5);
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found., Model: Vehicle with ID Vehicle with ID hi! not found. not found., Type: No vehicles match the keyword \"hi!\"., Daily Rate: $1.0, Status: Available\nID: Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.\". not found., Model: No vehicles match the keyword \"\"., Type: No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found.\"., Daily Rate: $100.0, Status: Available\n not found. not found. not found. not found." + "'", str9, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found., Model: Vehicle with ID Vehicle with ID hi! not found. not found., Type: No vehicles match the keyword \"hi!\"., Daily Rate: $1.0, Status: Available\nID: Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.\". not found., Model: No vehicles match the keyword \"\"., Type: No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found.\"., Daily Rate: $100.0, Status: Available\n not found. not found. not found. not found.");
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test2927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2927");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID  not found. not found.", "No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        java.util.List<org.example.Customer> customerList5 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"\".\". not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(customerList5);
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"\".\". not found. not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"\".\". not found. not found. not found.");
    }

    @Test
    public void test2928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2928");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.searchVehicle("Vehicle with ID  not found.");
        int int9 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str11 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.");
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\".\". not found. not found.\". not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\".\". not found. not found.\".", "Vehicle with ID Vehicle with ID ID: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Model: No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\"., Type: No vehicles match the keyword \"Vehicle with ID hi! not found.\"., Daily Rate: $100.0, Status: Available\n not found. not found.", (double) (short) 10);
        int int17 = rentalSystem0.getAvailableVehicleCount();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "No vehicles match the keyword \"Vehicle with ID  not found.\"." + "'", str8, "No vehicles match the keyword \"Vehicle with ID  not found.\".");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found. not found." + "'", str11, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found. not found.");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
    }

    @Test
    public void test2929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2929");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.searchVehicle("Vehicle with ID  not found.");
        rentalSystem0.addVehicle("hi!", "Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID hi! not found.", (double) 0);
        rentalSystem0.addCustomer("Vehicle with ID hi! not found.", "hi!");
        java.util.List<org.example.Vehicle> vehicleList17 = rentalSystem0.getVehicles();
        java.lang.String str19 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found. not found. not found.");
        java.util.List<org.example.Vehicle> vehicleList20 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found. not found.\".\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found. not found.\".\". not found. not found.");
        java.lang.Class<?> wildcardClass24 = rentalSystem0.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "No vehicles match the keyword \"Vehicle with ID  not found.\"." + "'", str8, "No vehicles match the keyword \"Vehicle with ID  not found.\".");
        org.junit.Assert.assertNotNull(vehicleList17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found. not found. not found.\"." + "'", str19, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found. not found. not found.\".");
        org.junit.Assert.assertNotNull(vehicleList20);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test2930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2930");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        int int2 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Vehicle> vehicleList3 = rentalSystem0.getVehicles();
        int int4 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Vehicle> vehicleList5 = rentalSystem0.getVehicles();
        java.lang.String str7 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found. not found.");
        int int8 = rentalSystem0.getAvailableVehicleCount();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(vehicleList3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(vehicleList5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found. not found. not found." + "'", str7, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found. not found. not found.");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
    }

    @Test
    public void test2931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2931");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.");
        rentalSystem0.addCustomer("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\".");
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\".", "No vehicles match the keyword \"Vehicle with ID hi! not found.\".", (double) (short) 100);
        java.util.List<org.example.Customer> customerList18 = rentalSystem0.getCustomers();
        java.lang.String str20 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found. not found.");
        java.util.List<org.example.Vehicle> vehicleList21 = rentalSystem0.getVehicles();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertNotNull(customerList18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found. not found. not found." + "'", str20, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found. not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList21);
    }

    @Test
    public void test2932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2932");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        int int7 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList8 = rentalSystem0.getCustomers();
        java.lang.String str10 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        java.lang.String str12 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"\". not found.");
        java.util.List<org.example.Customer> customerList13 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found. not found.", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".\".\".");
        int int17 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str19 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.\". not found.");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(customerList8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found." + "'", str10, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\"." + "'", str12, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".");
        org.junit.Assert.assertNotNull(customerList13);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.\". not found. not found." + "'", str19, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.\". not found. not found.");
    }

    @Test
    public void test2933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2933");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.searchVehicle("Vehicle with ID  not found.");
        rentalSystem0.addVehicle("hi!", "Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID hi! not found.", (double) 0);
        rentalSystem0.addCustomer("Vehicle with ID hi! not found.", "hi!");
        java.lang.String str18 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.");
        java.util.List<org.example.Customer> customerList19 = rentalSystem0.getCustomers();
        java.lang.String str21 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found. not found. not found.\".");
        java.util.List<org.example.Vehicle> vehicleList22 = rentalSystem0.getVehicles();
        java.lang.Class<?> wildcardClass23 = vehicleList22.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "No vehicles match the keyword \"Vehicle with ID  not found.\"." + "'", str8, "No vehicles match the keyword \"Vehicle with ID  not found.\".");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\"." + "'", str18, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\".");
        org.junit.Assert.assertNotNull(customerList19);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found. not found. not found.\". not found." + "'", str21, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found. not found. not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList22);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test2934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2934");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        rentalSystem0.addCustomer("hi!", "Vehicle with ID Vehicle with ID  not found. not found.");
        java.util.List<org.example.Vehicle> vehicleList9 = rentalSystem0.getVehicles();
        java.lang.String str13 = rentalSystem0.rentVehicle("hi!", "No vehicles match the keyword \"Vehicle with ID  not found.\".", (int) '4');
        java.util.List<org.example.Customer> customerList14 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList15 = rentalSystem0.getVehicles();
        java.lang.String str19 = rentalSystem0.rentVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\".", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\".\".", 2);
        java.lang.Class<?> wildcardClass20 = rentalSystem0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList9);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID hi! not found." + "'", str13, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertNotNull(customerList14);
        org.junit.Assert.assertNotNull(vehicleList15);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\". not found." + "'", str19, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\". not found.");
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test2935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2935");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.searchVehicle("Vehicle with ID  not found.");
        rentalSystem0.addVehicle("hi!", "Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID hi! not found.", (double) 0);
        rentalSystem0.addCustomer("Vehicle with ID hi! not found.", "hi!");
        java.lang.String str18 = rentalSystem0.returnVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".");
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID hi! not found.\".", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.", (double) (byte) 10);
        int int24 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found. not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID hi! not found.\".\".", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found. not found.", (double) '#');
        java.util.List<org.example.Vehicle> vehicleList30 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList31 = rentalSystem0.getCustomers();
        // The following exception was thrown during execution in test generation
        try {
            rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found.\". not found.\".", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found. not found. not found.", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.\".\".\".\". not found.", (double) (-1L));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Daily rate cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "No vehicles match the keyword \"Vehicle with ID  not found.\"." + "'", str8, "No vehicles match the keyword \"Vehicle with ID  not found.\".");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found." + "'", str18, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2 + "'", int24 == 2);
        org.junit.Assert.assertNotNull(vehicleList30);
        org.junit.Assert.assertNotNull(customerList31);
    }

    @Test
    public void test2936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2936");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.lang.String str4 = rentalSystem0.searchVehicle("hi!");
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\".", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\". not found. not found. not found.", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\".\".\". not found.", (double) '#');
        java.lang.String str11 = rentalSystem0.returnVehicle("ID: Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found., Model: Vehicle with ID Vehicle with ID hi! not found. not found., Type: No vehicles match the keyword \"hi!\"., Daily Rate: $1.0, Status: Available\nID: Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.\". not found., Model: No vehicles match the keyword \"\"., Type: No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found.\"., Daily Rate: $100.0, Status: Available\n");
        java.lang.String str13 = rentalSystem0.returnVehicle("");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "No vehicles match the keyword \"hi!\"." + "'", str4, "No vehicles match the keyword \"hi!\".");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID ID: Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found., Model: Vehicle with ID Vehicle with ID hi! not found. not found., Type: No vehicles match the keyword \"hi!\"., Daily Rate: $1.0, Status: Available\nID: Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.\". not found., Model: No vehicles match the keyword \"\"., Type: No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found.\"., Daily Rate: $100.0, Status: Available\n not found." + "'", str11, "Vehicle with ID ID: Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found., Model: Vehicle with ID Vehicle with ID hi! not found. not found., Type: No vehicles match the keyword \"hi!\"., Daily Rate: $1.0, Status: Available\nID: Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.\". not found., Model: No vehicles match the keyword \"\"., Type: No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found.\"., Daily Rate: $100.0, Status: Available\n not found.");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID  not found." + "'", str13, "Vehicle with ID  not found.");
    }

    @Test
    public void test2937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2937");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.searchVehicle("Vehicle with ID  not found.");
        rentalSystem0.addVehicle("hi!", "Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID hi! not found.", (double) 0);
        java.util.List<org.example.Vehicle> vehicleList14 = rentalSystem0.getVehicles();
        java.lang.String str16 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\". not found.");
        java.util.List<org.example.Vehicle> vehicleList17 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList18 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList19 = rentalSystem0.getCustomers();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "No vehicles match the keyword \"Vehicle with ID  not found.\"." + "'", str8, "No vehicles match the keyword \"Vehicle with ID  not found.\".");
        org.junit.Assert.assertNotNull(vehicleList14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\". not found.\"." + "'", str16, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\". not found.\".");
        org.junit.Assert.assertNotNull(vehicleList17);
        org.junit.Assert.assertNotNull(customerList18);
        org.junit.Assert.assertNotNull(customerList19);
    }

    @Test
    public void test2938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2938");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        int int2 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        int int4 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addVehicle("Vehicle with ID  not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.", (double) (byte) 100);
        java.util.List<org.example.Vehicle> vehicleList10 = rentalSystem0.getVehicles();
        java.lang.String str12 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found. not found. not found. not found.");
        java.util.List<org.example.Customer> customerList13 = rentalSystem0.getCustomers();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(vehicleList10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found. not found. not found. not found. not found." + "'", str12, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found. not found. not found. not found. not found.");
        org.junit.Assert.assertNotNull(customerList13);
    }

    @Test
    public void test2939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2939");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList4 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID  not found. not found.", "hi!");
        java.lang.String str11 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID hi! not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".", (int) '4');
        java.lang.String str13 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.");
        java.util.List<org.example.Customer> customerList14 = rentalSystem0.getCustomers();
        int int15 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\".\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\".\". not found.", (double) 1);
        java.lang.String str22 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found. not found.\".");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(vehicleList4);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found." + "'", str11, "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found. not found." + "'", str13, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found. not found.");
        org.junit.Assert.assertNotNull(customerList14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found. not found.\". not found." + "'", str22, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found. not found.\". not found.");
    }

    @Test
    public void test2940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2940");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList4 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID  not found. not found.", "hi!");
        java.lang.String str11 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID hi! not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".", (int) '4');
        java.lang.String str13 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.");
        int int14 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str16 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\". not found. not found.");
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found. not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found.", 10.0d);
        java.lang.String str25 = rentalSystem0.rentVehicle("Vehicle with ID hi! not found.", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.", 0);
        java.util.List<org.example.Customer> customerList26 = rentalSystem0.getCustomers();
        java.lang.Class<?> wildcardClass27 = rentalSystem0.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(vehicleList4);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found." + "'", str11, "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found." + "'", str13, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\". not found. not found. not found." + "'", str16, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\". not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Vehicle with ID Vehicle with ID hi! not found. not found." + "'", str25, "Vehicle with ID Vehicle with ID hi! not found. not found.");
        org.junit.Assert.assertNotNull(customerList26);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test2941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2941");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID  not found. not found.", "No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        int int5 = rentalSystem0.getAvailableVehicleCount();
        int int6 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Vehicle> vehicleList7 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found.");
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found. not found.\". not found. not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID  not found.\".\".", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".", (double) (short) 100);
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found. not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found. not found. not found.\".\".");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(vehicleList7);
    }

    @Test
    public void test2942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2942");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID  not found.", 100);
        java.lang.String str12 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID  not found.\".", "Vehicle with ID Vehicle with ID hi! not found. not found.", (int) (short) -1);
        java.lang.String str14 = rentalSystem0.searchVehicle("hi!");
        java.util.List<org.example.Vehicle> vehicleList15 = rentalSystem0.getVehicles();
        java.lang.String str17 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID hi! not found. not found.");
        java.lang.String str19 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.");
        java.lang.String str21 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.");
        java.lang.String str23 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\". not found.\".");
        java.util.List<org.example.Vehicle> vehicleList24 = rentalSystem0.getVehicles();
        rentalSystem0.addVehicle("Vehicle with ID  not found.", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\".\". not found.", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\". not found. not found. not found. not found.", (double) (byte) 0);
        int int30 = rentalSystem0.getAvailableVehicleCount();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found." + "'", str12, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "No vehicles match the keyword \"hi!\"." + "'", str14, "No vehicles match the keyword \"hi!\".");
        org.junit.Assert.assertNotNull(vehicleList15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\"." + "'", str17, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\".");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.\"." + "'", str19, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.\".");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\"." + "'", str21, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\". not found.\". not found." + "'", str23, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\". not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList24);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
    }

    @Test
    public void test2943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2943");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        rentalSystem0.addCustomer("hi!", "Vehicle with ID Vehicle with ID  not found. not found.");
        java.util.List<org.example.Vehicle> vehicleList9 = rentalSystem0.getVehicles();
        java.lang.String str13 = rentalSystem0.rentVehicle("hi!", "No vehicles match the keyword \"Vehicle with ID  not found.\".", (int) '4');
        java.util.List<org.example.Customer> customerList14 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList15 = rentalSystem0.getVehicles();
        int int16 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.", (double) 100L);
        java.lang.String str23 = rentalSystem0.searchVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\".");
        java.lang.String str25 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\". not found.\".");
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\".\". not found. not found.\".", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\". not found.\". not found.\".\".", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\". not found.\". not found.\".\". not found.", (double) (short) 1);
        java.util.List<org.example.Vehicle> vehicleList31 = rentalSystem0.getVehicles();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList9);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID hi! not found." + "'", str13, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertNotNull(customerList14);
        org.junit.Assert.assertNotNull(vehicleList15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\".\"." + "'", str23, "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\".\".");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\". not found.\". not found." + "'", str25, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\". not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList31);
    }

    @Test
    public void test2944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2944");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID  not found. not found.", "No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        java.lang.String str8 = rentalSystem0.rentVehicle("hi!", "No vehicles match the keyword \"Vehicle with ID  not found.\".", 100);
        int int9 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str11 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found.");
        java.util.List<org.example.Vehicle> vehicleList12 = rentalSystem0.getVehicles();
        java.lang.String str14 = rentalSystem0.returnVehicle("");
        rentalSystem0.addVehicle("No vehicles match the keyword \"hi!\".", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found. not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found.\". not found.", (double) 0.0f);
        java.util.List<org.example.Customer> customerList20 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList21 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList22 = rentalSystem0.getVehicles();
        java.lang.String str24 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID hi! not found." + "'", str8, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found.\"." + "'", str11, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found.\".");
        org.junit.Assert.assertNotNull(vehicleList12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID  not found." + "'", str14, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList20);
        org.junit.Assert.assertNotNull(vehicleList21);
        org.junit.Assert.assertNotNull(vehicleList22);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found. not found. not found." + "'", str24, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found. not found. not found.");
    }

    @Test
    public void test2945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2945");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        java.lang.String str7 = rentalSystem0.searchVehicle("Vehicle with ID hi! not found.");
        java.util.List<org.example.Customer> customerList8 = rentalSystem0.getCustomers();
        java.lang.String str10 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.");
        java.lang.String str14 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found. not found.\".", 3);
        java.lang.String str16 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\". not found.\". not found. not found.\".");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "No vehicles match the keyword \"Vehicle with ID hi! not found.\"." + "'", str7, "No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        org.junit.Assert.assertNotNull(customerList8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found." + "'", str10, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found." + "'", str14, "Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\". not found.\". not found. not found.\".\"." + "'", str16, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\". not found.\". not found. not found.\".\".");
    }

    @Test
    public void test2946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2946");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        int int7 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str9 = rentalSystem0.searchVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\". not found. not found. not found. not found.\".\".");
        java.lang.Class<?> wildcardClass10 = rentalSystem0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\". not found. not found. not found. not found.\".\".\"." + "'", str9, "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\". not found. not found. not found. not found.\".\".\".");
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test2947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2947");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID  not found.\".", "hi!");
        int int10 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str12 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID  not found. not found.");
        int int13 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.", (double) 10);
        java.lang.String str20 = rentalSystem0.returnVehicle("Vehicle with ID  not found.");
        java.util.List<org.example.Customer> customerList21 = rentalSystem0.getCustomers();
        java.lang.Class<?> wildcardClass22 = rentalSystem0.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str12, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Vehicle with ID Vehicle with ID  not found. not found." + "'", str20, "Vehicle with ID Vehicle with ID  not found. not found.");
        org.junit.Assert.assertNotNull(customerList21);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test2948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2948");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID  not found.", 100);
        java.lang.String str12 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID  not found.\".", "Vehicle with ID Vehicle with ID hi! not found. not found.", (int) (short) -1);
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.");
        java.util.List<org.example.Vehicle> vehicleList16 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList17 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList18 = rentalSystem0.getCustomers();
        java.lang.String str20 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found. not found.");
        java.lang.String str22 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\". not found.\".");
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\". not found. not found. not found. not found.\".", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\". not found. not found. not found.", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\".", (double) (short) 0);
        int int28 = rentalSystem0.getAvailableVehicleCount();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found." + "'", str12, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList16);
        org.junit.Assert.assertNotNull(vehicleList17);
        org.junit.Assert.assertNotNull(customerList18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found. not found. not found." + "'", str20, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\". not found.\". not found." + "'", str22, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\". not found.\". not found.");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
    }

    @Test
    public void test2949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2949");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList5 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        int int7 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\". not found.\". not found. not found. not found.", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\". not found.\". not found.", (double) (short) 1);
        int int13 = rentalSystem0.getAvailableVehicleCount();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertNotNull(vehicleList5);
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
    }

    @Test
    public void test2950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2950");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.searchVehicle("Vehicle with ID  not found.");
        rentalSystem0.addVehicle("hi!", "Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID hi! not found.", (double) 0);
        java.util.List<org.example.Vehicle> vehicleList14 = rentalSystem0.getVehicles();
        java.lang.String str16 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\". not found.");
        java.util.List<org.example.Customer> customerList17 = rentalSystem0.getCustomers();
        int int18 = rentalSystem0.getAvailableVehicleCount();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "No vehicles match the keyword \"Vehicle with ID  not found.\"." + "'", str8, "No vehicles match the keyword \"Vehicle with ID  not found.\".");
        org.junit.Assert.assertNotNull(vehicleList14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\". not found.\"." + "'", str16, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\". not found.\".");
        org.junit.Assert.assertNotNull(customerList17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
    }

    @Test
    public void test2951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2951");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.searchVehicle("Vehicle with ID  not found.");
        rentalSystem0.addVehicle("hi!", "Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID hi! not found.", (double) 0);
        rentalSystem0.addCustomer("Vehicle with ID hi! not found.", "hi!");
        java.lang.String str18 = rentalSystem0.returnVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".");
        int int19 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID hi! not found.\".", "ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n");
        java.lang.String str24 = rentalSystem0.returnVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.\".\".");
        int int25 = rentalSystem0.getAvailableVehicleCount();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "No vehicles match the keyword \"Vehicle with ID  not found.\"." + "'", str8, "No vehicles match the keyword \"Vehicle with ID  not found.\".");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found." + "'", str18, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.\".\". not found." + "'", str24, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.\".\". not found.");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
    }

    @Test
    public void test2952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2952");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList5 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\".");
        rentalSystem0.addVehicle("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\".\".", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found.\".\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\". not found.", (double) (byte) 10);
        // The following exception was thrown during execution in test generation
        try {
            rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found. not found.", "");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Customer ID cannot be null or empty");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertNotNull(vehicleList5);
        org.junit.Assert.assertNotNull(vehicleList6);
    }

    @Test
    public void test2953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2953");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID  not found.\".", "hi!");
        int int10 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str12 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID  not found. not found.");
        java.lang.String str14 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.");
        java.util.List<org.example.Customer> customerList15 = rentalSystem0.getCustomers();
        java.lang.String str17 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\". not found.\". not found.\".\". not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str12, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\"." + "'", str14, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".");
        org.junit.Assert.assertNotNull(customerList15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\". not found.\". not found.\".\". not found. not found." + "'", str17, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\". not found.\". not found.\".\". not found. not found.");
    }

    @Test
    public void test2954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2954");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("hi!");
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        int int5 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str10 = rentalSystem0.rentVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found.", (int) (byte) 1);
        java.lang.String str14 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\".", (int) (byte) 0);
        java.lang.String str16 = rentalSystem0.searchVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\".");
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found. not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found.\". not found.\". not found.");
        int int20 = rentalSystem0.getAvailableVehicleCount();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID hi! not found." + "'", str3, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found. not found." + "'", str10, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found. not found.");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\". not found." + "'", str14, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\".\"." + "'", str16, "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\".\".");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
    }

    @Test
    public void test2955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2955");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        rentalSystem0.addCustomer("hi!", "Vehicle with ID Vehicle with ID  not found. not found.");
        java.util.List<org.example.Vehicle> vehicleList9 = rentalSystem0.getVehicles();
        java.lang.String str11 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\".");
        java.util.List<org.example.Customer> customerList12 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found. not found. not found.\". not found. not found. not found.", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\".\". not found. not found. not found.");
        java.lang.Class<?> wildcardClass16 = rentalSystem0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList9);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found." + "'", str11, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.");
        org.junit.Assert.assertNotNull(customerList12);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test2956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2956");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.lang.String str5 = rentalSystem0.returnVehicle("Vehicle with ID  not found.");
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID  not found.\".", "No vehicles match the keyword \"\".");
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.", "Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.\".", (double) (byte) 100);
        java.util.List<org.example.Vehicle> vehicleList14 = rentalSystem0.getVehicles();
        java.lang.String str16 = rentalSystem0.searchVehicle("Vehicle is already available.");
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found. not found. not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found. not found. not found.\".\". not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID Vehicle with ID  not found. not found." + "'", str5, "Vehicle with ID Vehicle with ID  not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "No vehicles match the keyword \"Vehicle is already available.\"." + "'", str16, "No vehicles match the keyword \"Vehicle is already available.\".");
    }

    @Test
    public void test2957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2957");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("");
        int int4 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Vehicle> vehicleList5 = rentalSystem0.getVehicles();
        java.lang.String str7 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found.");
        java.lang.String str9 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found.");
        java.util.List<org.example.Customer> customerList10 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList11 = rentalSystem0.getCustomers();
        int int12 = rentalSystem0.getAvailableVehicleCount();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID  not found." + "'", str3, "Vehicle with ID  not found.");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(vehicleList5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found." + "'", str7, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found.\"." + "'", str9, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found.\".");
        org.junit.Assert.assertNotNull(customerList10);
        org.junit.Assert.assertNotNull(customerList11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
    }

    @Test
    public void test2958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2958");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.lang.String str7 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".");
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID  not found.");
        int int11 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str13 = rentalSystem0.returnVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".");
        rentalSystem0.addCustomer("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.\". not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.");
        java.lang.String str20 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found. not found. not found. not found.\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\". not found.\". not found.", (int) (byte) 100);
        int int21 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addVehicle("ID: Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found. not found., Model: No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\"., Type: Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found., Daily Rate: $32.0, Status: Available\n", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\". not found.\".\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found. not found. not found.\".", 1.0d);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\"." + "'", str7, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\". not found." + "'", str13, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\". not found.");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found. not found. not found. not found.\". not found." + "'", str20, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found. not found. not found. not found.\". not found.");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
    }

    @Test
    public void test2959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2959");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("");
        java.util.List<org.example.Vehicle> vehicleList4 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.rentVehicle("", "Vehicle with ID hi! not found.", (int) (short) 100);
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.", "No vehicles match the keyword \"Vehicle with ID  not found.\".", "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.", (double) 10);
        java.util.List<org.example.Vehicle> vehicleList14 = rentalSystem0.getVehicles();
        java.lang.String str16 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\". not found.");
        java.util.List<org.example.Customer> customerList17 = rentalSystem0.getCustomers();
        java.lang.Class<?> wildcardClass18 = customerList17.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID  not found." + "'", str3, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID  not found." + "'", str8, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\". not found. not found." + "'", str16, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\". not found. not found.");
        org.junit.Assert.assertNotNull(customerList17);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test2960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2960");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID  not found.\".", "hi!");
        rentalSystem0.addCustomer("No vehicles match the keyword \"hi!\".", "hi!");
        java.lang.String str14 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        java.util.List<org.example.Vehicle> vehicleList15 = rentalSystem0.getVehicles();
        java.lang.String str17 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.");
        int int18 = rentalSystem0.getAvailableVehicleCount();
        int int19 = rentalSystem0.getAvailableVehicleCount();
        int int20 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str24 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\". not found.\".", "No vehicles match the keyword \"Vehicle with ID hi! not found.\".", (int) ' ');
        java.lang.String str26 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.\". not found. not found.");
        java.lang.Class<?> wildcardClass27 = rentalSystem0.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found." + "'", str14, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found." + "'", str17, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\". not found.\". not found." + "'", str24, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\". not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.\". not found. not found.\"." + "'", str26, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.\". not found. not found.\".");
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test2961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2961");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        int int7 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str9 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found. not found.\".");
        // The following exception was thrown during execution in test generation
        try {
            rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\".\". not found. not found. not found.\".", "", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.\". not found. not found.", 10.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Model cannot be null or empty");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found. not found.\".\"." + "'", str9, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found. not found.\".\".");
    }

    @Test
    public void test2962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2962");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        rentalSystem0.addCustomer("hi!", "Vehicle with ID Vehicle with ID  not found. not found.");
        java.util.List<org.example.Vehicle> vehicleList9 = rentalSystem0.getVehicles();
        java.lang.String str13 = rentalSystem0.rentVehicle("hi!", "No vehicles match the keyword \"Vehicle with ID  not found.\".", (int) '4');
        java.lang.String str15 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found.");
        java.lang.String str17 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found. not found. not found.\". not found.");
        java.lang.String str21 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\".", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.", 10);
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\". not found. not found.", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\".\". not found.", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found. not found. not found.", (double) ' ');
        java.lang.Class<?> wildcardClass27 = rentalSystem0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList9);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID hi! not found." + "'", str13, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found." + "'", str15, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found.");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found. not found. not found.\". not found. not found." + "'", str17, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found. not found. not found.\". not found. not found.");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found." + "'", str21, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.");
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test2963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2963");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID  not found.\".", "hi!");
        int int10 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str12 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID  not found. not found.");
        java.lang.String str14 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.");
        java.util.List<org.example.Customer> customerList15 = rentalSystem0.getCustomers();
        java.lang.String str17 = rentalSystem0.searchVehicle("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\".\".");
        int int18 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str22 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found.\".", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".", 0);
        java.util.List<org.example.Customer> customerList23 = rentalSystem0.getCustomers();
        java.lang.String str25 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\". not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str12, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\"." + "'", str14, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".");
        org.junit.Assert.assertNotNull(customerList15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\".\".\"." + "'", str17, "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\".\".\".");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found.\". not found." + "'", str22, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found.\". not found.");
        org.junit.Assert.assertNotNull(customerList23);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\". not found. not found. not found." + "'", str25, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\". not found. not found. not found.");
    }

    @Test
    public void test2964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2964");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("hi!");
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        int int5 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str7 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.\".");
        java.lang.String str9 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID  not found.\".\".\". not found.\". not found. not found.");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID hi! not found." + "'", str3, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.\". not found." + "'", str7, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID  not found.\".\".\". not found.\". not found. not found. not found." + "'", str9, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID  not found.\".\".\". not found.\". not found. not found. not found.");
    }

    @Test
    public void test2965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2965");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("");
        int int4 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Vehicle> vehicleList5 = rentalSystem0.getVehicles();
        java.lang.String str7 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found.");
        java.lang.String str9 = rentalSystem0.searchVehicle("No vehicles match the keyword \"ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n\".");
        java.util.List<org.example.Vehicle> vehicleList10 = rentalSystem0.getVehicles();
        java.lang.String str14 = rentalSystem0.rentVehicle("", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\". not found. not found. not found. not found.\". not found.", (-1));
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found. not found. not found.\".", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\". not found. not found. not found.", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.", (double) 1);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID  not found." + "'", str3, "Vehicle with ID  not found.");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(vehicleList5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found." + "'", str7, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n\".\"." + "'", str9, "No vehicles match the keyword \"No vehicles match the keyword \"ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n\".\".");
        org.junit.Assert.assertNotNull(vehicleList10);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID  not found." + "'", str14, "Vehicle with ID  not found.");
    }

    @Test
    public void test2966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2966");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList4 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID  not found. not found.", "hi!");
        java.lang.String str11 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID hi! not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".", (int) '4');
        java.lang.String str13 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.");
        int int14 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str16 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\". not found. not found.");
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found. not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found.", 10.0d);
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found.");
        java.util.List<org.example.Customer> customerList25 = rentalSystem0.getCustomers();
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found. not found. not found.\". not found.\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found. not found.\". not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.\". not found. not found.", (double) ' ');
        java.lang.Class<?> wildcardClass31 = rentalSystem0.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(vehicleList4);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found." + "'", str11, "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found." + "'", str13, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\". not found. not found. not found." + "'", str16, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\". not found. not found. not found.");
        org.junit.Assert.assertNotNull(customerList25);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test2967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2967");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.lang.String str7 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".");
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID  not found.");
        int int11 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str13 = rentalSystem0.returnVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".");
        java.lang.String str15 = rentalSystem0.searchVehicle("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\".");
        java.lang.String str17 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\". not found.\". not found. not found. not found.");
        java.lang.String str19 = rentalSystem0.searchVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\". not found. not found.\".\".");
        int int20 = rentalSystem0.getAvailableVehicleCount();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\"." + "'", str7, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\". not found." + "'", str13, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\". not found.");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\".\"." + "'", str15, "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\".\".");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\". not found.\". not found. not found. not found. not found." + "'", str17, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\". not found.\". not found. not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\". not found. not found.\".\".\"." + "'", str19, "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\". not found. not found.\".\".\".");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
    }

    @Test
    public void test2968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2968");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.");
        rentalSystem0.addCustomer("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\".");
        int int13 = rentalSystem0.getAvailableVehicleCount();
        int int14 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList15 = rentalSystem0.getCustomers();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(customerList15);
    }

    @Test
    public void test2969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2969");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.");
        int int9 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str11 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found. not found. not found.\". not found. not found.");
        java.lang.String str13 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.\".");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\"." + "'", str8, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found. not found. not found.\". not found. not found.\"." + "'", str11, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found. not found. not found.\". not found. not found.\".");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.\".\"." + "'", str13, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.\".\".");
    }

    @Test
    public void test2970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2970");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList4 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID  not found. not found.", "hi!");
        java.lang.String str11 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID hi! not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".", (int) '4');
        java.lang.String str13 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.");
        int int14 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str16 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\". not found. not found.");
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\". not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found. not found.\".", (double) 1.0f);
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\". not found.\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\". not found.\". not found.");
        java.util.List<org.example.Customer> customerList25 = rentalSystem0.getCustomers();
        java.lang.String str29 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\".\". not found. not found.", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found. not found. not found. not found. not found.", 0);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(vehicleList4);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found." + "'", str11, "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found." + "'", str13, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\". not found. not found. not found." + "'", str16, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\". not found. not found. not found.");
        org.junit.Assert.assertNotNull(customerList25);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\".\". not found. not found. not found." + "'", str29, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\".\". not found. not found. not found.");
    }

    @Test
    public void test2971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2971");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.searchVehicle("Vehicle with ID  not found.");
        int int9 = rentalSystem0.getAvailableVehicleCount();
        int int10 = rentalSystem0.getAvailableVehicleCount();
        int int11 = rentalSystem0.getAvailableVehicleCount();
        int int12 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str14 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found. not found. not found. not found.\". not found.\". not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "No vehicles match the keyword \"Vehicle with ID  not found.\"." + "'", str8, "No vehicles match the keyword \"Vehicle with ID  not found.\".");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found. not found. not found. not found.\". not found.\". not found. not found. not found." + "'", str14, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found. not found. not found. not found.\". not found.\". not found. not found. not found.");
    }

    @Test
    public void test2972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2972");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("hi!");
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        int int5 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str9 = rentalSystem0.rentVehicle("No vehicles match the keyword \"\".", "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.", (int) (short) 10);
        java.lang.String str13 = rentalSystem0.rentVehicle("No vehicles match the keyword \"\".", "", (-1));
        int int14 = rentalSystem0.getAvailableVehicleCount();
        int int15 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str17 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\".");
        java.lang.String str19 = rentalSystem0.returnVehicle("");
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.", "Vehicle with ID Vehicle with ID  not found. not found.");
        java.lang.String str24 = rentalSystem0.searchVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.\".\".");
        java.util.List<org.example.Vehicle> vehicleList25 = rentalSystem0.getVehicles();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID hi! not found." + "'", str3, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Vehicle with ID No vehicles match the keyword \"\". not found." + "'", str9, "Vehicle with ID No vehicles match the keyword \"\". not found.");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID No vehicles match the keyword \"\". not found." + "'", str13, "Vehicle with ID No vehicles match the keyword \"\". not found.");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\".\"." + "'", str17, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\".\".");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Vehicle with ID  not found." + "'", str19, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.\".\".\"." + "'", str24, "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.\".\".\".");
        org.junit.Assert.assertNotNull(vehicleList25);
    }

    @Test
    public void test2973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2973");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.lang.String str9 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.", (int) (byte) 1);
        java.util.List<org.example.Vehicle> vehicleList10 = rentalSystem0.getVehicles();
        java.lang.String str14 = rentalSystem0.rentVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.", (int) (short) 1);
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found. not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\".\".", (double) (short) 100);
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found.\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\". not found. not found.");
        int int23 = rentalSystem0.getAvailableVehicleCount();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found." + "'", str9, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList10);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found." + "'", str14, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
    }

    @Test
    public void test2974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2974");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("");
        rentalSystem0.addVehicle("Vehicle with ID  not found.", "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.", "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.", (double) (short) 0);
        java.lang.String str10 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"hi!\". not found.");
        java.util.List<org.example.Customer> customerList11 = rentalSystem0.getCustomers();
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\". not found.\". not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\". not found.\".\".", (double) 100);
        int int17 = rentalSystem0.getAvailableVehicleCount();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID  not found." + "'", str3, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found." + "'", str10, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.");
        org.junit.Assert.assertNotNull(customerList11);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2 + "'", int17 == 2);
    }

    @Test
    public void test2975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2975");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.returnVehicle("Vehicle with ID  not found.");
        java.lang.String str10 = rentalSystem0.returnVehicle("hi!");
        java.lang.String str12 = rentalSystem0.searchVehicle("");
        rentalSystem0.addCustomer("Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".");
        java.lang.String str17 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".");
        java.lang.String str19 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.");
        java.lang.String str23 = rentalSystem0.rentVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found.", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found.\". not found.\".", 10);
        java.lang.String str25 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found.");
        java.lang.Class<?> wildcardClass26 = rentalSystem0.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID  not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID  not found. not found.");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID hi! not found." + "'", str10, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "No vehicles match the keyword \"\"." + "'", str12, "No vehicles match the keyword \"\".");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\". not found." + "'", str17, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\"." + "'", str19, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found." + "'", str23, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found.");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found.\"." + "'", str25, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found.\".");
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test2976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2976");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID  not found.", 100);
        java.lang.String str12 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID  not found.\".", "Vehicle with ID Vehicle with ID hi! not found. not found.", (int) (short) -1);
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.");
        java.lang.String str17 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\". not found.\".");
        java.util.List<org.example.Vehicle> vehicleList18 = rentalSystem0.getVehicles();
        java.lang.String str22 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found. not found.", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\".\".\".", (int) (byte) 0);
        java.lang.String str24 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\".\". not found.\". not found.");
        java.util.List<org.example.Vehicle> vehicleList25 = rentalSystem0.getVehicles();
        int int26 = rentalSystem0.getAvailableVehicleCount();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found." + "'", str12, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\". not found.\". not found." + "'", str17, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\". not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList18);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found. not found. not found." + "'", str22, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\".\". not found.\". not found.\"." + "'", str24, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\".\". not found.\". not found.\".");
        org.junit.Assert.assertNotNull(vehicleList25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
    }

    @Test
    public void test2977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2977");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList4 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID  not found. not found.", "hi!");
        java.lang.String str11 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID hi! not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".", (int) '4');
        java.lang.String str13 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.");
        int int14 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str16 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\". not found.\".");
        java.lang.String str18 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found. not found.");
        java.util.List<org.example.Vehicle> vehicleList19 = rentalSystem0.getVehicles();
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\". not found. not found. not found.\". not found.", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\". not found.\". not found. not found. not found. not found.", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found. not found. not found. not found.", (double) 10.0f);
        java.util.List<org.example.Vehicle> vehicleList25 = rentalSystem0.getVehicles();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(vehicleList4);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found." + "'", str11, "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found. not found." + "'", str13, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found. not found.");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\". not found.\". not found." + "'", str16, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\". not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found. not found. not found." + "'", str18, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found. not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList19);
        org.junit.Assert.assertNotNull(vehicleList25);
    }

    @Test
    public void test2978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2978");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.rentVehicle("", "No vehicles match the keyword \"Vehicle with ID hi! not found.\".", (int) (byte) 100);
        java.util.List<org.example.Vehicle> vehicleList9 = rentalSystem0.getVehicles();
        java.lang.String str11 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.");
        java.util.List<org.example.Vehicle> vehicleList12 = rentalSystem0.getVehicles();
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found. not found. not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID  not found.\".\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found.\".", (double) 1);
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\". not found.\".", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\".\". not found.");
        int int21 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Vehicle> vehicleList22 = rentalSystem0.getVehicles();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID  not found." + "'", str8, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList9);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found." + "'", str11, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList12);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNotNull(vehicleList22);
    }

    @Test
    public void test2979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2979");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("");
        rentalSystem0.addVehicle("Vehicle with ID  not found.", "Vehicle with ID hi! not found.", "Vehicle with ID Vehicle with ID hi! not found. not found.", (double) '4');
        int int9 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Vehicle> vehicleList10 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList11 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList12 = rentalSystem0.getVehicles();
        int int13 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addCustomer("ID: No vehicles match the keyword \"Vehicle with ID  not found.\"., Model: No vehicles match the keyword \"Vehicle with ID  not found.\"., Type: Vehicle with ID  not found., Daily Rate: $10.0, Status: Available\n", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found. not found.\".\".\".");
        java.lang.Class<?> wildcardClass17 = rentalSystem0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID  not found." + "'", str3, "Vehicle with ID  not found.");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(vehicleList10);
        org.junit.Assert.assertNotNull(customerList11);
        org.junit.Assert.assertNotNull(vehicleList12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test2980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2980");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID  not found. not found.", "No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        java.lang.String str8 = rentalSystem0.rentVehicle("hi!", "No vehicles match the keyword \"Vehicle with ID  not found.\".", 100);
        int int9 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str11 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found.");
        int int12 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str16 = rentalSystem0.rentVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found.\". not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found. not found.\".\".", (int) (short) 0);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID hi! not found." + "'", str8, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found. not found." + "'", str11, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found. not found.");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found.\". not found. not found." + "'", str16, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found.\". not found. not found.");
    }

    @Test
    public void test2981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2981");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.searchVehicle("Vehicle with ID  not found.");
        rentalSystem0.addVehicle("hi!", "Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID hi! not found.", (double) 0);
        java.util.List<org.example.Customer> customerList14 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList15 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList16 = rentalSystem0.getCustomers();
        java.lang.String str18 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found. not found. not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "No vehicles match the keyword \"Vehicle with ID  not found.\"." + "'", str8, "No vehicles match the keyword \"Vehicle with ID  not found.\".");
        org.junit.Assert.assertNotNull(customerList14);
        org.junit.Assert.assertNotNull(vehicleList15);
        org.junit.Assert.assertNotNull(customerList16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found. not found. not found.\". not found. not found." + "'", str18, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found. not found. not found.\". not found. not found.");
    }

    @Test
    public void test2982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2982");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID  not found. not found.", "No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        java.util.List<org.example.Customer> customerList5 = rentalSystem0.getCustomers();
        java.lang.String str7 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\". not found. not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(customerList5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\". not found. not found. not found.\"." + "'", str7, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\". not found. not found. not found.\".");
    }

    @Test
    public void test2983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2983");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList4 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID  not found. not found.", "hi!");
        java.lang.String str11 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID hi! not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".", (int) '4');
        java.lang.String str15 = rentalSystem0.rentVehicle("", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.", (int) (byte) -1);
        java.lang.String str17 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\".");
        java.util.List<org.example.Vehicle> vehicleList18 = rentalSystem0.getVehicles();
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.\".", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\".\".", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\".\".", (double) 1.0f);
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found. not found.\".\". not found. not found.", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\". not found.\".\". not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found. not found.\". not found. not found.\". not found.", 0.0d);
        java.util.List<org.example.Vehicle> vehicleList29 = rentalSystem0.getVehicles();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(vehicleList4);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found." + "'", str11, "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Vehicle with ID  not found." + "'", str15, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found." + "'", str17, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList18);
        org.junit.Assert.assertNotNull(vehicleList29);
    }

    @Test
    public void test2984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2984");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\". not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.", 1.0d);
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\". not found.\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\". not found.", (double) 'a');
        java.lang.String str18 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found. not found.");
        rentalSystem0.addCustomer("Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\". not found.\". not found.", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found. not found. not found.\". not found.\".");
        java.util.List<org.example.Customer> customerList22 = rentalSystem0.getCustomers();
        java.lang.String str26 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found. not found.\". not found. not found.\". not found.\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\". not found. not found.", (int) ' ');
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found. not found. not found." + "'", str18, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found. not found. not found.");
        org.junit.Assert.assertNotNull(customerList22);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found. not found.\". not found. not found.\". not found.\". not found." + "'", str26, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found. not found.\". not found. not found.\". not found.\". not found.");
    }

    @Test
    public void test2985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2985");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.returnVehicle("Vehicle with ID  not found.");
        java.lang.String str10 = rentalSystem0.returnVehicle("hi!");
        java.lang.String str12 = rentalSystem0.searchVehicle("");
        rentalSystem0.addCustomer("Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".");
        java.lang.String str17 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".");
        java.lang.String str19 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.");
        java.lang.String str21 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found. not found. not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID  not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID  not found. not found.");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID hi! not found." + "'", str10, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "No vehicles match the keyword \"\"." + "'", str12, "No vehicles match the keyword \"\".");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\". not found." + "'", str17, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\"." + "'", str19, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found. not found. not found.\". not found. not found." + "'", str21, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found. not found. not found.\". not found. not found.");
    }

    @Test
    public void test2986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2986");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID  not found.\".", "hi!");
        int int10 = rentalSystem0.getAvailableVehicleCount();
        int int11 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList12 = rentalSystem0.getCustomers();
        java.lang.String str16 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found. not found. not found.", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\".\".", (int) (short) -1);
        java.lang.String str18 = rentalSystem0.returnVehicle("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found.\". not found.\".\".\".");
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\". not found.\". not found. not found.\". not found.", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n\".\".\".\".\".", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\". not found.\".", (double) (short) 0);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(customerList12);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found. not found. not found. not found." + "'", str16, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found. not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found.\". not found.\".\".\". not found." + "'", str18, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found.\". not found.\".\".\". not found.");
    }

    @Test
    public void test2987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2987");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID  not found. not found.", "No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        int int5 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID hi! not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".", "Vehicle with ID Vehicle with ID hi! not found. not found.", (double) 100.0f);
        java.lang.String str14 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found. not found.", "", 0);
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found.\".", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\". not found. not found. not found. not found. not found.", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\".\". not found.", (double) 100L);
        java.util.List<org.example.Customer> customerList20 = rentalSystem0.getCustomers();
        java.lang.String str24 = rentalSystem0.rentVehicle("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\".\".\".\".", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\".\".\".\". not found.", (int) (short) 100);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found. not found. not found." + "'", str14, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found. not found. not found.");
        org.junit.Assert.assertNotNull(customerList20);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\".\".\".\". not found." + "'", str24, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\".\".\".\". not found.");
    }

    @Test
    public void test2988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2988");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("hi!");
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID hi! not found. not found.", "Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID hi! not found.", 10.0d);
        int int9 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str11 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\". not found.");
        java.lang.String str13 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID hi! not found." + "'", str3, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\". not found. not found." + "'", str11, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\". not found. not found.");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\"." + "'", str13, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\".");
    }

    @Test
    public void test2989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2989");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID  not found.", 100);
        java.lang.String str12 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID  not found.\".", "Vehicle with ID Vehicle with ID hi! not found. not found.", (int) (short) -1);
        java.lang.String str14 = rentalSystem0.searchVehicle("hi!");
        java.util.List<org.example.Vehicle> vehicleList15 = rentalSystem0.getVehicles();
        int int16 = rentalSystem0.getAvailableVehicleCount();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found." + "'", str12, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "No vehicles match the keyword \"hi!\"." + "'", str14, "No vehicles match the keyword \"hi!\".");
        org.junit.Assert.assertNotNull(vehicleList15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
    }

    @Test
    public void test2990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2990");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList7 = rentalSystem0.getVehicles();
        rentalSystem0.addVehicle("Vehicle with ID  not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".", 1.0d);
        java.util.List<org.example.Customer> customerList13 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList14 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\".\". not found. not found. not found. not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\".\"., Model: No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.\"., Type: Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found., Daily Rate: $10.0, Status: Available\n not found. not found.\". not found.");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertNotNull(vehicleList7);
        org.junit.Assert.assertNotNull(customerList13);
        org.junit.Assert.assertNotNull(vehicleList14);
    }

    @Test
    public void test2991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2991");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList7 = rentalSystem0.getVehicles();
        java.lang.String str11 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID hi! not found.\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.", (int) (byte) 100);
        java.lang.String str13 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".");
        java.util.List<org.example.Customer> customerList14 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList15 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList16 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found.\".", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found. not found.\".\". not found.");
        int int20 = rentalSystem0.getAvailableVehicleCount();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertNotNull(vehicleList7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found." + "'", str11, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\"." + "'", str13, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\".");
        org.junit.Assert.assertNotNull(customerList14);
        org.junit.Assert.assertNotNull(customerList15);
        org.junit.Assert.assertNotNull(customerList16);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
    }

    @Test
    public void test2992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2992");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID  not found.\".", "hi!");
        int int10 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.", "ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\".", 100.0d);
        java.util.List<org.example.Customer> customerList16 = rentalSystem0.getCustomers();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(customerList16);
    }

    @Test
    public void test2993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2993");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList7 = rentalSystem0.getVehicles();
        java.lang.String str11 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID hi! not found.\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.", (int) (byte) 100);
        int int12 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Vehicle> vehicleList13 = rentalSystem0.getVehicles();
        java.lang.String str15 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\".");
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID  not found.\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\".", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.", (double) (byte) 1);
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\". not found.\".\". not found. not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.\". not found. not found. not found. not found. not found.\". not found.");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertNotNull(vehicleList7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found." + "'", str11, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(vehicleList13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found." + "'", str15, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.");
    }

    @Test
    public void test2994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2994");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.searchVehicle("Vehicle with ID  not found.");
        rentalSystem0.addVehicle("hi!", "Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID hi! not found.", (double) 0);
        rentalSystem0.addCustomer("ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\".");
        java.util.List<org.example.Vehicle> vehicleList17 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList18 = rentalSystem0.getCustomers();
        // The following exception was thrown during execution in test generation
        try {
            rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\". not found. not found. not found.\". not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\".", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\". not found.\".\".", (double) (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Daily rate cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "No vehicles match the keyword \"Vehicle with ID  not found.\"." + "'", str8, "No vehicles match the keyword \"Vehicle with ID  not found.\".");
        org.junit.Assert.assertNotNull(vehicleList17);
        org.junit.Assert.assertNotNull(customerList18);
    }

    @Test
    public void test2995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2995");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.lang.String str4 = rentalSystem0.searchVehicle("hi!");
        java.util.List<org.example.Customer> customerList5 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\". not found. not found. not found.\".", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\". not found. not found. not found. not found. not found.", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found. not found.\".\".\". not found.\".", (double) 10.0f);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "No vehicles match the keyword \"hi!\"." + "'", str4, "No vehicles match the keyword \"hi!\".");
        org.junit.Assert.assertNotNull(customerList5);
        org.junit.Assert.assertNotNull(vehicleList6);
    }

    @Test
    public void test2996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2996");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID  not found.", 100);
        java.lang.String str12 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID  not found.\".", "Vehicle with ID Vehicle with ID hi! not found. not found.", (int) (short) -1);
        java.lang.String str14 = rentalSystem0.searchVehicle("hi!");
        java.util.List<org.example.Vehicle> vehicleList15 = rentalSystem0.getVehicles();
        java.lang.String str17 = rentalSystem0.searchVehicle("");
        java.lang.String str21 = rentalSystem0.rentVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\".", 2);
        java.util.List<org.example.Vehicle> vehicleList22 = rentalSystem0.getVehicles();
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\". not found. not found. not found. not found.\". not found. not found.", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found. not found. not found.", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found.\".\".\". not found. not found. not found.", 0.0d);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found." + "'", str12, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "No vehicles match the keyword \"hi!\"." + "'", str14, "No vehicles match the keyword \"hi!\".");
        org.junit.Assert.assertNotNull(vehicleList15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "No vehicles match the keyword \"\"." + "'", str17, "No vehicles match the keyword \"\".");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found. not found." + "'", str21, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList22);
    }

    @Test
    public void test2997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2997");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList7 = rentalSystem0.getVehicles();
        java.lang.String str11 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID hi! not found.\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.", (int) (byte) 100);
        int int12 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Vehicle> vehicleList13 = rentalSystem0.getVehicles();
        java.lang.String str15 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\".");
        int int16 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str18 = rentalSystem0.searchVehicle("");
        java.util.List<org.example.Customer> customerList19 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\".\". not found.\".", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found. not found.\". not found. not found. not found.");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertNotNull(vehicleList7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found." + "'", str11, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(vehicleList13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found." + "'", str15, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "No vehicles match the keyword \"\"." + "'", str18, "No vehicles match the keyword \"\".");
        org.junit.Assert.assertNotNull(customerList19);
    }

    @Test
    public void test2998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2998");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.");
        java.lang.String str10 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"hi!\". not found.");
        rentalSystem0.addCustomer("Vehicle with ID  not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found.\".\".");
        rentalSystem0.addVehicle("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\".\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\". not found. not found.", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found. not found. not found. not found.", (double) (short) 100);
        java.lang.String str22 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found. not found. not found. not found.\".", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\".\".\". not found.", 0);
        java.util.List<org.example.Customer> customerList23 = rentalSystem0.getCustomers();
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.\". not found.\".\". not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found. not found.\". not found.", "No vehicles match the keyword \"No vehicles match the keyword \"\".\".", (double) 0L);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\"." + "'", str8, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\".");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\"." + "'", str10, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\".");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found. not found. not found. not found.\". not found." + "'", str22, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found. not found. not found. not found.\". not found.");
        org.junit.Assert.assertNotNull(customerList23);
    }

    @Test
    public void test2999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2999");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID  not found.", 100);
        java.lang.String str10 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.");
        int int11 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\". not found. not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\".\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.\". not found. not found.\".", (double) 1.0f);
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\". not found. not found. not found.\".");
        // The following exception was thrown during execution in test generation
        try {
            rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID Vehicle is already available. not found. not found.", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\". not found. not found. not found. not found.\". not found.\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID  not found.\".\".\". not found.\". not found.", (double) (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Daily rate cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found." + "'", str10, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
    }

    @Test
    public void test3000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test3000");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList7 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found.", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".");
        java.util.List<org.example.Vehicle> vehicleList11 = rentalSystem0.getVehicles();
        int int12 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str14 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID  not found.\".\".\". not found.\". not found.");
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found. not found. not found.\". not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found. not found. not found.\". not found. not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found. not found.\".\". not found. not found.", (double) (short) 0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertNotNull(vehicleList7);
        org.junit.Assert.assertNotNull(vehicleList11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID  not found.\".\".\". not found.\". not found. not found." + "'", str14, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID  not found.\".\".\". not found.\". not found. not found.");
    }
}

