import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest7 {

    public static boolean debug = false;

    public void assertBooleanArrayEquals(boolean[] expectedArray, boolean[] actualArray) {
        if (expectedArray.length != actualArray.length) {
            throw new AssertionError("Array lengths differ: " + expectedArray.length + " != " + actualArray.length);
        }
        for (int i = 0; i < expectedArray.length; i++) {
            if (expectedArray[i] != actualArray[i]) {
                throw new AssertionError("Arrays differ at index " + i + ": " + expectedArray[i] + " != " + actualArray[i]);
            }
        }
    }

    @Test
    public void test3501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3501");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.returnVehicle("Vehicle with ID  not found.");
        java.lang.String str12 = rentalSystem0.rentVehicle("Vehicle with ID hi! not found.", "Vehicle with ID Vehicle with ID  not found. not found.", (int) (byte) 10);
        java.lang.String str14 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        java.util.List<org.example.Vehicle> vehicleList15 = rentalSystem0.getVehicles();
        java.lang.String str19 = rentalSystem0.rentVehicle("", "Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.", (int) (byte) 100);
        java.lang.String str21 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\". not found.");
        int int22 = rentalSystem0.getAvailableVehicleCount();
        int int23 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList24 = rentalSystem0.getCustomers();
        java.lang.String str28 = rentalSystem0.rentVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\". not found. not found.\".\". not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\". not found. not found. not found. not found. not found.\".", 0);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID  not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID  not found. not found.");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID Vehicle with ID hi! not found. not found." + "'", str12, "Vehicle with ID Vehicle with ID hi! not found. not found.");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found." + "'", str14, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList15);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Vehicle with ID  not found." + "'", str19, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\". not found. not found." + "'", str21, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\". not found. not found.");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(customerList24);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\". not found. not found.\".\". not found. not found." + "'", str28, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\". not found. not found.\".\". not found. not found.");
    }

    @Test
    public void test3502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3502");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.lang.String str7 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".");
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID  not found.");
        int int11 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found.", "Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.");
        java.lang.String str18 = rentalSystem0.rentVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found. not found.\". not found.", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\".\".", (int) (short) 0);
        java.util.List<org.example.Customer> customerList19 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\". not found.\".", "Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found.");
        java.util.List<org.example.Customer> customerList23 = rentalSystem0.getCustomers();
        int int24 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found. not found.\".", "Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.");
        java.lang.String str31 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".\". not found. not found.", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found.\".\". not found.", (int) (byte) -1);
        java.util.List<org.example.Customer> customerList32 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList33 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList34 = rentalSystem0.getVehicles();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\"." + "'", str7, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found. not found.\". not found. not found." + "'", str18, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found. not found.\". not found. not found.");
        org.junit.Assert.assertNotNull(customerList19);
        org.junit.Assert.assertNotNull(customerList23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".\". not found. not found. not found." + "'", str31, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".\". not found. not found. not found.");
        org.junit.Assert.assertNotNull(customerList32);
        org.junit.Assert.assertNotNull(customerList33);
        org.junit.Assert.assertNotNull(vehicleList34);
    }

    @Test
    public void test3503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3503");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID  not found.", 100);
        java.lang.String str10 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.");
        int int11 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addVehicle("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".\".\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\".", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found. not found.", (double) 0L);
        java.lang.String str18 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.\". not found.\".");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found." + "'", str10, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.\". not found.\".\"." + "'", str18, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.\". not found.\".\".");
    }

    @Test
    public void test3504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3504");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.returnVehicle("Vehicle with ID  not found.");
        java.lang.String str12 = rentalSystem0.rentVehicle("Vehicle with ID hi! not found.", "Vehicle with ID Vehicle with ID  not found. not found.", (int) (byte) 10);
        java.lang.String str14 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        java.lang.String str16 = rentalSystem0.searchVehicle("Vehicle with ID  not found.");
        java.lang.String str18 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found. not found. not found.");
        java.lang.Class<?> wildcardClass19 = rentalSystem0.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID  not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID  not found. not found.");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID Vehicle with ID hi! not found. not found." + "'", str12, "Vehicle with ID Vehicle with ID hi! not found. not found.");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found." + "'", str14, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "No vehicles match the keyword \"Vehicle with ID  not found.\"." + "'", str16, "No vehicles match the keyword \"Vehicle with ID  not found.\".");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found. not found. not found.\"." + "'", str18, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found. not found. not found.\".");
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test3505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3505");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID  not found. not found.", "No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        java.lang.String str8 = rentalSystem0.rentVehicle("hi!", "No vehicles match the keyword \"Vehicle with ID  not found.\".", 100);
        java.lang.String str10 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID hi! not found. not found.");
        java.lang.String str12 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.");
        java.lang.String str14 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\".\".", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found. not found.");
        java.lang.String str19 = rentalSystem0.returnVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found. not found.\".\".");
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found. not found.", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.\".\". not found.");
        java.lang.String str26 = rentalSystem0.rentVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.\".\".", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\". not found.\".", (-1));
        java.util.List<org.example.Customer> customerList27 = rentalSystem0.getCustomers();
        rentalSystem0.addVehicle("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\". not found.\".\".\".\".", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\".\".\".", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found. not found. not found.", (double) 0L);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID hi! not found." + "'", str8, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found." + "'", str10, "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found." + "'", str12, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.\"." + "'", str14, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.\".");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found. not found.\".\". not found." + "'", str19, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found. not found.\".\". not found.");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.\".\". not found." + "'", str26, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.\".\". not found.");
        org.junit.Assert.assertNotNull(customerList27);
    }

    @Test
    public void test3506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3506");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID  not found.\".", "hi!");
        int int10 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList11 = rentalSystem0.getCustomers();
        java.lang.String str13 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.");
        int int14 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str16 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.");
        java.util.List<org.example.Vehicle> vehicleList17 = rentalSystem0.getVehicles();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(customerList11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\"." + "'", str13, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found. not found." + "'", str16, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList17);
    }

    @Test
    public void test3507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3507");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList5 = rentalSystem0.getVehicles();
        java.lang.String str9 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".", "No vehicles match the keyword \"Vehicle with ID  not found.\".", (int) ' ');
        java.lang.String str11 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\".", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\".\".");
        java.lang.String str18 = rentalSystem0.rentVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\".\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\". not found.", 0);
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found.\". not found. not found. not found.", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.\". not found. not found. not found. not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertNotNull(vehicleList5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found." + "'", str9, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found." + "'", str11, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\".\". not found." + "'", str18, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\".\". not found.");
    }

    @Test
    public void test3508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3508");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        rentalSystem0.addCustomer("hi!", "Vehicle with ID Vehicle with ID  not found. not found.");
        int int9 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str13 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found.", 100);
        java.lang.String str15 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\". not found. not found.");
        java.lang.Class<?> wildcardClass16 = rentalSystem0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found." + "'", str13, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\". not found. not found. not found." + "'", str15, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\". not found. not found. not found.");
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test3509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3509");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList4 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID  not found. not found.", "hi!");
        java.lang.String str11 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID hi! not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".", (int) '4');
        java.lang.String str13 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.");
        java.util.List<org.example.Customer> customerList14 = rentalSystem0.getCustomers();
        java.lang.String str16 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".\". not found. not found. not found. not found. not found.");
        java.util.List<org.example.Vehicle> vehicleList17 = rentalSystem0.getVehicles();
        java.lang.String str19 = rentalSystem0.returnVehicle("");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(vehicleList4);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found." + "'", str11, "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found. not found." + "'", str13, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found. not found.");
        org.junit.Assert.assertNotNull(customerList14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".\". not found. not found. not found. not found. not found.\"." + "'", str16, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".\". not found. not found. not found. not found. not found.\".");
        org.junit.Assert.assertNotNull(vehicleList17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Vehicle with ID  not found." + "'", str19, "Vehicle with ID  not found.");
    }

    @Test
    public void test3510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3510");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.rentVehicle("", "No vehicles match the keyword \"Vehicle with ID hi! not found.\".", (int) (byte) 100);
        java.lang.String str10 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.");
        java.lang.String str14 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.", 0);
        int int15 = rentalSystem0.getAvailableVehicleCount();
        int int16 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str18 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\". not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID  not found." + "'", str8, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found." + "'", str10, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found. not found." + "'", str14, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found. not found.");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\". not found.\". not found. not found." + "'", str18, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\". not found.\". not found. not found.");
    }

    @Test
    public void test3511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3511");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        int int7 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList8 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.\".", "No vehicles match the keyword \"Vehicle with ID  not found.\".");
        java.lang.String str13 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\".");
        rentalSystem0.addCustomer("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\".\". not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\".\". not found.\". not found.");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(customerList8);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\".\"." + "'", str13, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\".\".");
    }

    @Test
    public void test3512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3512");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.searchVehicle("Vehicle with ID  not found.");
        int int9 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\". not found.\".", "No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        java.lang.String str14 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\". not found.");
        java.util.List<org.example.Customer> customerList15 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList16 = rentalSystem0.getCustomers();
        int int17 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str19 = rentalSystem0.returnVehicle("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\".\".\".\".");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "No vehicles match the keyword \"Vehicle with ID  not found.\"." + "'", str8, "No vehicles match the keyword \"Vehicle with ID  not found.\".");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\". not found.\"." + "'", str14, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\". not found.\".");
        org.junit.Assert.assertNotNull(customerList15);
        org.junit.Assert.assertNotNull(customerList16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\".\".\".\". not found." + "'", str19, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\".\".\".\". not found.");
    }

    @Test
    public void test3513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3513");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList7 = rentalSystem0.getVehicles();
        java.lang.String str11 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID hi! not found.\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.", (int) (byte) 100);
        java.lang.String str13 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".");
        int int14 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList15 = rentalSystem0.getCustomers();
        java.lang.String str19 = rentalSystem0.rentVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.\". not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID  not found.\".\".", (int) (short) 100);
        java.util.List<org.example.Vehicle> vehicleList20 = rentalSystem0.getVehicles();
        java.lang.String str22 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found.\". not found.");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertNotNull(vehicleList7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found." + "'", str11, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\"." + "'", str13, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\".");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(customerList15);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.\". not found. not found." + "'", str19, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.\". not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found.\". not found.\"." + "'", str22, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found.\". not found.\".");
    }

    @Test
    public void test3514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3514");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.lang.String str5 = rentalSystem0.returnVehicle("Vehicle with ID  not found.");
        java.lang.String str7 = rentalSystem0.searchVehicle("Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.");
        java.lang.String str9 = rentalSystem0.searchVehicle("hi!");
        java.lang.String str13 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found. not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\". not found. not found.", (int) '#');
        int int14 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList15 = rentalSystem0.getCustomers();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID Vehicle with ID  not found. not found." + "'", str5, "Vehicle with ID Vehicle with ID  not found. not found.");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\"." + "'", str7, "No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "No vehicles match the keyword \"hi!\"." + "'", str9, "No vehicles match the keyword \"hi!\".");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found. not found. not found." + "'", str13, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found. not found. not found.");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(customerList15);
    }

    @Test
    public void test3515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3515");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID  not found.", 100);
        java.lang.String str12 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID  not found.\".", "Vehicle with ID Vehicle with ID hi! not found. not found.", (int) (short) -1);
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\". not found.", "No vehicles match the keyword \"Vehicle with ID  not found.\".", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.\".", (double) (short) 1);
        int int18 = rentalSystem0.getAvailableVehicleCount();
        int int19 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\". not found.\". not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\". not found.\". not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\". not found.\".\".", (double) ' ');
        java.lang.String str26 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.\". not found. not found.\". not found. not found. not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found." + "'", str12, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.\". not found. not found.\". not found. not found. not found. not found.\"." + "'", str26, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.\". not found. not found.\". not found. not found. not found. not found.\".");
    }

    @Test
    public void test3516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3516");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.searchVehicle("No vehicles match the keyword \"hi!\".");
        java.lang.String str10 = rentalSystem0.returnVehicle("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".\".");
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\". not found. not found. not found.\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\".\".\". not found. not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\". not found.\". not found.", (double) 1);
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\".\".\".\".", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\".\".\".\".");
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\".\". not found. not found.", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found. not found. not found. not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\".\".\". not found. not found. not found.\".", (double) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            rentalSystem0.addVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID  not found.\".\". not found. not found.\".\".", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n\".\".\".\".\". not found.\".", "", (-1.0d));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Type cannot be null or empty");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\"." + "'", str8, "No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".\". not found." + "'", str10, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".\". not found.");
    }

    @Test
    public void test3517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3517");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.lang.String str5 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.");
        int int6 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str8 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\"." + "'", str5, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\".");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found." + "'", str8, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found.");
    }

    @Test
    public void test3518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3518");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.searchVehicle("Vehicle with ID  not found.");
        rentalSystem0.addVehicle("hi!", "Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID hi! not found.", (double) 0);
        java.lang.String str15 = rentalSystem0.returnVehicle("Vehicle with ID  not found.");
        int int16 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.\".", "No vehicles match the keyword \"hi!\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".", 0.0d);
        java.lang.String str23 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.");
        java.lang.String str25 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found.");
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\". not found.\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found.\". not found.\". not found.");
        java.lang.String str30 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found.\".");
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found. not found.\". not found. not found.", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\". not found. not found. not found.");
        java.lang.String str35 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\". not found.\". not found. not found. not found. not found.");
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found.\".\".\".\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\". not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "No vehicles match the keyword \"Vehicle with ID  not found.\"." + "'", str8, "No vehicles match the keyword \"Vehicle with ID  not found.\".");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Vehicle with ID Vehicle with ID  not found. not found." + "'", str15, "Vehicle with ID Vehicle with ID  not found. not found.");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found." + "'", str23, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found.\"." + "'", str25, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found.\".");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found.\". not found." + "'", str30, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\". not found.\". not found. not found. not found. not found.\"." + "'", str35, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\". not found.\". not found. not found. not found. not found.\".");
    }

    @Test
    public void test3519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3519");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("");
        java.util.List<org.example.Vehicle> vehicleList4 = rentalSystem0.getVehicles();
        java.lang.String str6 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID  not found. not found.");
        java.util.List<org.example.Customer> customerList7 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.\".");
        rentalSystem0.addVehicle("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\".\".\".\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.", (double) 1);
        java.util.List<org.example.Vehicle> vehicleList16 = rentalSystem0.getVehicles();
        java.lang.String str18 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\". not found. not found.\". not found.");
        java.lang.String str20 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found. not found. not found.");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID  not found." + "'", str3, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str6, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertNotNull(customerList7);
        org.junit.Assert.assertNotNull(vehicleList16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\". not found. not found.\". not found.\"." + "'", str18, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\". not found. not found.\". not found.\".");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found. not found. not found. not found." + "'", str20, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found. not found. not found. not found.");
    }

    @Test
    public void test3520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3520");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.lang.String str7 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".");
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID  not found.");
        java.util.List<org.example.Vehicle> vehicleList11 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found. not found. not found.\".", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID  not found.\".\".");
        rentalSystem0.addVehicle("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\".\".\".\".", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found. not found.\". not found. not found.\".\".", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\".\". not found.", 100.0d);
        java.util.List<org.example.Customer> customerList20 = rentalSystem0.getCustomers();
        java.lang.String str24 = rentalSystem0.rentVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n\".\". not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found. not found. not found.\". not found.", 3);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\"." + "'", str7, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".");
        org.junit.Assert.assertNotNull(vehicleList11);
        org.junit.Assert.assertNotNull(customerList20);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n\".\". not found. not found." + "'", str24, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n\".\". not found. not found.");
    }

    @Test
    public void test3521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3521");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList7 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList8 = rentalSystem0.getCustomers();
        int int9 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str13 = rentalSystem0.rentVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\".\".\".", (int) '#');
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\".\".\". not found. not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found.\".");
        rentalSystem0.addCustomer("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\". not found.", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\".\".");
        java.lang.String str21 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\". not found.");
        int int22 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\".", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found. not found. not found.");
        java.lang.String str27 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\".\". not found. not found. not found.\".");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertNotNull(vehicleList7);
        org.junit.Assert.assertNotNull(customerList8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found." + "'", str13, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\". not found.\"." + "'", str21, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\". not found.\".");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\".\". not found. not found. not found.\". not found." + "'", str27, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\".\". not found. not found. not found.\". not found.");
    }

    @Test
    public void test3522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3522");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.searchVehicle("Vehicle with ID  not found.");
        rentalSystem0.addVehicle("hi!", "Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID hi! not found.", (double) 0);
        rentalSystem0.addCustomer("ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\".");
        java.util.List<org.example.Vehicle> vehicleList17 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList18 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList19 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n\".\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\". not found. not found.");
        java.lang.String str24 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "No vehicles match the keyword \"Vehicle with ID  not found.\"." + "'", str8, "No vehicles match the keyword \"Vehicle with ID  not found.\".");
        org.junit.Assert.assertNotNull(vehicleList17);
        org.junit.Assert.assertNotNull(customerList18);
        org.junit.Assert.assertNotNull(vehicleList19);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\". not found. not found." + "'", str24, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\". not found. not found.");
    }

    @Test
    public void test3523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3523");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        int int7 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addCustomer("hi!", "Vehicle with ID Vehicle with ID  not found. not found.");
        int int11 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str13 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.");
        java.util.List<org.example.Customer> customerList14 = rentalSystem0.getCustomers();
        // The following exception was thrown during execution in test generation
        try {
            rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\". not found.\". not found.", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\".\".\".\".", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.\".\". not found.", (double) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Daily rate cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\"." + "'", str13, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".");
        org.junit.Assert.assertNotNull(customerList14);
    }

    @Test
    public void test3524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3524");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID  not found. not found.", "No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        java.util.List<org.example.Vehicle> vehicleList5 = rentalSystem0.getVehicles();
        java.lang.String str7 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.");
        int int8 = rentalSystem0.getAvailableVehicleCount();
        int int9 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str11 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\". not found. not found. not found.");
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found. not found. not found. not found.\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found. not found.\". not found. not found. not found.\". not found.", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\".\". not found. not found. not found.", 100.0d);
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\". not found.\". not found. not found.\".", "Vehicle with ID Vehicle with ID ID: No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\".\"., Model: No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.\"., Type: Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found., Daily Rate: $10.0, Status: Available\n not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found." + "'", str7, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\". not found. not found. not found.\"." + "'", str11, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\". not found. not found. not found.\".");
    }

    @Test
    public void test3525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3525");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID  not found. not found.", "No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        java.util.List<org.example.Vehicle> vehicleList5 = rentalSystem0.getVehicles();
        java.lang.String str7 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".");
        java.lang.String str9 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\".\".\". not found.");
        java.lang.String str11 = rentalSystem0.returnVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\".\".");
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\".\". not found. not found. not found. not found.", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.\". not found.\".");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\"." + "'", str7, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\".");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\".\".\". not found. not found." + "'", str9, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\".\".\". not found. not found.");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\".\". not found." + "'", str11, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\".\". not found.");
    }

    @Test
    public void test3526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3526");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.searchVehicle("No vehicles match the keyword \"hi!\".");
        java.lang.String str10 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.");
        java.lang.String str12 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.");
        java.util.List<org.example.Customer> customerList13 = rentalSystem0.getCustomers();
        java.lang.String str17 = rentalSystem0.rentVehicle("", "ID: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Model: No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\"., Type: No vehicles match the keyword \"Vehicle with ID hi! not found.\"., Daily Rate: $100.0, Status: Available\n", 0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\"." + "'", str8, "No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.\"." + "'", str10, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.\".");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\"." + "'", str12, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\".");
        org.junit.Assert.assertNotNull(customerList13);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Vehicle with ID  not found." + "'", str17, "Vehicle with ID  not found.");
    }

    @Test
    public void test3527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3527");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList7 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList8 = rentalSystem0.getCustomers();
        int int9 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str13 = rentalSystem0.rentVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\".\".\".", (int) '#');
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\".\".\". not found. not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found.\".");
        int int17 = rentalSystem0.getAvailableVehicleCount();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertNotNull(vehicleList7);
        org.junit.Assert.assertNotNull(customerList8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found." + "'", str13, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
    }

    @Test
    public void test3528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3528");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        int int7 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList8 = rentalSystem0.getCustomers();
        int int9 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str13 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID  not found.\".", "No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".", (int) 'a');
        java.lang.String str17 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\".", (int) 'a');
        java.util.List<org.example.Customer> customerList18 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList19 = rentalSystem0.getCustomers();
        java.lang.String str21 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.\". not found. not found. not found. not found. not found.\".");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(customerList8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found." + "'", str13, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found. not found." + "'", str17, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found. not found.");
        org.junit.Assert.assertNotNull(customerList18);
        org.junit.Assert.assertNotNull(customerList19);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.\". not found. not found. not found. not found. not found.\". not found." + "'", str21, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.\". not found. not found. not found. not found. not found.\". not found.");
    }

    @Test
    public void test3529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3529");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.");
        rentalSystem0.addCustomer("Vehicle with ID  not found.", "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        rentalSystem0.addCustomer("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found.\". not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\". not found.\". not found.");
        java.lang.String str19 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.\". not found. not found. not found. not found. not found.\". not found. not found.", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found. not found.", (int) (short) 1);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.\". not found. not found. not found. not found. not found.\". not found. not found. not found." + "'", str19, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.\". not found. not found. not found. not found. not found.\". not found. not found. not found.");
    }

    @Test
    public void test3530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3530");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList7 = rentalSystem0.getVehicles();
        java.lang.String str11 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID hi! not found.\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.", (int) (byte) 100);
        java.lang.String str13 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".");
        java.lang.String str17 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".", (int) (byte) -1);
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".");
        java.lang.String str22 = rentalSystem0.searchVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found.\".\".");
        java.lang.String str24 = rentalSystem0.returnVehicle("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\".\".");
        java.util.List<org.example.Vehicle> vehicleList25 = rentalSystem0.getVehicles();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertNotNull(vehicleList7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found." + "'", str11, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\"." + "'", str13, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\".");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found." + "'", str17, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found.\".\".\"." + "'", str22, "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found.\".\".\".");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\".\". not found." + "'", str24, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\".\". not found.");
        org.junit.Assert.assertNotNull(vehicleList25);
    }

    @Test
    public void test3531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3531");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("hi!");
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        int int5 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        int int7 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str9 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\". not found. not found. not found.");
        java.lang.String str13 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found.\".", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found.\".\".", (int) (byte) 1);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID hi! not found." + "'", str3, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\". not found. not found. not found. not found." + "'", str9, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\". not found. not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found.\". not found." + "'", str13, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found.\". not found.");
    }

    @Test
    public void test3532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3532");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("hi!");
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        int int5 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str9 = rentalSystem0.rentVehicle("No vehicles match the keyword \"\".", "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.", (int) (short) 10);
        java.lang.String str13 = rentalSystem0.rentVehicle("No vehicles match the keyword \"\".", "", (-1));
        int int14 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str16 = rentalSystem0.returnVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\".");
        java.util.List<org.example.Vehicle> vehicleList17 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList18 = rentalSystem0.getCustomers();
        java.lang.String str20 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".");
        int int21 = rentalSystem0.getAvailableVehicleCount();
        int int22 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Vehicle> vehicleList23 = rentalSystem0.getVehicles();
        int int24 = rentalSystem0.getAvailableVehicleCount();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID hi! not found." + "'", str3, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Vehicle with ID No vehicles match the keyword \"\". not found." + "'", str9, "Vehicle with ID No vehicles match the keyword \"\". not found.");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID No vehicles match the keyword \"\". not found." + "'", str13, "Vehicle with ID No vehicles match the keyword \"\". not found.");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found." + "'", str16, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found.");
        org.junit.Assert.assertNotNull(vehicleList17);
        org.junit.Assert.assertNotNull(customerList18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\"." + "'", str20, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(vehicleList23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
    }

    @Test
    public void test3533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3533");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.returnVehicle("");
        int int9 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str13 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found.", (int) (short) 0);
        java.util.List<org.example.Vehicle> vehicleList14 = rentalSystem0.getVehicles();
        java.lang.String str16 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\". not found.");
        rentalSystem0.addVehicle("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\".\".\".\".\".", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\".", "Vehicle with ID ID: Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found., Model: Vehicle with ID Vehicle with ID hi! not found. not found., Type: No vehicles match the keyword \"hi!\"., Daily Rate: $1.0, Status: Available\nID: Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.\". not found., Model: No vehicles match the keyword \"\"., Type: No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found.\"., Daily Rate: $100.0, Status: Available\n not found.", (double) 10.0f);
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\". not found.\". not found.\".\". not found.\".", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\".\".\".\". not found.", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found. not found. not found. not found. not found. not found.", 1.0d);
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.\".", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\". not found.\".\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found.\". not found.\". not found.", 1.0d);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID  not found." + "'", str8, "Vehicle with ID  not found.");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str13, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\". not found.\"." + "'", str16, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\". not found.\".");
    }

    @Test
    public void test3534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3534");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        int int7 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addCustomer("hi!", "Vehicle with ID Vehicle with ID  not found. not found.");
        java.lang.String str12 = rentalSystem0.searchVehicle("No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".");
        java.lang.String str14 = rentalSystem0.searchVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".\".");
        java.util.List<org.example.Vehicle> vehicleList15 = rentalSystem0.getVehicles();
        int int16 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Vehicle> vehicleList17 = rentalSystem0.getVehicles();
        java.lang.String str19 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.\".");
        java.lang.String str21 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\". not found. not found. not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\"." + "'", str12, "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\".");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".\".\"." + "'", str14, "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".\".\".");
        org.junit.Assert.assertNotNull(vehicleList15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(vehicleList17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.\". not found." + "'", str19, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\". not found. not found. not found. not found. not found." + "'", str21, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\". not found. not found. not found. not found. not found.");
    }

    @Test
    public void test3535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3535");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID  not found. not found.", "No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        java.util.List<org.example.Customer> customerList5 = rentalSystem0.getCustomers();
        java.lang.String str7 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.");
        java.lang.String str9 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found.\".");
        java.lang.String str11 = rentalSystem0.returnVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".\".");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(customerList5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found. not found." + "'", str7, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found.\".\"." + "'", str9, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found.\".\".");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".\". not found." + "'", str11, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".\". not found.");
    }

    @Test
    public void test3536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3536");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.lang.String str7 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".");
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID  not found.");
        int int11 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found.", "Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.");
        java.lang.String str18 = rentalSystem0.rentVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found. not found.\". not found.", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\".\".", (int) (short) 0);
        java.util.List<org.example.Customer> customerList19 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\". not found.\".", "Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found.");
        java.lang.String str26 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\".\". not found. not found. not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\".\".\". not found. not found.", (int) (short) 0);
        rentalSystem0.addVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\".", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.\".\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\". not found. not found.\". not found.", 10.0d);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\"." + "'", str7, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found. not found.\". not found. not found." + "'", str18, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found. not found.\". not found. not found.");
        org.junit.Assert.assertNotNull(customerList19);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\".\". not found. not found. not found. not found." + "'", str26, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\".\". not found. not found. not found. not found.");
    }

    @Test
    public void test3537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3537");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID  not found.\".", "hi!");
        int int10 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str12 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID  not found. not found.");
        java.lang.String str16 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.", (int) 'a');
        java.lang.String str18 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found.");
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\". not found. not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found. not found. not found.\".", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found. not found. not found.", (double) 10);
        int int24 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str26 = rentalSystem0.searchVehicle("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\".\".");
        java.util.List<org.example.Vehicle> vehicleList27 = rentalSystem0.getVehicles();
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID  not found.\".\".\". not found.", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\". not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found. not found. not found.\". not found.\".\".", (double) (byte) 0);
        int int33 = rentalSystem0.getAvailableVehicleCount();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str12, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found." + "'", str16, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found." + "'", str18, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found.");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\".\".\"." + "'", str26, "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\".\".\".");
        org.junit.Assert.assertNotNull(vehicleList27);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 2 + "'", int33 == 2);
    }

    @Test
    public void test3538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3538");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.lang.String str9 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.", (int) (byte) 1);
        java.lang.String str11 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\". not found.");
        java.util.List<org.example.Customer> customerList12 = rentalSystem0.getCustomers();
        java.lang.String str16 = rentalSystem0.rentVehicle("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\".\".\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found. not found.\". not found. not found.", (int) '4');
        java.util.List<org.example.Customer> customerList17 = rentalSystem0.getCustomers();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found." + "'", str9, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\". not found.\"." + "'", str11, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\". not found.\".");
        org.junit.Assert.assertNotNull(customerList12);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\".\".\". not found." + "'", str16, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\".\".\". not found.");
        org.junit.Assert.assertNotNull(customerList17);
    }

    @Test
    public void test3539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3539");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        int int2 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        int int4 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".", "No vehicles match the keyword \"Vehicle with ID  not found.\".");
        int int8 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str10 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\".");
        java.util.List<org.example.Vehicle> vehicleList11 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList12 = rentalSystem0.getVehicles();
        java.lang.String str16 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\". not found. not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\".\".", 10);
        java.lang.String str18 = rentalSystem0.returnVehicle("");
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".", 1.0d);
        int int24 = rentalSystem0.getAvailableVehicleCount();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found." + "'", str10, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList11);
        org.junit.Assert.assertNotNull(vehicleList12);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\". not found. not found. not found." + "'", str16, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\". not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Vehicle with ID  not found." + "'", str18, "Vehicle with ID  not found.");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
    }

    @Test
    public void test3540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3540");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList7 = rentalSystem0.getVehicles();
        java.lang.String str11 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID hi! not found.\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.", (int) (byte) 100);
        java.lang.String str13 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".");
        int int14 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList15 = rentalSystem0.getCustomers();
        java.lang.String str19 = rentalSystem0.rentVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.\". not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID  not found.\".\".", (int) (short) 100);
        java.util.List<org.example.Vehicle> vehicleList20 = rentalSystem0.getVehicles();
        java.lang.String str22 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\". not found.");
        java.util.List<org.example.Vehicle> vehicleList23 = rentalSystem0.getVehicles();
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found. not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\". not found.\".\".", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\". not found.\".", 0.0d);
        java.util.List<org.example.Customer> customerList29 = rentalSystem0.getCustomers();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertNotNull(vehicleList7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found." + "'", str11, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\"." + "'", str13, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\".");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(customerList15);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.\". not found. not found." + "'", str19, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.\". not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\". not found. not found." + "'", str22, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\". not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList23);
        org.junit.Assert.assertNotNull(customerList29);
    }

    @Test
    public void test3541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3541");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        int int2 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Vehicle> vehicleList3 = rentalSystem0.getVehicles();
        java.lang.String str7 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\".\". not found.", (int) (short) 1);
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\".\". not found. not found.", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"\".\".\". not found.\".");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(vehicleList3);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found. not found." + "'", str7, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found. not found.");
    }

    @Test
    public void test3542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3542");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList7 = rentalSystem0.getVehicles();
        java.lang.String str11 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.", "Vehicle with ID hi! not found.", (int) '#');
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found. not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\".", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found. not found.", 0.0d);
        java.util.List<org.example.Vehicle> vehicleList17 = rentalSystem0.getVehicles();
        java.lang.Class<?> wildcardClass18 = vehicleList17.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertNotNull(vehicleList7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found." + "'", str11, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList17);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test3543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3543");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.searchVehicle("Vehicle with ID  not found.");
        rentalSystem0.addVehicle("hi!", "Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID hi! not found.", (double) 0);
        rentalSystem0.addCustomer("Vehicle with ID hi! not found.", "hi!");
        java.util.List<org.example.Vehicle> vehicleList17 = rentalSystem0.getVehicles();
        java.lang.String str19 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found. not found. not found.");
        java.lang.String str21 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found. not found.");
        java.lang.String str23 = rentalSystem0.returnVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found. not found. not found. not found.\".\".");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "No vehicles match the keyword \"Vehicle with ID  not found.\"." + "'", str8, "No vehicles match the keyword \"Vehicle with ID  not found.\".");
        org.junit.Assert.assertNotNull(vehicleList17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found. not found. not found.\"." + "'", str19, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found. not found. not found.\".");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found. not found. not found." + "'", str21, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found. not found. not found. not found.\".\". not found." + "'", str23, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found. not found. not found. not found.\".\". not found.");
    }

    @Test
    public void test3544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3544");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.returnVehicle("Vehicle with ID  not found.");
        java.lang.String str12 = rentalSystem0.rentVehicle("Vehicle with ID hi! not found.", "Vehicle with ID Vehicle with ID  not found. not found.", (int) (byte) 10);
        java.lang.String str14 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        java.util.List<org.example.Vehicle> vehicleList15 = rentalSystem0.getVehicles();
        java.lang.String str19 = rentalSystem0.rentVehicle("", "Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.", (int) (byte) 100);
        java.lang.String str21 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.");
        java.util.List<org.example.Vehicle> vehicleList22 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList23 = rentalSystem0.getVehicles();
        java.lang.String str27 = rentalSystem0.rentVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\". not found. not found.\". not found.", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found. not found.\". not found. not found.\". not found.\".", 0);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID  not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID  not found. not found.");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID Vehicle with ID hi! not found. not found." + "'", str12, "Vehicle with ID Vehicle with ID hi! not found. not found.");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found." + "'", str14, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList15);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Vehicle with ID  not found." + "'", str19, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.\"." + "'", str21, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.\".");
        org.junit.Assert.assertNotNull(vehicleList22);
        org.junit.Assert.assertNotNull(vehicleList23);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\". not found. not found.\". not found. not found." + "'", str27, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\". not found. not found.\". not found. not found.");
    }

    @Test
    public void test3545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3545");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID  not found. not found.", "No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        java.util.List<org.example.Customer> customerList5 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.searchVehicle("");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(customerList5);
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "No vehicles match the keyword \"\"." + "'", str8, "No vehicles match the keyword \"\".");
    }

    @Test
    public void test3546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3546");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found.\". not found.\".");
        java.lang.String str12 = rentalSystem0.rentVehicle("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\".\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".", 100);
        java.util.List<org.example.Customer> customerList13 = rentalSystem0.getCustomers();
        java.lang.String str15 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID  not found.\".\".\". not found.");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found.\". not found.\". not found." + "'", str8, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found.\". not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\".\". not found." + "'", str12, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\".\". not found.");
        org.junit.Assert.assertNotNull(customerList13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID  not found.\".\".\". not found. not found." + "'", str15, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID  not found.\".\".\". not found. not found.");
    }

    @Test
    public void test3547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3547");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID  not found.\".", "hi!");
        int int10 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList11 = rentalSystem0.getCustomers();
        java.lang.String str15 = rentalSystem0.rentVehicle("ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.", 100);
        int int16 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Vehicle> vehicleList17 = rentalSystem0.getVehicles();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(customerList11);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found." + "'", str15, "Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(vehicleList17);
    }

    @Test
    public void test3548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3548");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.returnVehicle("Vehicle with ID  not found.");
        java.lang.String str10 = rentalSystem0.returnVehicle("hi!");
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\".", (double) 2);
        java.util.List<org.example.Vehicle> vehicleList16 = rentalSystem0.getVehicles();
        java.lang.Class<?> wildcardClass17 = vehicleList16.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID  not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID  not found. not found.");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID hi! not found." + "'", str10, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertNotNull(vehicleList16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test3549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3549");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.lang.String str5 = rentalSystem0.returnVehicle("Vehicle with ID  not found.");
        java.lang.String str7 = rentalSystem0.searchVehicle("Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.");
        java.lang.String str9 = rentalSystem0.searchVehicle("hi!");
        rentalSystem0.addCustomer("hi!", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\". not found.");
        java.lang.String str16 = rentalSystem0.rentVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\".", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\".\".", (int) (short) 10);
        java.lang.String str18 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found.");
        java.lang.String str22 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\".", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".\".\". not found.", (int) '4');
        java.util.List<org.example.Customer> customerList23 = rentalSystem0.getCustomers();
        int int24 = rentalSystem0.getAvailableVehicleCount();
        int int25 = rentalSystem0.getAvailableVehicleCount();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID Vehicle with ID  not found. not found." + "'", str5, "Vehicle with ID Vehicle with ID  not found. not found.");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\"." + "'", str7, "No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "No vehicles match the keyword \"hi!\"." + "'", str9, "No vehicles match the keyword \"hi!\".");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\". not found." + "'", str16, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\". not found.");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found." + "'", str18, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found." + "'", str22, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found.");
        org.junit.Assert.assertNotNull(customerList23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
    }

    @Test
    public void test3550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3550");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\".\". not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\".\".", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\". not found.\".", (double) (short) 100);
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found. not found. not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\". not found. not found. not found.\".\".");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
    }

    @Test
    public void test3551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3551");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList5 = rentalSystem0.getVehicles();
        java.lang.String str9 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".", "No vehicles match the keyword \"Vehicle with ID  not found.\".", (int) ' ');
        java.lang.String str13 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID  not found. not found.", "", (int) (byte) -1);
        int int14 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.", "Vehicle with ID hi! not found.");
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\".", (double) 1.0f);
        rentalSystem0.addVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\". not found.\".", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found.", 0.0d);
        java.lang.String str29 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found.\".");
        java.util.List<org.example.Vehicle> vehicleList30 = rentalSystem0.getVehicles();
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found.\".", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found. not found. not found.\". not found.", 1.0d);
        java.lang.String str39 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found. not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found. not found. not found.\".", 100);
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found.\". not found. not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\". not found.\".\".");
        java.lang.Class<?> wildcardClass43 = rentalSystem0.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertNotNull(vehicleList5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found." + "'", str9, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str13, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found.\".\"." + "'", str29, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found.\".\".");
        org.junit.Assert.assertNotNull(vehicleList30);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found. not found. not found. not found." + "'", str39, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found. not found. not found. not found.");
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test3552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3552");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        int int7 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str9 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".");
        java.lang.String str11 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\". not found.");
        java.util.List<org.example.Customer> customerList12 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found. not found. not found. not found.\". not found. not found. not found.", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n\".\".\".");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\". not found." + "'", str9, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\". not found.\"." + "'", str11, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\". not found.\".");
        org.junit.Assert.assertNotNull(customerList12);
    }

    @Test
    public void test3553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3553");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.returnVehicle("Vehicle with ID  not found.");
        java.lang.String str10 = rentalSystem0.returnVehicle("hi!");
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID  not found.\".", "No vehicles match the keyword \"Vehicle with ID  not found.\".", "Vehicle with ID  not found.", (double) 10);
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found.\".\". not found. not found.", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found. not found.", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\".\".\".\".\".", 100.0d);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID  not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID  not found. not found.");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID hi! not found." + "'", str10, "Vehicle with ID hi! not found.");
    }

    @Test
    public void test3554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3554");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        int int7 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList8 = rentalSystem0.getCustomers();
        int int9 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\". not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found. not found.\".", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\".\".", (double) (short) 100);
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n\".\".\". not found. not found. not found. not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\". not found.\". not found. not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found. not found.\". not found. not found. not found.\". not found.", (double) 1.0f);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(customerList8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
    }

    @Test
    public void test3555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3555");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList4 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID  not found. not found.", "hi!");
        java.lang.String str11 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID hi! not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".", (int) '4');
        java.lang.String str13 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".");
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found. not found. not found.", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\".\".\".");
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found. not found.\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.\". not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\".\".", (double) 0);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(vehicleList4);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found." + "'", str11, "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\"." + "'", str13, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\".");
    }

    @Test
    public void test3556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3556");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID  not found.\".", "hi!");
        rentalSystem0.addCustomer("No vehicles match the keyword \"hi!\".", "hi!");
        java.lang.String str14 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        int int15 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList16 = rentalSystem0.getCustomers();
        java.lang.String str18 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found.\".\". not found. not found.");
        java.util.List<org.example.Customer> customerList19 = rentalSystem0.getCustomers();
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found. not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found. not found.\".", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found. not found.\".\".\". not found. not found. not found.", (double) (byte) 10);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found." + "'", str14, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(customerList16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found.\".\". not found. not found.\"." + "'", str18, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found.\".\". not found. not found.\".");
        org.junit.Assert.assertNotNull(customerList19);
    }

    @Test
    public void test3557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3557");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("hi!");
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        int int5 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str9 = rentalSystem0.rentVehicle("No vehicles match the keyword \"\".", "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.", (int) (short) 10);
        java.lang.String str13 = rentalSystem0.rentVehicle("No vehicles match the keyword \"\".", "", (-1));
        int int14 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str16 = rentalSystem0.returnVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\".");
        java.util.List<org.example.Vehicle> vehicleList17 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList18 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList19 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList20 = rentalSystem0.getVehicles();
        java.lang.String str22 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.");
        java.lang.String str24 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".\". not found. not found. not found. not found.");
        java.util.List<org.example.Customer> customerList25 = rentalSystem0.getCustomers();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID hi! not found." + "'", str3, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Vehicle with ID No vehicles match the keyword \"\". not found." + "'", str9, "Vehicle with ID No vehicles match the keyword \"\". not found.");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID No vehicles match the keyword \"\". not found." + "'", str13, "Vehicle with ID No vehicles match the keyword \"\". not found.");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found." + "'", str16, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found.");
        org.junit.Assert.assertNotNull(vehicleList17);
        org.junit.Assert.assertNotNull(customerList18);
        org.junit.Assert.assertNotNull(customerList19);
        org.junit.Assert.assertNotNull(vehicleList20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found." + "'", str22, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".\". not found. not found. not found. not found.\"." + "'", str24, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".\". not found. not found. not found. not found.\".");
        org.junit.Assert.assertNotNull(customerList25);
    }

    @Test
    public void test3558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3558");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.returnVehicle("Vehicle with ID  not found.");
        java.lang.String str10 = rentalSystem0.returnVehicle("hi!");
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID  not found.\".", "No vehicles match the keyword \"Vehicle with ID  not found.\".", "Vehicle with ID  not found.", (double) 10);
        java.lang.String str17 = rentalSystem0.searchVehicle("");
        java.lang.String str21 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found. not found. not found.", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found. not found.", (int) '#');
        java.lang.String str25 = rentalSystem0.rentVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found. not found. not found.\".\".", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\". not found.\". not found. not found.\". not found.\".", 1);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID  not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID  not found. not found.");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID hi! not found." + "'", str10, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "ID: No vehicles match the keyword \"Vehicle with ID  not found.\"., Model: No vehicles match the keyword \"Vehicle with ID  not found.\"., Type: Vehicle with ID  not found., Daily Rate: $10.0, Status: Available\n" + "'", str17, "ID: No vehicles match the keyword \"Vehicle with ID  not found.\"., Model: No vehicles match the keyword \"Vehicle with ID  not found.\"., Type: Vehicle with ID  not found., Daily Rate: $10.0, Status: Available\n");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found. not found. not found. not found." + "'", str21, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found. not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found. not found. not found.\".\". not found." + "'", str25, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found. not found. not found.\".\". not found.");
    }

    @Test
    public void test3559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3559");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList5 = rentalSystem0.getVehicles();
        java.lang.String str9 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".", "No vehicles match the keyword \"Vehicle with ID  not found.\".", (int) ' ');
        java.lang.String str13 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID  not found. not found.", "", (int) (byte) -1);
        int int14 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.", "Vehicle with ID hi! not found.");
        rentalSystem0.addCustomer("Vehicle with ID No vehicles match the keyword \"hi!\". not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\". not found.");
        java.util.List<org.example.Customer> customerList21 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.\". not found.\".", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n\".\".\".\".");
        java.lang.Class<?> wildcardClass25 = rentalSystem0.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertNotNull(vehicleList5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found." + "'", str9, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str13, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(customerList21);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test3560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3560");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        int int2 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".", "No vehicles match the keyword \"\".", (double) 1);
        java.lang.String str9 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.");
        java.util.List<org.example.Vehicle> vehicleList10 = rentalSystem0.getVehicles();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found. not found." + "'", str9, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList10);
    }

    @Test
    public void test3561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3561");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID  not found. not found.", "No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        java.lang.String str8 = rentalSystem0.rentVehicle("hi!", "No vehicles match the keyword \"Vehicle with ID  not found.\".", 100);
        int int9 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str11 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found.");
        java.util.List<org.example.Vehicle> vehicleList12 = rentalSystem0.getVehicles();
        java.lang.String str14 = rentalSystem0.returnVehicle("");
        rentalSystem0.addVehicle("No vehicles match the keyword \"hi!\".", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found. not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found.\". not found.", (double) 0.0f);
        java.util.List<org.example.Customer> customerList20 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found.", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.");
        int int24 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str28 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found. not found. not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found.\".\".", (int) 'a');
        java.lang.String str30 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.\". not found.\".\".\".\". not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID hi! not found." + "'", str8, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found.\"." + "'", str11, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found.\".");
        org.junit.Assert.assertNotNull(vehicleList12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID  not found." + "'", str14, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList20);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found. not found. not found. not found." + "'", str28, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found. not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.\". not found.\".\".\".\". not found. not found.\"." + "'", str30, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.\". not found.\".\".\".\". not found. not found.\".");
    }

    @Test
    public void test3562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3562");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.searchVehicle("Vehicle with ID  not found.");
        rentalSystem0.addVehicle("hi!", "Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID hi! not found.", (double) 0);
        rentalSystem0.addCustomer("Vehicle with ID hi! not found.", "hi!");
        java.lang.String str18 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.");
        java.lang.String str20 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.");
        java.lang.Class<?> wildcardClass21 = rentalSystem0.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "No vehicles match the keyword \"Vehicle with ID  not found.\"." + "'", str8, "No vehicles match the keyword \"Vehicle with ID  not found.\".");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\"." + "'", str18, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\".");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.\"." + "'", str20, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.\".");
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test3563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3563");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("");
        int int4 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Vehicle> vehicleList5 = rentalSystem0.getVehicles();
        java.lang.String str7 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.");
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".", "Vehicle with ID hi! not found.");
        java.lang.String str12 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.");
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found. not found.\". not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\".", (double) (short) 1);
        java.lang.String str19 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found.");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID  not found." + "'", str3, "Vehicle with ID  not found.");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(vehicleList5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.\"." + "'", str7, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.\".");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.\"." + "'", str12, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.\".");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found.\"." + "'", str19, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found.\".");
    }

    @Test
    public void test3564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3564");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("");
        rentalSystem0.addVehicle("Vehicle with ID  not found.", "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.", "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.", (double) (short) 0);
        java.util.List<org.example.Vehicle> vehicleList9 = rentalSystem0.getVehicles();
        int int10 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str12 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found. not found.\". not found. not found.\".");
        java.lang.String str14 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.\". not found. not found.");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID  not found." + "'", str3, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found. not found.\". not found. not found.\".\"." + "'", str12, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found. not found.\". not found. not found.\".\".");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.\". not found. not found.\"." + "'", str14, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.\". not found. not found.\".");
    }

    @Test
    public void test3565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3565");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("hi!");
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.lang.String str6 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID  not found. not found.");
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\". not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".", (double) (byte) 1);
        java.util.List<org.example.Vehicle> vehicleList12 = rentalSystem0.getVehicles();
        java.lang.String str14 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\". not found.");
        java.util.List<org.example.Vehicle> vehicleList15 = rentalSystem0.getVehicles();
        java.lang.String str17 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found. not found.\".");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID hi! not found." + "'", str3, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str6, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\". not found. not found." + "'", str14, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\". not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found. not found.\".\"." + "'", str17, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found. not found.\".\".");
    }

    @Test
    public void test3566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3566");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.searchVehicle("Vehicle with ID  not found.");
        rentalSystem0.addVehicle("hi!", "Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID hi! not found.", (double) 0);
        java.lang.String str15 = rentalSystem0.returnVehicle("Vehicle with ID  not found.");
        int int16 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str20 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\".", 100);
        java.util.List<org.example.Customer> customerList21 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList22 = rentalSystem0.getVehicles();
        // The following exception was thrown during execution in test generation
        try {
            rentalSystem0.addCustomer("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found. not found.\". not found. not found.\".\". not found.", "");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Customer ID cannot be null or empty");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "No vehicles match the keyword \"Vehicle with ID  not found.\"." + "'", str8, "No vehicles match the keyword \"Vehicle with ID  not found.\".");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Vehicle with ID Vehicle with ID  not found. not found." + "'", str15, "Vehicle with ID Vehicle with ID  not found. not found.");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found." + "'", str20, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found.");
        org.junit.Assert.assertNotNull(customerList21);
        org.junit.Assert.assertNotNull(vehicleList22);
    }

    @Test
    public void test3567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3567");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        int int7 = rentalSystem0.getAvailableVehicleCount();
        int int8 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\".", "hi!");
        java.lang.String str15 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\".", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID  not found.\".\".", (int) 'a');
        java.lang.String str17 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\".");
        java.lang.String str19 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.\". not found. not found. not found. not found.");
        java.util.List<org.example.Vehicle> vehicleList20 = rentalSystem0.getVehicles();
        java.lang.String str22 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n\".\".\". not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found." + "'", str15, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\".\"." + "'", str17, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\".\".");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.\". not found. not found. not found. not found. not found." + "'", str19, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.\". not found. not found. not found. not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n\".\".\". not found. not found. not found." + "'", str22, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n\".\".\". not found. not found. not found.");
    }

    @Test
    public void test3568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3568");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.lang.String str7 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".");
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID  not found.");
        java.util.List<org.example.Vehicle> vehicleList11 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found. not found. not found.\".", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID  not found.\".\".");
        rentalSystem0.addVehicle("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\".\".\".\".", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found. not found.\". not found. not found.\".\".", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\".\". not found.", 100.0d);
        java.lang.String str21 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found.\". not found. not found.");
        rentalSystem0.addVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.\".\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found. not found. not found. not found.\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found. not found. not found.\".", (double) '#');
        java.util.List<org.example.Vehicle> vehicleList27 = rentalSystem0.getVehicles();
        java.lang.String str31 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.\".\".\". not found. not found.", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\".", 3);
        java.util.List<org.example.Customer> customerList32 = rentalSystem0.getCustomers();
        java.lang.String str34 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".");
        int int35 = rentalSystem0.getAvailableVehicleCount();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\"." + "'", str7, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".");
        org.junit.Assert.assertNotNull(vehicleList11);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found.\". not found. not found. not found." + "'", str21, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found.\". not found. not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList27);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.\".\".\". not found. not found. not found." + "'", str31, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.\".\".\". not found. not found. not found.");
        org.junit.Assert.assertNotNull(customerList32);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\"." + "'", str34, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 2 + "'", int35 == 2);
    }

    @Test
    public void test3569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3569");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID  not found. not found.", "No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        java.lang.String str8 = rentalSystem0.rentVehicle("hi!", "No vehicles match the keyword \"Vehicle with ID  not found.\".", 100);
        java.lang.String str10 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID hi! not found. not found.");
        rentalSystem0.addVehicle("ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.", "No vehicles match the keyword \"\".", (double) (byte) 10);
        java.lang.String str17 = rentalSystem0.returnVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".");
        java.util.List<org.example.Vehicle> vehicleList18 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList19 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList20 = rentalSystem0.getCustomers();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID hi! not found." + "'", str8, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found." + "'", str10, "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found." + "'", str17, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.");
        org.junit.Assert.assertNotNull(vehicleList18);
        org.junit.Assert.assertNotNull(vehicleList19);
        org.junit.Assert.assertNotNull(customerList20);
    }

    @Test
    public void test3570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3570");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        int int7 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList8 = rentalSystem0.getCustomers();
        java.lang.String str10 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found.\". not found. not found. not found.\". not found.");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(customerList8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found.\". not found. not found. not found.\". not found. not found." + "'", str10, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found.\". not found. not found. not found.\". not found. not found.");
    }

    @Test
    public void test3571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3571");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.returnVehicle("Vehicle with ID  not found.");
        java.lang.String str10 = rentalSystem0.returnVehicle("hi!");
        java.lang.String str12 = rentalSystem0.searchVehicle("");
        rentalSystem0.addCustomer("Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".");
        int int16 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found. not found.\". not found.", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found. not found. not found.", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\". not found.\".", (double) 100);
        int int22 = rentalSystem0.getAvailableVehicleCount();
        // The following exception was thrown during execution in test generation
        try {
            rentalSystem0.addVehicle("", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\". not found. not found. not found.\".\". not found.", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.\".\". not found.\".", (double) 0.0f);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Vehicle ID cannot be null or empty");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID  not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID  not found. not found.");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID hi! not found." + "'", str10, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "No vehicles match the keyword \"\"." + "'", str12, "No vehicles match the keyword \"\".");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
    }

    @Test
    public void test3572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3572");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.searchVehicle("Vehicle with ID  not found.");
        rentalSystem0.addVehicle("hi!", "Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID hi! not found.", (double) 0);
        java.lang.String str15 = rentalSystem0.returnVehicle("Vehicle with ID  not found.");
        int int16 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str20 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\".", 100);
        java.util.List<org.example.Customer> customerList21 = rentalSystem0.getCustomers();
        int int22 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str24 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\".\".\". not found. not found.");
        java.util.List<org.example.Customer> customerList25 = rentalSystem0.getCustomers();
        java.lang.Class<?> wildcardClass26 = rentalSystem0.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "No vehicles match the keyword \"Vehicle with ID  not found.\"." + "'", str8, "No vehicles match the keyword \"Vehicle with ID  not found.\".");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Vehicle with ID Vehicle with ID  not found. not found." + "'", str15, "Vehicle with ID Vehicle with ID  not found. not found.");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found." + "'", str20, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found.");
        org.junit.Assert.assertNotNull(customerList21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\".\".\". not found. not found.\"." + "'", str24, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\".\".\". not found. not found.\".");
        org.junit.Assert.assertNotNull(customerList25);
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test3573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3573");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList3 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList4 = rentalSystem0.getVehicles();
        int int5 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str9 = rentalSystem0.rentVehicle("Vehicle with ID ID: No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\".\"., Model: No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.\"., Type: Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found., Daily Rate: $10.0, Status: Available\n not found.", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found. not found.\". not found. not found.\".\". not found.\".", (-1));
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(vehicleList3);
        org.junit.Assert.assertNotNull(vehicleList4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Vehicle with ID Vehicle with ID ID: No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\".\"., Model: No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.\"., Type: Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found., Daily Rate: $10.0, Status: Available\n not found. not found." + "'", str9, "Vehicle with ID Vehicle with ID ID: No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\".\"., Model: No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.\"., Type: Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found., Daily Rate: $10.0, Status: Available\n not found. not found.");
    }

    @Test
    public void test3574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3574");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID  not found. not found.", "No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        java.lang.String str8 = rentalSystem0.rentVehicle("hi!", "No vehicles match the keyword \"Vehicle with ID  not found.\".", 100);
        java.lang.String str10 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID hi! not found. not found.");
        rentalSystem0.addVehicle("ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.", "No vehicles match the keyword \"\".", (double) (byte) 10);
        java.lang.String str17 = rentalSystem0.returnVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".");
        java.util.List<org.example.Customer> customerList18 = rentalSystem0.getCustomers();
        java.lang.String str20 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found. not found.");
        java.lang.String str22 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found. not found.");
        rentalSystem0.addCustomer("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\". not found.\".\".");
        java.lang.String str29 = rentalSystem0.rentVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found. not found. not found. not found.\". not found.\". not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"\".\". not found.\".\".", (int) (byte) 0);
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\". not found.\".\".", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found. not found. not found.\". not found.\".");
        // The following exception was thrown during execution in test generation
        try {
            rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found. not found. not found. not found.\". not found. not found. not found.", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\".\".\". not found.\".", (double) (-1L));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Daily rate cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID hi! not found." + "'", str8, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found." + "'", str10, "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found." + "'", str17, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.");
        org.junit.Assert.assertNotNull(customerList18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found. not found.\"." + "'", str20, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found. not found.\".");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found. not found. not found." + "'", str22, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found. not found. not found. not found.\". not found.\". not found. not found." + "'", str29, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found. not found. not found. not found.\". not found.\". not found. not found.");
    }

    @Test
    public void test3575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3575");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("");
        java.util.List<org.example.Vehicle> vehicleList4 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.rentVehicle("", "Vehicle with ID hi! not found.", (int) (short) 100);
        java.util.List<org.example.Customer> customerList9 = rentalSystem0.getCustomers();
        java.lang.String str11 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found. not found. not found.\".\". not found.");
        java.lang.Class<?> wildcardClass12 = rentalSystem0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID  not found." + "'", str3, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID  not found." + "'", str8, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList9);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found. not found. not found.\".\". not found.\"." + "'", str11, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found. not found. not found.\".\". not found.\".");
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test3576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3576");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID  not found.", 100);
        java.lang.String str12 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID  not found.\".", "Vehicle with ID Vehicle with ID hi! not found. not found.", (int) (short) -1);
        java.lang.String str14 = rentalSystem0.searchVehicle("hi!");
        java.util.List<org.example.Vehicle> vehicleList15 = rentalSystem0.getVehicles();
        java.lang.String str17 = rentalSystem0.searchVehicle("");
        java.lang.String str21 = rentalSystem0.rentVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\".", 2);
        java.lang.String str23 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n\".\".\".\".\". not found.");
        java.lang.String str25 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found." + "'", str12, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "No vehicles match the keyword \"hi!\"." + "'", str14, "No vehicles match the keyword \"hi!\".");
        org.junit.Assert.assertNotNull(vehicleList15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "No vehicles match the keyword \"\"." + "'", str17, "No vehicles match the keyword \"\".");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found. not found." + "'", str21, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found. not found.");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n\".\".\".\".\". not found.\"." + "'", str23, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n\".\".\".\".\". not found.\".");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found. not found." + "'", str25, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found. not found.");
    }

    @Test
    public void test3577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3577");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("");
        rentalSystem0.addVehicle("Vehicle with ID  not found.", "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.", "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.", (double) (short) 0);
        java.lang.String str10 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"hi!\". not found.");
        java.util.List<org.example.Customer> customerList11 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found.", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found.\".");
        java.util.List<org.example.Vehicle> vehicleList15 = rentalSystem0.getVehicles();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID  not found." + "'", str3, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found." + "'", str10, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.");
        org.junit.Assert.assertNotNull(customerList11);
        org.junit.Assert.assertNotNull(vehicleList15);
    }

    @Test
    public void test3578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3578");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID  not found.\".", "hi!");
        int int10 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str12 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID  not found. not found.");
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.\". not found.\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\". not found. not found. not found.\".", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\". not found. not found. not found.", (double) 1.0f);
        // The following exception was thrown during execution in test generation
        try {
            rentalSystem0.addCustomer("", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\".\". not found. not found. not found. not found.\". not found.");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Name cannot be null or empty");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str12, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
    }

    @Test
    public void test3579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3579");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.searchVehicle("Vehicle with ID  not found.");
        rentalSystem0.addVehicle("hi!", "Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID hi! not found.", (double) 0);
        rentalSystem0.addCustomer("Vehicle with ID hi! not found.", "hi!");
        java.lang.String str18 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.");
        java.util.List<org.example.Customer> customerList19 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\". not found. not found.");
        java.lang.String str24 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.");
        java.lang.String str28 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found. not found. not found. not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found. not found.\".\".", (int) (byte) 100);
        java.util.List<org.example.Vehicle> vehicleList29 = rentalSystem0.getVehicles();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "No vehicles match the keyword \"Vehicle with ID  not found.\"." + "'", str8, "No vehicles match the keyword \"Vehicle with ID  not found.\".");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\"." + "'", str18, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\".");
        org.junit.Assert.assertNotNull(customerList19);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.\"." + "'", str24, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.\".");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found. not found. not found. not found. not found." + "'", str28, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found. not found. not found. not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList29);
    }

    @Test
    public void test3580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3580");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.returnVehicle("Vehicle with ID  not found.");
        int int9 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str13 = rentalSystem0.rentVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".", "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.", (int) (short) 10);
        java.util.List<org.example.Vehicle> vehicleList14 = rentalSystem0.getVehicles();
        java.lang.String str18 = rentalSystem0.rentVehicle("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found. not found. not found.\".\".\".", "Vehicle with ID Vehicle with ID  not found. not found.", (int) ' ');
        int int19 = rentalSystem0.getAvailableVehicleCount();
        java.lang.Class<?> wildcardClass20 = rentalSystem0.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID  not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID  not found. not found.");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found." + "'", str13, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.");
        org.junit.Assert.assertNotNull(vehicleList14);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found. not found. not found.\".\".\". not found." + "'", str18, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found. not found. not found.\".\".\". not found.");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test3581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3581");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID  not found.", 100);
        java.lang.String str12 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID  not found.\".", "Vehicle with ID Vehicle with ID hi! not found. not found.", (int) (short) -1);
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.");
        java.util.List<org.example.Vehicle> vehicleList16 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList17 = rentalSystem0.getVehicles();
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\".", "Vehicle with ID Vehicle with ID hi! not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".", (double) 10L);
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".\".\". not found.", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\".\".\". not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\".", (double) 0.0f);
        int int28 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str32 = rentalSystem0.rentVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\".\". not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found.\".", 0);
        java.lang.String str34 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found. not found. not found.\".\". not found.\".");
        java.lang.String str38 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\".\".\". not found. not found. not found. not found.", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\".\".\". not found. not found. not found. not found.", (int) (byte) 10);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found." + "'", str12, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList16);
        org.junit.Assert.assertNotNull(vehicleList17);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 2 + "'", int28 == 2);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\".\". not found. not found." + "'", str32, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\".\". not found. not found.");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found. not found. not found.\".\". not found.\".\"." + "'", str34, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found. not found. not found.\".\". not found.\".\".");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\".\".\". not found. not found. not found. not found. not found." + "'", str38, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\".\".\". not found. not found. not found. not found. not found.");
    }

    @Test
    public void test3582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3582");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList5 = rentalSystem0.getVehicles();
        java.lang.String str7 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found. not found.");
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found. not found. not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found.", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\".", (double) (byte) 100);
        java.util.List<org.example.Vehicle> vehicleList13 = rentalSystem0.getVehicles();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertNotNull(vehicleList5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found. not found.\"." + "'", str7, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found. not found.\".");
        org.junit.Assert.assertNotNull(vehicleList13);
    }

    @Test
    public void test3583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3583");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.returnVehicle("");
        int int9 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str13 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found.", (int) (short) 0);
        java.util.List<org.example.Vehicle> vehicleList14 = rentalSystem0.getVehicles();
        int int15 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found.\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found.\".");
        java.lang.String str20 = rentalSystem0.returnVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found. not found. not found.\".\".");
        java.util.List<org.example.Vehicle> vehicleList21 = rentalSystem0.getVehicles();
        java.lang.String str23 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\". not found. not found. not found. not found.\".");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID  not found." + "'", str8, "Vehicle with ID  not found.");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str13, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found. not found. not found.\".\". not found." + "'", str20, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found. not found. not found.\".\". not found.");
        org.junit.Assert.assertNotNull(vehicleList21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\". not found. not found. not found. not found.\".\"." + "'", str23, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\". not found. not found. not found. not found.\".\".");
    }

    @Test
    public void test3584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3584");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.");
        rentalSystem0.addCustomer("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\".");
        java.util.List<org.example.Vehicle> vehicleList13 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList14 = rentalSystem0.getCustomers();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertNotNull(vehicleList13);
        org.junit.Assert.assertNotNull(customerList14);
    }

    @Test
    public void test3585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3585");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.rentVehicle("", "No vehicles match the keyword \"Vehicle with ID hi! not found.\".", (int) (byte) 100);
        java.util.List<org.example.Vehicle> vehicleList9 = rentalSystem0.getVehicles();
        java.lang.String str11 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.");
        java.util.List<org.example.Vehicle> vehicleList12 = rentalSystem0.getVehicles();
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found. not found. not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID  not found.\".\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found.\".", (double) 1);
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\". not found.\".", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\".\". not found.");
        java.util.List<org.example.Customer> customerList21 = rentalSystem0.getCustomers();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID  not found." + "'", str8, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList9);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found." + "'", str11, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList12);
        org.junit.Assert.assertNotNull(customerList21);
    }

    @Test
    public void test3586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3586");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.lang.String str5 = rentalSystem0.returnVehicle("Vehicle with ID  not found.");
        java.lang.String str7 = rentalSystem0.searchVehicle("Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.");
        java.lang.String str9 = rentalSystem0.searchVehicle("hi!");
        rentalSystem0.addCustomer("hi!", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\". not found.");
        java.lang.String str16 = rentalSystem0.rentVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\".", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\".\".", (int) (short) 10);
        java.lang.String str18 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found.");
        java.util.List<org.example.Customer> customerList19 = rentalSystem0.getCustomers();
        java.lang.String str21 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\".\". not found. not found. not found. not found.");
        // The following exception was thrown during execution in test generation
        try {
            rentalSystem0.addVehicle("", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found. not found.\".\".\". not found.", "ID: Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found., Model: No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\"., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found. not found. not found.\"., Daily Rate: $100.0, Status: Available\n", (-1.0d));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Vehicle ID cannot be null or empty");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID Vehicle with ID  not found. not found." + "'", str5, "Vehicle with ID Vehicle with ID  not found. not found.");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\"." + "'", str7, "No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "No vehicles match the keyword \"hi!\"." + "'", str9, "No vehicles match the keyword \"hi!\".");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\". not found." + "'", str16, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\". not found.");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found." + "'", str18, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found.");
        org.junit.Assert.assertNotNull(customerList19);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\".\". not found. not found. not found. not found. not found." + "'", str21, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\".\". not found. not found. not found. not found. not found.");
    }

    @Test
    public void test3587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3587");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("");
        java.util.List<org.example.Vehicle> vehicleList4 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.rentVehicle("", "Vehicle with ID hi! not found.", (int) (short) 100);
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.", "No vehicles match the keyword \"Vehicle with ID  not found.\".", "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.", (double) 10);
        java.util.List<org.example.Vehicle> vehicleList14 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList15 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList16 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\".\". not found. not found. not found.", "Vehicle with ID Vehicle with ID hi! not found. not found.");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID  not found." + "'", str3, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID  not found." + "'", str8, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList14);
        org.junit.Assert.assertNotNull(customerList15);
        org.junit.Assert.assertNotNull(customerList16);
    }

    @Test
    public void test3588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3588");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.lang.String str9 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.", (int) (byte) 1);
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID hi! not found.\".", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\".");
        int int13 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str17 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found.", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found. not found.\". not found. not found.\".\".\".", 2);
        java.lang.Class<?> wildcardClass18 = rentalSystem0.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found." + "'", str9, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found." + "'", str17, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.");
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test3589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3589");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        int int7 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str9 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID  not found.\".");
        java.lang.String str13 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found. not found. not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\". not found.\".\". not found. not found.", (int) (byte) 10);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found." + "'", str9, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found. not found. not found. not found." + "'", str13, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found. not found. not found. not found.");
    }

    @Test
    public void test3590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3590");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList5 = rentalSystem0.getVehicles();
        java.lang.String str9 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".", "No vehicles match the keyword \"Vehicle with ID  not found.\".", (int) ' ');
        java.lang.String str13 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID  not found. not found.", "", (int) (byte) -1);
        int int14 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str18 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found. not found. not found.", 100);
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found.\". not found.\".", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\".\".");
        java.util.List<org.example.Vehicle> vehicleList22 = rentalSystem0.getVehicles();
        java.lang.String str24 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found. not found. not found. not found.\". not found.\".");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertNotNull(vehicleList5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found." + "'", str9, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str13, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found." + "'", str18, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList22);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found. not found. not found. not found.\". not found.\".\"." + "'", str24, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found. not found. not found. not found.\". not found.\".\".");
    }

    @Test
    public void test3591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3591");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        int int7 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\".\".", "Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.", "ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n", 1.0d);
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.\". not found. not found.", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found. not found. not found.\".\".", 0.0d);
        rentalSystem0.addVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found. not found. not found.\".\".", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\". not found. not found. not found. not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found.", (double) 2);
        java.util.List<org.example.Customer> customerList23 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList24 = rentalSystem0.getCustomers();
        int int25 = rentalSystem0.getAvailableVehicleCount();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(customerList23);
        org.junit.Assert.assertNotNull(customerList24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 3 + "'", int25 == 3);
    }

    @Test
    public void test3592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3592");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID  not found. not found.", "No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        int int5 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID hi! not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".", "Vehicle with ID Vehicle with ID hi! not found. not found.", (double) 100.0f);
        java.lang.String str14 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found. not found.", "", 0);
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found.\".", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\". not found. not found. not found. not found. not found.", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\".\". not found.", (double) 100L);
        java.util.List<org.example.Vehicle> vehicleList20 = rentalSystem0.getVehicles();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found. not found. not found." + "'", str14, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found. not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList20);
    }

    @Test
    public void test3593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3593");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("");
        rentalSystem0.addVehicle("Vehicle with ID  not found.", "Vehicle with ID hi! not found.", "Vehicle with ID Vehicle with ID hi! not found. not found.", (double) '4');
        java.lang.String str10 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".");
        int int11 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str13 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found. not found.");
        java.util.List<org.example.Vehicle> vehicleList14 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList15 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList16 = rentalSystem0.getCustomers();
        int int17 = rentalSystem0.getAvailableVehicleCount();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID  not found." + "'", str3, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\". not found." + "'", str10, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\". not found.");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found. not found. not found." + "'", str13, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found. not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList14);
        org.junit.Assert.assertNotNull(customerList15);
        org.junit.Assert.assertNotNull(customerList16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
    }

    @Test
    public void test3594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3594");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.returnVehicle("");
        int int9 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str13 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found.", (int) (short) 0);
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\". not found.", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found. not found. not found.", "Vehicle with ID No vehicles match the keyword \"\". not found.", (double) ' ');
        int int19 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str21 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\". not found. not found. not found. not found. not found.\".");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID  not found." + "'", str8, "Vehicle with ID  not found.");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str13, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\". not found. not found. not found. not found. not found.\". not found." + "'", str21, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\". not found. not found. not found. not found. not found.\". not found.");
    }

    @Test
    public void test3595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3595");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList7 = rentalSystem0.getVehicles();
        java.lang.String str11 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID hi! not found.\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.", (int) (byte) 100);
        java.lang.String str13 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".");
        java.lang.String str17 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".", (int) (byte) -1);
        java.util.List<org.example.Vehicle> vehicleList18 = rentalSystem0.getVehicles();
        java.lang.String str20 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\". not found.");
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found. not found.", "hi!", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\". not found.", 0.0d);
        java.util.List<org.example.Vehicle> vehicleList26 = rentalSystem0.getVehicles();
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found.\".", 0.0d);
        int int32 = rentalSystem0.getAvailableVehicleCount();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertNotNull(vehicleList7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found." + "'", str11, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\"." + "'", str13, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\".");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found." + "'", str17, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\". not found. not found." + "'", str20, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\". not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList26);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 2 + "'", int32 == 2);
    }

    @Test
    public void test3596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3596");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        int int7 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addCustomer("hi!", "Vehicle with ID Vehicle with ID  not found. not found.");
        java.lang.String str12 = rentalSystem0.searchVehicle("No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".");
        java.lang.String str14 = rentalSystem0.searchVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".\".");
        java.util.List<org.example.Vehicle> vehicleList15 = rentalSystem0.getVehicles();
        int int16 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Vehicle> vehicleList17 = rentalSystem0.getVehicles();
        java.lang.String str19 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.\". not found.");
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found. not found.\".\".\". not found. not found.", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\". not found. not found. not found.\".\". not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found. not found. not found. not found.\".\".", (double) 1L);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\"." + "'", str12, "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\".");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".\".\"." + "'", str14, "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".\".\".");
        org.junit.Assert.assertNotNull(vehicleList15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(vehicleList17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.\". not found. not found." + "'", str19, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.\". not found. not found.");
    }

    @Test
    public void test3597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3597");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.lang.String str4 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found.");
        java.lang.String str8 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.", "ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n", 100);
        java.lang.String str12 = rentalSystem0.rentVehicle("No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\". not found.", (int) (byte) 100);
        java.lang.Class<?> wildcardClass13 = rentalSystem0.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found." + "'", str4, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found.");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found." + "'", str12, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found.");
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test3598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3598");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.lang.String str5 = rentalSystem0.returnVehicle("Vehicle with ID  not found.");
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID  not found.\".", "No vehicles match the keyword \"\".");
        java.util.List<org.example.Vehicle> vehicleList9 = rentalSystem0.getVehicles();
        java.lang.String str11 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found. not found.");
        java.lang.String str13 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.");
        rentalSystem0.addVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\".", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\". not found. not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found. not found. not found. not found.\".", 0.0d);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID Vehicle with ID  not found. not found." + "'", str5, "Vehicle with ID Vehicle with ID  not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList9);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found. not found.\"." + "'", str11, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found. not found.\".");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found." + "'", str13, "Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found.");
    }

    @Test
    public void test3599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3599");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID  not found. not found.", "No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        java.lang.String str8 = rentalSystem0.rentVehicle("hi!", "No vehicles match the keyword \"Vehicle with ID  not found.\".", 100);
        java.lang.String str10 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID hi! not found. not found.");
        java.lang.String str14 = rentalSystem0.rentVehicle("No vehicles match the keyword \"hi!\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.", 10);
        java.util.List<org.example.Customer> customerList15 = rentalSystem0.getCustomers();
        java.lang.String str19 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found. not found.\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\". not found. not found.", (int) ' ');
        java.lang.String str23 = rentalSystem0.rentVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\".\". not found.", "", (int) ' ');
        java.lang.Class<?> wildcardClass24 = rentalSystem0.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID hi! not found." + "'", str8, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found." + "'", str10, "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID No vehicles match the keyword \"hi!\". not found." + "'", str14, "Vehicle with ID No vehicles match the keyword \"hi!\". not found.");
        org.junit.Assert.assertNotNull(customerList15);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found. not found.\". not found." + "'", str19, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found. not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\".\". not found. not found." + "'", str23, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\".\". not found. not found.");
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test3600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3600");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        int int7 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addCustomer("hi!", "Vehicle with ID Vehicle with ID  not found. not found.");
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\". not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\". not found. not found. not found.\".", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found. not found.", 0.0d);
        java.lang.String str17 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n\".\".\". not found. not found. not found.");
        java.lang.Class<?> wildcardClass18 = rentalSystem0.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n\".\".\". not found. not found. not found. not found." + "'", str17, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n\".\".\". not found. not found. not found. not found.");
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test3601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3601");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        int int7 = rentalSystem0.getAvailableVehicleCount();
        int int8 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\".", "hi!");
        java.lang.String str15 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\".", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID  not found.\".\".", (int) 'a');
        rentalSystem0.addCustomer("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\".\".\". not found. not found. not found.\".\". not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.\". not found.");
        int int19 = rentalSystem0.getAvailableVehicleCount();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found." + "'", str15, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
    }

    @Test
    public void test3602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3602");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList5 = rentalSystem0.getVehicles();
        java.lang.String str9 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".", "No vehicles match the keyword \"Vehicle with ID  not found.\".", (int) ' ');
        java.lang.String str13 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID  not found. not found.", "", (int) (byte) -1);
        int int14 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.", "Vehicle with ID hi! not found.");
        rentalSystem0.addCustomer("Vehicle with ID No vehicles match the keyword \"hi!\". not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\". not found.");
        java.util.List<org.example.Customer> customerList21 = rentalSystem0.getCustomers();
        java.lang.String str23 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found. not found. not found.\".");
        java.util.List<org.example.Customer> customerList24 = rentalSystem0.getCustomers();
        java.lang.String str26 = rentalSystem0.searchVehicle("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\". not found. not found. not found. not found.\".\".\".");
        int int27 = rentalSystem0.getAvailableVehicleCount();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertNotNull(vehicleList5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found." + "'", str9, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str13, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(customerList21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found. not found. not found.\". not found." + "'", str23, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found. not found. not found.\". not found.");
        org.junit.Assert.assertNotNull(customerList24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\". not found. not found. not found. not found.\".\".\".\"." + "'", str26, "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\". not found. not found. not found. not found.\".\".\".\".");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
    }

    @Test
    public void test3603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3603");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("hi!");
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        int int5 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str9 = rentalSystem0.rentVehicle("No vehicles match the keyword \"\".", "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.", (int) (short) 10);
        java.lang.String str13 = rentalSystem0.rentVehicle("No vehicles match the keyword \"\".", "", (-1));
        int int14 = rentalSystem0.getAvailableVehicleCount();
        int int15 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str17 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\".");
        java.lang.String str19 = rentalSystem0.returnVehicle("");
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.", "Vehicle with ID Vehicle with ID  not found. not found.");
        java.lang.String str26 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found.\".", "", 0);
        java.util.List<org.example.Customer> customerList27 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList28 = rentalSystem0.getCustomers();
        int int29 = rentalSystem0.getAvailableVehicleCount();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID hi! not found." + "'", str3, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Vehicle with ID No vehicles match the keyword \"\". not found." + "'", str9, "Vehicle with ID No vehicles match the keyword \"\". not found.");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID No vehicles match the keyword \"\". not found." + "'", str13, "Vehicle with ID No vehicles match the keyword \"\". not found.");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\".\"." + "'", str17, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\".\".");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Vehicle with ID  not found." + "'", str19, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found.\". not found." + "'", str26, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found.\". not found.");
        org.junit.Assert.assertNotNull(customerList27);
        org.junit.Assert.assertNotNull(customerList28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
    }

    @Test
    public void test3604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3604");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID  not found.\".", "hi!");
        int int10 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str12 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID  not found. not found.");
        java.lang.String str16 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.", (int) 'a');
        java.lang.String str18 = rentalSystem0.searchVehicle("Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.");
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.\". not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found. not found.\".", (double) ' ');
        int int24 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str26 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\".\".\". not found. not found.\". not found.");
        java.util.List<org.example.Vehicle> vehicleList27 = rentalSystem0.getVehicles();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str12, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found." + "'", str16, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\"." + "'", str18, "No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\".\".\". not found. not found.\". not found. not found." + "'", str26, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\".\".\". not found. not found.\". not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList27);
    }

    @Test
    public void test3605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3605");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.returnVehicle("Vehicle with ID  not found.");
        java.lang.String str12 = rentalSystem0.rentVehicle("Vehicle with ID hi! not found.", "Vehicle with ID Vehicle with ID  not found. not found.", (int) (byte) 10);
        java.lang.String str14 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        java.util.List<org.example.Vehicle> vehicleList15 = rentalSystem0.getVehicles();
        java.lang.String str19 = rentalSystem0.rentVehicle("", "Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.", (int) (byte) 100);
        java.lang.String str21 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.");
        java.util.List<org.example.Vehicle> vehicleList22 = rentalSystem0.getVehicles();
        java.lang.String str24 = rentalSystem0.searchVehicle("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\".\".\".");
        rentalSystem0.addCustomer("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\". not found. not found. not found. not found.\".\".\".\". not found.", "Vehicle with ID ID: hi!, Model: Vehicle with ID Vehicle with ID  not found. not found., Type: Vehicle with ID hi! not found., Daily Rate: $0.0, Status: Available\n not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID  not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID  not found. not found.");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID Vehicle with ID hi! not found. not found." + "'", str12, "Vehicle with ID Vehicle with ID hi! not found. not found.");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found." + "'", str14, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList15);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Vehicle with ID  not found." + "'", str19, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.\"." + "'", str21, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.\".");
        org.junit.Assert.assertNotNull(vehicleList22);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\".\".\".\"." + "'", str24, "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\".\".\".\".");
    }

    @Test
    public void test3606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3606");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.", "Vehicle with ID Vehicle with ID hi! not found. not found.", "No vehicles match the keyword \"hi!\".", (double) 1L);
        java.lang.String str13 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"hi!\". not found.");
        java.lang.String str17 = rentalSystem0.rentVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found.", (int) '4');
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.\". not found.", "No vehicles match the keyword \"\".", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found.\".", (double) 100.0f);
        java.lang.String str26 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".", 10);
        java.lang.String str28 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.");
        java.util.List<org.example.Customer> customerList29 = rentalSystem0.getCustomers();
        java.lang.String str31 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\". not found. not found. not found.\".");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\"." + "'", str13, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\".");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found." + "'", str17, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found." + "'", str26, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found. not found." + "'", str28, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found. not found.");
        org.junit.Assert.assertNotNull(customerList29);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\". not found. not found. not found.\".\"." + "'", str31, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\". not found. not found. not found.\".\".");
    }

    @Test
    public void test3607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3607");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.rentVehicle("", "No vehicles match the keyword \"Vehicle with ID hi! not found.\".", (int) (byte) 100);
        java.lang.String str10 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.");
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found.", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found.");
        java.util.List<org.example.Vehicle> vehicleList14 = rentalSystem0.getVehicles();
        java.lang.String str18 = rentalSystem0.rentVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".\".\". not found.\".\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found. not found. not found. not found.\". not found. not found.", (int) (byte) 1);
        java.util.List<org.example.Vehicle> vehicleList19 = rentalSystem0.getVehicles();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID  not found." + "'", str8, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found." + "'", str10, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList14);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".\".\". not found.\".\". not found." + "'", str18, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".\".\". not found.\".\". not found.");
        org.junit.Assert.assertNotNull(vehicleList19);
    }

    @Test
    public void test3608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3608");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        int int2 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        int int4 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".", "No vehicles match the keyword \"Vehicle with ID  not found.\".");
        int int8 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str10 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\".");
        java.util.List<org.example.Vehicle> vehicleList11 = rentalSystem0.getVehicles();
        java.lang.String str13 = rentalSystem0.searchVehicle("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\".\".\".");
        rentalSystem0.addCustomer("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID  not found.\".\". not found.", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found. not found. not found. not found.");
        java.lang.Class<?> wildcardClass17 = rentalSystem0.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found." + "'", str10, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\".\".\".\"." + "'", str13, "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\".\".\".\".");
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test3609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3609");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.lang.String str7 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".");
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID  not found.");
        java.lang.String str14 = rentalSystem0.rentVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.", 0);
        java.lang.String str18 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found. not found. not found.\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found.", (int) (short) 0);
        int int19 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\". not found. not found. not found.\".", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n\". not found.\". not found.\".");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\"." + "'", str7, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found." + "'", str14, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found. not found. not found.\". not found." + "'", str18, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found. not found. not found.\". not found.");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
    }

    @Test
    public void test3610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3610");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.searchVehicle("Vehicle with ID  not found.");
        rentalSystem0.addVehicle("hi!", "Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID hi! not found.", (double) 0);
        java.lang.String str15 = rentalSystem0.returnVehicle("Vehicle with ID  not found.");
        java.util.List<org.example.Customer> customerList16 = rentalSystem0.getCustomers();
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\". not found. not found.", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found. not found.", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\".\".", 0.0d);
        rentalSystem0.addVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\".", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n\".\".\".\".\".", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\".\". not found. not found. not found.", (double) 10);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "No vehicles match the keyword \"Vehicle with ID  not found.\"." + "'", str8, "No vehicles match the keyword \"Vehicle with ID  not found.\".");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Vehicle with ID Vehicle with ID  not found. not found." + "'", str15, "Vehicle with ID Vehicle with ID  not found. not found.");
        org.junit.Assert.assertNotNull(customerList16);
    }

    @Test
    public void test3611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3611");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.lang.String str5 = rentalSystem0.returnVehicle("Vehicle with ID  not found.");
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.");
        rentalSystem0.addVehicle("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.\".\".\".\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\". not found.\".\".", (double) (byte) 0);
        java.lang.String str16 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found.\".\". not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID Vehicle with ID  not found. not found." + "'", str5, "Vehicle with ID Vehicle with ID  not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found.\".\". not found. not found.\"." + "'", str16, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found.\".\". not found. not found.\".");
    }

    @Test
    public void test3612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3612");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.searchVehicle("Vehicle with ID  not found.");
        rentalSystem0.addVehicle("hi!", "Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID hi! not found.", (double) 0);
        rentalSystem0.addCustomer("Vehicle with ID hi! not found.", "hi!");
        java.lang.String str18 = rentalSystem0.returnVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".");
        java.lang.String str20 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found.");
        int int21 = rentalSystem0.getAvailableVehicleCount();
        int int22 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Vehicle> vehicleList23 = rentalSystem0.getVehicles();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "No vehicles match the keyword \"Vehicle with ID  not found.\"." + "'", str8, "No vehicles match the keyword \"Vehicle with ID  not found.\".");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found." + "'", str18, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found.\"." + "'", str20, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found.\".");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNotNull(vehicleList23);
    }

    @Test
    public void test3613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3613");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.rentVehicle("", "No vehicles match the keyword \"Vehicle with ID hi! not found.\".", (int) (byte) 100);
        java.lang.String str10 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.");
        int int11 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found. not found.\".");
        // The following exception was thrown during execution in test generation
        try {
            rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\". not found.\".\".", "");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Customer ID cannot be null or empty");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID  not found." + "'", str8, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found." + "'", str10, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
    }

    @Test
    public void test3614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3614");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.returnVehicle("");
        int int9 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str11 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.");
        java.lang.String str15 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID  not found. not found.", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".", (int) (short) 0);
        rentalSystem0.addCustomer("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".\".\". not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found. not found.\".");
        java.lang.String str20 = rentalSystem0.returnVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.\". not found.\".\".");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID  not found." + "'", str8, "Vehicle with ID  not found.");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found." + "'", str11, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str15, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.\". not found.\".\". not found." + "'", str20, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.\". not found.\".\". not found.");
    }

    @Test
    public void test3615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3615");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.returnVehicle("Vehicle with ID  not found.");
        java.lang.String str10 = rentalSystem0.searchVehicle("Vehicle with ID hi! not found.");
        java.lang.String str12 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found.");
        java.lang.String str14 = rentalSystem0.searchVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\".\".");
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.\".", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\". not found. not found. not found.\". not found.\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\".\". not found. not found. not found.\". not found.", (double) 3);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID  not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID  not found. not found.");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "No vehicles match the keyword \"Vehicle with ID hi! not found.\"." + "'", str10, "No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found." + "'", str12, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\".\".\"." + "'", str14, "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\".\".\".");
    }

    @Test
    public void test3616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3616");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        rentalSystem0.addCustomer("hi!", "Vehicle with ID Vehicle with ID  not found. not found.");
        java.util.List<org.example.Vehicle> vehicleList9 = rentalSystem0.getVehicles();
        java.lang.String str11 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID  not found. not found.");
        rentalSystem0.addCustomer("Vehicle with ID hi! not found.", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".");
        java.util.List<org.example.Vehicle> vehicleList15 = rentalSystem0.getVehicles();
        java.lang.String str17 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\". not found. not found. not found. not found.");
        // The following exception was thrown during execution in test generation
        try {
            rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found. not found. not found. not found.\". not found.", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.\". not found.\".\".\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found.\". not found. not found.", (double) (-1.0f));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Daily rate cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList9);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"." + "'", str11, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".");
        org.junit.Assert.assertNotNull(vehicleList15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\". not found. not found. not found. not found.\"." + "'", str17, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\". not found. not found. not found. not found.\".");
    }

    @Test
    public void test3617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3617");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList7 = rentalSystem0.getVehicles();
        java.lang.String str11 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID hi! not found.\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.", (int) (byte) 100);
        int int12 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Vehicle> vehicleList13 = rentalSystem0.getVehicles();
        java.lang.String str15 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\".");
        int int16 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\". not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\".", "Vehicle with ID Vehicle with ID hi! not found. not found.", 1.0d);
        rentalSystem0.addCustomer("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID  not found.\".\".\". not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".");
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\". not found.\".", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\".\".");
        java.lang.String str29 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.\".");
        java.util.List<org.example.Customer> customerList30 = rentalSystem0.getCustomers();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertNotNull(vehicleList7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found." + "'", str11, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(vehicleList13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found." + "'", str15, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.\".\"." + "'", str29, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.\".\".");
        org.junit.Assert.assertNotNull(customerList30);
    }

    @Test
    public void test3618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3618");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        int int2 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        int int4 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addVehicle("Vehicle with ID  not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.", (double) (byte) 100);
        java.lang.String str11 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".");
        java.util.List<org.example.Vehicle> vehicleList12 = rentalSystem0.getVehicles();
        int int13 = rentalSystem0.getAvailableVehicleCount();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\". not found." + "'", str11, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
    }

    @Test
    public void test3619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3619");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList7 = rentalSystem0.getVehicles();
        java.lang.String str11 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID hi! not found.\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.", (int) (byte) 100);
        java.lang.String str13 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".");
        int int14 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList15 = rentalSystem0.getCustomers();
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found.", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.", (double) '4');
        java.util.List<org.example.Vehicle> vehicleList21 = rentalSystem0.getVehicles();
        java.lang.Class<?> wildcardClass22 = rentalSystem0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertNotNull(vehicleList7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found." + "'", str11, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\"." + "'", str13, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\".");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(customerList15);
        org.junit.Assert.assertNotNull(vehicleList21);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test3620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3620");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        int int2 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.lang.String str5 = rentalSystem0.returnVehicle("No vehicles match the keyword \"hi!\".");
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID No vehicles match the keyword \"hi!\". not found." + "'", str5, "Vehicle with ID No vehicles match the keyword \"hi!\". not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
    }

    @Test
    public void test3621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3621");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID  not found.\".", "hi!");
        int int10 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str12 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID  not found. not found.");
        java.lang.String str14 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.");
        java.util.List<org.example.Customer> customerList15 = rentalSystem0.getCustomers();
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\". not found.\". not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\". not found. not found.", (double) 'a');
        java.util.List<org.example.Customer> customerList21 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".\".", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".\".\".");
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\". not found.\".", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\".\".\". not found.");
        java.util.List<org.example.Customer> customerList28 = rentalSystem0.getCustomers();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str12, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\"." + "'", str14, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".");
        org.junit.Assert.assertNotNull(customerList15);
        org.junit.Assert.assertNotNull(customerList21);
        org.junit.Assert.assertNotNull(customerList28);
    }

    @Test
    public void test3622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3622");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        int int2 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        int int4 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".", "No vehicles match the keyword \"Vehicle with ID  not found.\".");
        int int8 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str10 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\".");
        java.util.List<org.example.Vehicle> vehicleList11 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList12 = rentalSystem0.getVehicles();
        java.lang.String str16 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\". not found. not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\".\".", 10);
        java.lang.String str18 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"\".\".\". not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found." + "'", str10, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList11);
        org.junit.Assert.assertNotNull(vehicleList12);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\". not found. not found. not found." + "'", str16, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\". not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"\".\".\". not found.\". not found. not found." + "'", str18, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"\".\".\". not found.\". not found. not found.");
    }

    @Test
    public void test3623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3623");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID  not found.\".", "hi!");
        int int10 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str12 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.");
        java.lang.String str14 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\". not found.");
        rentalSystem0.addVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\".\".", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\". not found. not found. not found.", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\". not found. not found. not found.", 10.0d);
        // The following exception was thrown during execution in test generation
        try {
            rentalSystem0.addVehicle("", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\". not found.\".", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found. not found.\".\".", (double) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Vehicle ID cannot be null or empty");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\"." + "'", str12, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\".");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\". not found. not found." + "'", str14, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\". not found. not found.");
    }

    @Test
    public void test3624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3624");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.returnVehicle("Vehicle with ID  not found.");
        int int9 = rentalSystem0.getAvailableVehicleCount();
        int int10 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList11 = rentalSystem0.getCustomers();
        java.lang.Class<?> wildcardClass12 = customerList11.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID  not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID  not found. not found.");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(customerList11);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test3625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3625");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.searchVehicle("Vehicle with ID  not found.");
        rentalSystem0.addVehicle("hi!", "Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID hi! not found.", (double) 0);
        java.util.List<org.example.Customer> customerList14 = rentalSystem0.getCustomers();
        java.lang.String str18 = rentalSystem0.rentVehicle("Vehicle with ID No vehicles match the keyword \"hi!\". not found.", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found. not found.", (int) (short) -1);
        java.util.List<org.example.Vehicle> vehicleList19 = rentalSystem0.getVehicles();
        java.lang.String str21 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.");
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\".", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".");
        java.util.List<org.example.Vehicle> vehicleList25 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList26 = rentalSystem0.getVehicles();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "No vehicles match the keyword \"Vehicle with ID  not found.\"." + "'", str8, "No vehicles match the keyword \"Vehicle with ID  not found.\".");
        org.junit.Assert.assertNotNull(customerList14);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found." + "'", str18, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList19);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\"." + "'", str21, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\".");
        org.junit.Assert.assertNotNull(vehicleList25);
        org.junit.Assert.assertNotNull(vehicleList26);
    }

    @Test
    public void test3626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3626");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("");
        rentalSystem0.addVehicle("Vehicle with ID  not found.", "Vehicle with ID hi! not found.", "Vehicle with ID Vehicle with ID hi! not found. not found.", (double) '4');
        int int9 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList10 = rentalSystem0.getCustomers();
        java.lang.String str12 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\".");
        java.lang.String str16 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\".", (int) (short) 1);
        java.util.List<org.example.Customer> customerList17 = rentalSystem0.getCustomers();
        java.lang.String str19 = rentalSystem0.searchVehicle("");
        java.util.List<org.example.Vehicle> vehicleList20 = rentalSystem0.getVehicles();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID  not found." + "'", str3, "Vehicle with ID  not found.");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(customerList10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found." + "'", str12, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found. not found." + "'", str16, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found. not found.");
        org.junit.Assert.assertNotNull(customerList17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n" + "'", str19, "ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n");
        org.junit.Assert.assertNotNull(vehicleList20);
    }

    @Test
    public void test3627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3627");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("hi!");
        rentalSystem0.addCustomer("ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n", "No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".");
        java.lang.String str10 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".", (int) (byte) 1);
        java.lang.String str14 = rentalSystem0.rentVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\". not found.", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".\".\".", 100);
        java.lang.String str18 = rentalSystem0.rentVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.\". not found.", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\".\".\". not found. not found. not found. not found.", 0);
        java.lang.Class<?> wildcardClass19 = rentalSystem0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID hi! not found." + "'", str3, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found. not found." + "'", str10, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\". not found. not found." + "'", str14, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\". not found. not found.");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.\". not found. not found." + "'", str18, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.\". not found. not found.");
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test3628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3628");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID  not found.\".", "hi!");
        int int10 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str12 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID  not found. not found.");
        java.lang.String str16 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.", (int) 'a');
        java.lang.String str20 = rentalSystem0.rentVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found.", (int) (byte) -1);
        java.util.List<org.example.Vehicle> vehicleList21 = rentalSystem0.getVehicles();
        java.lang.String str23 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found. not found.\".");
        java.lang.String str25 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.");
        java.lang.String str27 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found. not found.");
        java.lang.String str29 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.\". not found.\".\". not found.\".");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str12, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found." + "'", str16, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found." + "'", str20, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found. not found.\". not found." + "'", str23, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found. not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\"." + "'", str25, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\".");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found. not found. not found." + "'", str27, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.\". not found.\".\". not found.\".\"." + "'", str29, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.\". not found.\".\". not found.\".\".");
    }

    @Test
    public void test3629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3629");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        java.lang.String str7 = rentalSystem0.searchVehicle("Vehicle with ID hi! not found.");
        java.util.List<org.example.Customer> customerList8 = rentalSystem0.getCustomers();
        java.lang.String str10 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.");
        java.lang.String str14 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found. not found.\".", 3);
        java.util.List<org.example.Vehicle> vehicleList15 = rentalSystem0.getVehicles();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "No vehicles match the keyword \"Vehicle with ID hi! not found.\"." + "'", str7, "No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        org.junit.Assert.assertNotNull(customerList8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found." + "'", str10, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found." + "'", str14, "Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList15);
    }

    @Test
    public void test3630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3630");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID  not found.\".", "hi!");
        rentalSystem0.addCustomer("No vehicles match the keyword \"hi!\".", "hi!");
        java.lang.String str14 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.");
        java.lang.String str16 = rentalSystem0.searchVehicle("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found.\".\".\".");
        java.lang.String str18 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\". not found. not found. not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.\"." + "'", str14, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.\".");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found.\".\".\".\"." + "'", str16, "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found.\".\".\".\".");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\". not found. not found. not found. not found.\"." + "'", str18, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\". not found. not found. not found. not found.\".");
    }

    @Test
    public void test3631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3631");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.returnVehicle("");
        int int9 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str11 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.");
        java.util.List<org.example.Vehicle> vehicleList12 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList13 = rentalSystem0.getVehicles();
        java.lang.String str15 = rentalSystem0.returnVehicle("Vehicle is already available.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID  not found." + "'", str8, "Vehicle with ID  not found.");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found." + "'", str11, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList12);
        org.junit.Assert.assertNotNull(vehicleList13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Vehicle with ID Vehicle is already available. not found." + "'", str15, "Vehicle with ID Vehicle is already available. not found.");
    }

    @Test
    public void test3632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3632");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.searchVehicle("Vehicle with ID  not found.");
        rentalSystem0.addVehicle("hi!", "Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID hi! not found.", (double) 0);
        java.util.List<org.example.Vehicle> vehicleList14 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList15 = rentalSystem0.getCustomers();
        java.lang.String str17 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\". not found.");
        int int18 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str22 = rentalSystem0.rentVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found. not found.\".", (int) (byte) 10);
        java.lang.String str24 = rentalSystem0.returnVehicle("Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.");
        java.util.List<org.example.Vehicle> vehicleList25 = rentalSystem0.getVehicles();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "No vehicles match the keyword \"Vehicle with ID  not found.\"." + "'", str8, "No vehicles match the keyword \"Vehicle with ID  not found.\".");
        org.junit.Assert.assertNotNull(vehicleList14);
        org.junit.Assert.assertNotNull(customerList15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\". not found.\"." + "'", str17, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\". not found.\".");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found." + "'", str22, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found.");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found." + "'", str24, "Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList25);
    }

    @Test
    public void test3633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3633");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.", "Vehicle with ID Vehicle with ID hi! not found. not found.", "No vehicles match the keyword \"hi!\".", (double) 1L);
        java.lang.String str13 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"hi!\". not found.");
        java.lang.String str17 = rentalSystem0.rentVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found.", (int) '4');
        java.util.List<org.example.Vehicle> vehicleList18 = rentalSystem0.getVehicles();
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.\". not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.\". not found. not found.", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\".\".\".\".", (double) 0);
        java.lang.String str25 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\". not found.\".");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\"." + "'", str13, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\".");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found." + "'", str17, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.");
        org.junit.Assert.assertNotNull(vehicleList18);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\". not found.\". not found." + "'", str25, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\". not found.\". not found.");
    }

    @Test
    public void test3634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3634");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID  not found. not found.", "No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        java.lang.String str8 = rentalSystem0.rentVehicle("hi!", "No vehicles match the keyword \"Vehicle with ID  not found.\".", 100);
        java.lang.String str10 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID hi! not found. not found.");
        rentalSystem0.addVehicle("ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.", "No vehicles match the keyword \"\".", (double) (byte) 10);
        java.lang.String str17 = rentalSystem0.returnVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".");
        java.util.List<org.example.Customer> customerList18 = rentalSystem0.getCustomers();
        java.lang.String str20 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found. not found.");
        java.lang.String str22 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found. not found.");
        rentalSystem0.addCustomer("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\". not found.\".\".");
        java.lang.String str29 = rentalSystem0.rentVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found. not found. not found. not found.\". not found.\". not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"\".\". not found.\".\".", (int) (byte) 0);
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\". not found. not found. not found.\".\".", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\". not found.");
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\".\". not found. not found. not found. not found.", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.\". not found.\".", "Vehicle with ID Vehicle with ID ID: Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found., Model: Vehicle with ID Vehicle with ID hi! not found. not found., Type: No vehicles match the keyword \"hi!\"., Daily Rate: $1.0, Status: Available\nID: Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.\". not found., Model: No vehicles match the keyword \"\"., Type: No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found.\"., Daily Rate: $100.0, Status: Available\n not found. not found.", (double) (byte) 100);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID hi! not found." + "'", str8, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found." + "'", str10, "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found." + "'", str17, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.");
        org.junit.Assert.assertNotNull(customerList18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found. not found.\"." + "'", str20, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found. not found.\".");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found. not found. not found." + "'", str22, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found. not found. not found. not found.\". not found.\". not found. not found." + "'", str29, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found. not found. not found. not found.\". not found.\". not found. not found.");
    }

    @Test
    public void test3635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3635");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID  not found.\".", "hi!");
        rentalSystem0.addCustomer("No vehicles match the keyword \"hi!\".", "hi!");
        java.lang.String str14 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        java.util.List<org.example.Vehicle> vehicleList15 = rentalSystem0.getVehicles();
        java.lang.String str17 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.");
        int int18 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found. not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\". not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.\". not found.", (double) 1.0f);
        java.lang.String str25 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\". not found. not found.");
        java.util.List<org.example.Customer> customerList26 = rentalSystem0.getCustomers();
        java.lang.String str28 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found.\". not found. not found.\".");
        java.util.List<org.example.Vehicle> vehicleList29 = rentalSystem0.getVehicles();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found." + "'", str14, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found." + "'", str17, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\". not found. not found. not found." + "'", str25, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\". not found. not found. not found.");
        org.junit.Assert.assertNotNull(customerList26);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found.\". not found. not found.\".\"." + "'", str28, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found.\". not found. not found.\".\".");
        org.junit.Assert.assertNotNull(vehicleList29);
    }

    @Test
    public void test3636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3636");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.searchVehicle("Vehicle with ID  not found.");
        rentalSystem0.addVehicle("hi!", "Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID hi! not found.", (double) 0);
        rentalSystem0.addCustomer("Vehicle with ID hi! not found.", "hi!");
        java.lang.String str18 = rentalSystem0.returnVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".");
        java.lang.String str20 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found.");
        int int21 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str25 = rentalSystem0.rentVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\".\". not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\". not found. not found.\". not found. not found.", (int) (byte) 1);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "No vehicles match the keyword \"Vehicle with ID  not found.\"." + "'", str8, "No vehicles match the keyword \"Vehicle with ID  not found.\".");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found." + "'", str18, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found.\"." + "'", str20, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found.\".");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\".\". not found. not found." + "'", str25, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\".\". not found. not found.");
    }

    @Test
    public void test3637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3637");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("hi!");
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\".\". not found. not found.", "Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.");
        java.util.List<org.example.Customer> customerList7 = rentalSystem0.getCustomers();
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\".\".\". not found. not found. not found.", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found.\".\". not found. not found. not found.", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found. not found.\". not found.\".", 0.0d);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID hi! not found." + "'", str3, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertNotNull(customerList7);
    }

    @Test
    public void test3638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3638");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.returnVehicle("Vehicle with ID  not found.");
        java.lang.String str10 = rentalSystem0.returnVehicle("hi!");
        java.lang.String str14 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID hi! not found. not found.", "ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n", (int) (short) -1);
        java.util.List<org.example.Vehicle> vehicleList15 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList16 = rentalSystem0.getVehicles();
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found.\".", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found.\".\".\".", (double) (short) 1);
        java.lang.String str25 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found. not found.\".", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found. not found. not found. not found.", (int) '4');
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID  not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID  not found. not found.");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID hi! not found." + "'", str10, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found." + "'", str14, "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList15);
        org.junit.Assert.assertNotNull(vehicleList16);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found. not found.\". not found." + "'", str25, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found. not found.\". not found.");
    }

    @Test
    public void test3639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3639");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.lang.String str4 = rentalSystem0.searchVehicle("hi!");
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\".\".");
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.\". not found. not found.", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID  not found.\".\".\". not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found.\".\".", (double) ' ');
        java.lang.Class<?> wildcardClass13 = rentalSystem0.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "No vehicles match the keyword \"hi!\"." + "'", str4, "No vehicles match the keyword \"hi!\".");
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test3640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3640");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID  not found. not found.", "No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        java.lang.String str8 = rentalSystem0.rentVehicle("hi!", "No vehicles match the keyword \"Vehicle with ID  not found.\".", 100);
        java.lang.String str10 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID hi! not found. not found.");
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found. not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.", (double) ' ');
        java.lang.String str17 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found.\". not found. not found.");
        int int18 = rentalSystem0.getAvailableVehicleCount();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID hi! not found." + "'", str8, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found." + "'", str10, "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found.\". not found. not found.\"." + "'", str17, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found.\". not found. not found.\".");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
    }

    @Test
    public void test3641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3641");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.searchVehicle("Vehicle with ID  not found.");
        rentalSystem0.addVehicle("hi!", "Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID hi! not found.", (double) 0);
        java.util.List<org.example.Vehicle> vehicleList14 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList15 = rentalSystem0.getCustomers();
        java.lang.String str19 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\". not found. not found.", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found. not found.", (int) 'a');
        rentalSystem0.addVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.\". not found.\".\". not found.\".\".", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found. not found. not found.\".\".", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\".", (double) '4');
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "No vehicles match the keyword \"Vehicle with ID  not found.\"." + "'", str8, "No vehicles match the keyword \"Vehicle with ID  not found.\".");
        org.junit.Assert.assertNotNull(vehicleList14);
        org.junit.Assert.assertNotNull(customerList15);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\". not found. not found. not found." + "'", str19, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\". not found. not found. not found.");
    }

    @Test
    public void test3642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3642");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("");
        rentalSystem0.addVehicle("Vehicle with ID  not found.", "Vehicle with ID hi! not found.", "Vehicle with ID Vehicle with ID hi! not found. not found.", (double) '4');
        java.lang.String str10 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID hi! not found. not found.");
        java.util.List<org.example.Customer> customerList11 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\".\". not found.", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\".\".\".\".");
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\". not found. not found. not found. not found.\". not found.", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found. not found.\". not found. not found.\".\". not found.", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.\". not found.\".", 0.0d);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID  not found." + "'", str3, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n" + "'", str10, "ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n");
        org.junit.Assert.assertNotNull(customerList11);
    }

    @Test
    public void test3643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3643");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID  not found.\".", "hi!");
        int int10 = rentalSystem0.getAvailableVehicleCount();
        int int11 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList12 = rentalSystem0.getCustomers();
        int int13 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str17 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\". not found. not found. not found. not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\".\". not found. not found.", (int) (short) 10);
        java.util.List<org.example.Customer> customerList18 = rentalSystem0.getCustomers();
        java.lang.String str20 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.\".\".\".\". not found.");
        java.util.List<org.example.Customer> customerList21 = rentalSystem0.getCustomers();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(customerList12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\". not found. not found. not found. not found. not found." + "'", str17, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\". not found. not found. not found. not found. not found.");
        org.junit.Assert.assertNotNull(customerList18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.\".\".\".\". not found.\"." + "'", str20, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.\".\".\".\". not found.\".");
        org.junit.Assert.assertNotNull(customerList21);
    }

    @Test
    public void test3644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3644");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("");
        int int4 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str8 = rentalSystem0.rentVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found.", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found. not found.", (int) '#');
        java.util.List<org.example.Vehicle> vehicleList9 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found.\".\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.\". not found.");
        int int13 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str15 = rentalSystem0.searchVehicle("");
        java.util.List<org.example.Customer> customerList16 = rentalSystem0.getCustomers();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID  not found." + "'", str3, "Vehicle with ID  not found.");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList9);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "No vehicles match the keyword \"\"." + "'", str15, "No vehicles match the keyword \"\".");
        org.junit.Assert.assertNotNull(customerList16);
    }

    @Test
    public void test3645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3645");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("");
        int int4 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Vehicle> vehicleList5 = rentalSystem0.getVehicles();
        java.lang.String str7 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found.");
        java.lang.String str9 = rentalSystem0.searchVehicle("No vehicles match the keyword \"ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n\".");
        java.util.List<org.example.Vehicle> vehicleList10 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList11 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\". not found. not found. not found.\".", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"\".\". not found. not found.\".\".");
        int int15 = rentalSystem0.getAvailableVehicleCount();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID  not found." + "'", str3, "Vehicle with ID  not found.");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(vehicleList5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found." + "'", str7, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n\".\"." + "'", str9, "No vehicles match the keyword \"No vehicles match the keyword \"ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n\".\".");
        org.junit.Assert.assertNotNull(vehicleList10);
        org.junit.Assert.assertNotNull(customerList11);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
    }

    @Test
    public void test3646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3646");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("");
        rentalSystem0.addVehicle("Vehicle with ID  not found.", "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.", "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.", (double) (short) 0);
        java.util.List<org.example.Vehicle> vehicleList9 = rentalSystem0.getVehicles();
        java.lang.String str11 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\". not found. not found. not found.");
        java.lang.Class<?> wildcardClass12 = rentalSystem0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID  not found." + "'", str3, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList9);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\". not found. not found. not found.\"." + "'", str11, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\". not found. not found. not found.\".");
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test3647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3647");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID  not found. not found.", "No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        java.lang.String str8 = rentalSystem0.rentVehicle("hi!", "No vehicles match the keyword \"Vehicle with ID  not found.\".", 100);
        java.lang.String str10 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID hi! not found. not found.");
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found. not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.", (double) ' ');
        java.util.List<org.example.Vehicle> vehicleList16 = rentalSystem0.getVehicles();
        java.lang.String str20 = rentalSystem0.rentVehicle("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found. not found.\". not found. not found.\".\".\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found. not found.\".\". not found. not found.\". not found.", (int) (short) -1);
        java.lang.String str22 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.\".");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID hi! not found." + "'", str8, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found." + "'", str10, "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList16);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found. not found.\". not found. not found.\".\".\". not found." + "'", str20, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found. not found.\". not found. not found.\".\".\". not found.");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.\".\"." + "'", str22, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.\".\".");
    }

    @Test
    public void test3648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3648");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID  not found.", 100);
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID  not found.\".", "Vehicle with ID Vehicle with ID  not found. not found.");
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.\". not found. not found. not found. not found. not found.", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\".\". not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\". not found. not found.\". not found. not found.", (double) 0L);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
    }

    @Test
    public void test3649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3649");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("");
        int int4 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Vehicle> vehicleList5 = rentalSystem0.getVehicles();
        // The following exception was thrown during execution in test generation
        try {
            rentalSystem0.addCustomer("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\".\".\". not found.", "");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Customer ID cannot be null or empty");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID  not found." + "'", str3, "Vehicle with ID  not found.");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(vehicleList5);
    }

    @Test
    public void test3650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3650");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID  not found.\".", "hi!");
        java.lang.String str11 = rentalSystem0.returnVehicle("Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.");
        java.util.List<org.example.Vehicle> vehicleList12 = rentalSystem0.getVehicles();
        java.lang.String str14 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found.");
        java.lang.String str16 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found.");
        java.lang.String str20 = rentalSystem0.rentVehicle("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\".\".\".", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".", (int) (short) 100);
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\".\". not found. not found.", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n\".\".\".");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found." + "'", str11, "Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found. not found." + "'", str14, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found. not found." + "'", str16, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\".\".\". not found." + "'", str20, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\".\".\". not found.");
    }

    @Test
    public void test3651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3651");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.lang.String str9 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.", (int) (byte) 1);
        java.util.List<org.example.Vehicle> vehicleList10 = rentalSystem0.getVehicles();
        java.lang.String str14 = rentalSystem0.rentVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.", (int) (short) 1);
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found. not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\".\".", (double) (short) 100);
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found.\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\". not found. not found.");
        java.lang.String str24 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle is already available. not found. not found.\". not found.\".");
        java.util.List<org.example.Vehicle> vehicleList25 = rentalSystem0.getVehicles();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found." + "'", str9, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList10);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found." + "'", str14, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle is already available. not found. not found.\". not found.\". not found." + "'", str24, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle is already available. not found. not found.\". not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList25);
    }

    @Test
    public void test3652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3652");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.returnVehicle("");
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".", "No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".");
        java.lang.String str15 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\".", "No vehicles match the keyword \"Vehicle with ID  not found.\".", (int) (short) 100);
        java.util.List<org.example.Customer> customerList16 = rentalSystem0.getCustomers();
        java.lang.String str18 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\". not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID  not found." + "'", str8, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found." + "'", str15, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found.");
        org.junit.Assert.assertNotNull(customerList16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\". not found. not found. not found." + "'", str18, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\". not found. not found. not found.");
    }

    @Test
    public void test3653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3653");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.searchVehicle("Vehicle with ID  not found.");
        rentalSystem0.addVehicle("hi!", "Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID hi! not found.", (double) 0);
        java.util.List<org.example.Customer> customerList14 = rentalSystem0.getCustomers();
        java.lang.String str18 = rentalSystem0.rentVehicle("Vehicle with ID No vehicles match the keyword \"hi!\". not found.", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found. not found.", (int) (short) -1);
        java.util.List<org.example.Vehicle> vehicleList19 = rentalSystem0.getVehicles();
        java.lang.String str21 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.");
        java.util.List<org.example.Vehicle> vehicleList22 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n\".\". not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found.");
        java.lang.String str29 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found. not found. not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found.\".\".", 10);
        java.util.List<org.example.Customer> customerList30 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList31 = rentalSystem0.getCustomers();
        java.lang.String str35 = rentalSystem0.rentVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\".\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\". not found. not found. not found.\". not found. not found.", (int) (short) -1);
        java.util.List<org.example.Vehicle> vehicleList36 = rentalSystem0.getVehicles();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "No vehicles match the keyword \"Vehicle with ID  not found.\"." + "'", str8, "No vehicles match the keyword \"Vehicle with ID  not found.\".");
        org.junit.Assert.assertNotNull(customerList14);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found." + "'", str18, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList19);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\"." + "'", str21, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\".");
        org.junit.Assert.assertNotNull(vehicleList22);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found. not found. not found. not found." + "'", str29, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found. not found. not found. not found.");
        org.junit.Assert.assertNotNull(customerList30);
        org.junit.Assert.assertNotNull(customerList31);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\".\". not found." + "'", str35, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\".\". not found.");
        org.junit.Assert.assertNotNull(vehicleList36);
    }

    @Test
    public void test3654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3654");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.searchVehicle("No vehicles match the keyword \"hi!\".");
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found. not found.", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found.", "Vehicle with ID No vehicles match the keyword \"ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n\". not found.", (double) (short) 1);
        java.util.List<org.example.Customer> customerList14 = rentalSystem0.getCustomers();
        java.lang.String str18 = rentalSystem0.rentVehicle("No vehicles match the keyword \"No vehicles match the keyword \"\".\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found.\". not found. not found.", (int) ' ');
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\"." + "'", str8, "No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".");
        org.junit.Assert.assertNotNull(customerList14);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"\".\". not found." + "'", str18, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"\".\". not found.");
    }

    @Test
    public void test3655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3655");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("");
        int int4 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Vehicle> vehicleList5 = rentalSystem0.getVehicles();
        java.lang.String str7 = rentalSystem0.searchVehicle("hi!");
        rentalSystem0.addVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".", "ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\".", (double) 10L);
        java.lang.String str16 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\".\".\". not found. not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found.", (int) ' ');
        int int17 = rentalSystem0.getAvailableVehicleCount();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID  not found." + "'", str3, "Vehicle with ID  not found.");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(vehicleList5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "No vehicles match the keyword \"hi!\"." + "'", str7, "No vehicles match the keyword \"hi!\".");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\".\".\". not found. not found. not found." + "'", str16, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\".\".\". not found. not found. not found.");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
    }

    @Test
    public void test3656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3656");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("");
        rentalSystem0.addVehicle("Vehicle with ID  not found.", "Vehicle with ID hi! not found.", "Vehicle with ID Vehicle with ID hi! not found. not found.", (double) '4');
        int int9 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Vehicle> vehicleList10 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList11 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList12 = rentalSystem0.getVehicles();
        int int13 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList14 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList15 = rentalSystem0.getVehicles();
        java.lang.String str17 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID  not found.\".\". not found.");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID  not found." + "'", str3, "Vehicle with ID  not found.");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(vehicleList10);
        org.junit.Assert.assertNotNull(customerList11);
        org.junit.Assert.assertNotNull(vehicleList12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(customerList14);
        org.junit.Assert.assertNotNull(vehicleList15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID  not found.\".\". not found.\"." + "'", str17, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID  not found.\".\". not found.\".");
    }

    @Test
    public void test3657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3657");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList7 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList8 = rentalSystem0.getVehicles();
        java.lang.Class<?> wildcardClass9 = rentalSystem0.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertNotNull(vehicleList7);
        org.junit.Assert.assertNotNull(vehicleList8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test3658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3658");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID  not found.\".", "hi!");
        int int10 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str12 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID  not found. not found.");
        java.lang.String str14 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.");
        java.util.List<org.example.Customer> customerList15 = rentalSystem0.getCustomers();
        java.lang.String str17 = rentalSystem0.searchVehicle("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\".\".");
        int int18 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Vehicle> vehicleList19 = rentalSystem0.getVehicles();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str12, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\"." + "'", str14, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".");
        org.junit.Assert.assertNotNull(customerList15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\".\".\"." + "'", str17, "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\".\".\".");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(vehicleList19);
    }

    @Test
    public void test3659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3659");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.returnVehicle("Vehicle with ID  not found.");
        java.lang.String str12 = rentalSystem0.rentVehicle("Vehicle with ID hi! not found.", "Vehicle with ID Vehicle with ID  not found. not found.", (int) (byte) 10);
        java.lang.String str14 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        java.util.List<org.example.Vehicle> vehicleList15 = rentalSystem0.getVehicles();
        java.lang.String str19 = rentalSystem0.rentVehicle("", "Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.", (int) (byte) 100);
        java.lang.String str21 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\". not found.");
        java.util.List<org.example.Customer> customerList22 = rentalSystem0.getCustomers();
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\". not found. not found. not found.", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\". not found. not found. not found. not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found.\". not found. not found.", (double) (short) 0);
        java.lang.String str29 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\". not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID  not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID  not found. not found.");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID Vehicle with ID hi! not found. not found." + "'", str12, "Vehicle with ID Vehicle with ID hi! not found. not found.");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found." + "'", str14, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList15);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Vehicle with ID  not found." + "'", str19, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\". not found. not found." + "'", str21, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\". not found. not found.");
        org.junit.Assert.assertNotNull(customerList22);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\". not found. not found. not found." + "'", str29, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\". not found. not found. not found.");
    }

    @Test
    public void test3660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3660");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.lang.String str5 = rentalSystem0.returnVehicle("Vehicle with ID  not found.");
        java.lang.String str7 = rentalSystem0.searchVehicle("Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.");
        java.lang.String str9 = rentalSystem0.searchVehicle("hi!");
        java.lang.String str11 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found.");
        java.lang.String str15 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found.\". not found.", (int) '4');
        java.lang.String str17 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found. not found. not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID Vehicle with ID  not found. not found." + "'", str5, "Vehicle with ID Vehicle with ID  not found. not found.");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\"." + "'", str7, "No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "No vehicles match the keyword \"hi!\"." + "'", str9, "No vehicles match the keyword \"hi!\".");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found." + "'", str11, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found.");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found. not found." + "'", str15, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found. not found. not found. not found.\"." + "'", str17, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found. not found. not found. not found.\".");
    }

    @Test
    public void test3661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3661");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("hi!");
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("Vehicle with ID hi! not found.", "Vehicle with ID Vehicle with ID  not found. not found.");
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found. not found.", "Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.\".", (double) 0.0f);
        int int13 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.\". not found.", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\".\". not found.", (double) 100);
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\". not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found.\". not found. not found. not found.\". not found.", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found.\".\". not found.\". not found. not found. not found.", (double) (byte) 1);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID hi! not found." + "'", str3, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
    }

    @Test
    public void test3662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3662");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.lang.String str5 = rentalSystem0.returnVehicle("Vehicle with ID  not found.");
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList7 = rentalSystem0.getCustomers();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID Vehicle with ID  not found. not found." + "'", str5, "Vehicle with ID Vehicle with ID  not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertNotNull(customerList7);
    }

    @Test
    public void test3663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3663");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList5 = rentalSystem0.getVehicles();
        java.lang.String str9 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".", "No vehicles match the keyword \"Vehicle with ID  not found.\".", (int) ' ');
        java.lang.String str13 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID  not found. not found.", "", (int) (byte) -1);
        int int14 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.", "Vehicle with ID hi! not found.");
        rentalSystem0.addCustomer("Vehicle with ID No vehicles match the keyword \"hi!\". not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\". not found.");
        java.util.List<org.example.Customer> customerList21 = rentalSystem0.getCustomers();
        java.lang.String str23 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found. not found. not found.\".");
        java.util.List<org.example.Vehicle> vehicleList24 = rentalSystem0.getVehicles();
        java.lang.String str26 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\". not found.\". not found. not found.\". not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertNotNull(vehicleList5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found." + "'", str9, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str13, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(customerList21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found. not found. not found.\". not found." + "'", str23, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found. not found. not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\". not found.\". not found. not found.\". not found.\". not found. not found." + "'", str26, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\". not found.\". not found. not found.\". not found.\". not found. not found.");
    }

    @Test
    public void test3664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3664");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("");
        int int4 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Vehicle> vehicleList5 = rentalSystem0.getVehicles();
        java.lang.String str7 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found.");
        java.util.List<org.example.Vehicle> vehicleList8 = rentalSystem0.getVehicles();
        java.lang.String str10 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\".");
        java.lang.String str12 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found.\". not found.\".");
        java.lang.String str14 = rentalSystem0.searchVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found. not found. not found.\".\".");
        java.lang.String str16 = rentalSystem0.returnVehicle("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\".\".\".\".\".\".\".");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID  not found." + "'", str3, "Vehicle with ID  not found.");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(vehicleList5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found." + "'", str7, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\".\"." + "'", str10, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\".\".");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found.\". not found.\".\"." + "'", str12, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found.\". not found.\".\".");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found. not found. not found.\".\".\"." + "'", str14, "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found. not found. not found.\".\".\".");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\".\".\".\".\".\".\". not found." + "'", str16, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\".\".\".\".\".\".\". not found.");
    }

    @Test
    public void test3665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3665");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        int int7 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList8 = rentalSystem0.getCustomers();
        java.lang.String str10 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found.");
        java.util.List<org.example.Customer> customerList11 = rentalSystem0.getCustomers();
        rentalSystem0.addVehicle("ID: Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found. not found., Model: No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\"., Type: Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found., Daily Rate: $32.0, Status: Available\n", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found. not found. not found.\".\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.\". not found.", 0.0d);
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found.\". not found. not found.\". not found.", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\".\".\". not found. not found. not found.\".\". not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\". not found. not found. not found. not found.\".", (double) (short) 1);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(customerList8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found.\"." + "'", str10, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found.\".");
        org.junit.Assert.assertNotNull(customerList11);
    }

    @Test
    public void test3666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3666");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID  not found. not found.", "No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        int int5 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID hi! not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".", "Vehicle with ID Vehicle with ID hi! not found. not found.", (double) 100.0f);
        java.util.List<org.example.Customer> customerList11 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\".", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\".\". not found.\".");
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found.\".\". not found. not found. not found.", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found.\". not found. not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\". not found.\". not found. not found.\".", 100.0d);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(customerList11);
    }

    @Test
    public void test3667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3667");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("hi!");
        java.lang.String str5 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\".", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".\".");
        java.util.List<org.example.Customer> customerList9 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList10 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\". not found. not found. not found. not found.\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found. not found.\".");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID hi! not found." + "'", str3, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found." + "'", str5, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.");
        org.junit.Assert.assertNotNull(customerList9);
        org.junit.Assert.assertNotNull(customerList10);
    }

    @Test
    public void test3668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3668");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("hi!");
        java.lang.String str5 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\".", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".\".");
        java.lang.String str12 = rentalSystem0.rentVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\".\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\".", 1);
        java.lang.String str14 = rentalSystem0.returnVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\".\".");
        int int15 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str17 = rentalSystem0.searchVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found. not found. not found. not found.\". not found.\".\".");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID hi! not found." + "'", str3, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found." + "'", str5, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\".\". not found." + "'", str12, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\".\". not found.");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\".\". not found." + "'", str14, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\".\". not found.");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found. not found. not found. not found.\". not found.\".\".\"." + "'", str17, "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found. not found. not found. not found.\". not found.\".\".\".");
    }

    @Test
    public void test3669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3669");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID  not found.", 100);
        java.lang.String str12 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID  not found.\".", "Vehicle with ID Vehicle with ID hi! not found. not found.", (int) (short) -1);
        java.lang.String str14 = rentalSystem0.searchVehicle("hi!");
        java.util.List<org.example.Vehicle> vehicleList15 = rentalSystem0.getVehicles();
        java.lang.String str17 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID hi! not found. not found.");
        int int18 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\".\".\". not found. not found. not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\". not found.\".\".");
        int int22 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Vehicle> vehicleList23 = rentalSystem0.getVehicles();
        rentalSystem0.addVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\". not found. not found. not found.\".\".", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".\".", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found. not found.\".\". not found.\".\".", (double) 0L);
        java.lang.String str30 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\". not found. not found. not found. not found.\".");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found." + "'", str12, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "No vehicles match the keyword \"hi!\"." + "'", str14, "No vehicles match the keyword \"hi!\".");
        org.junit.Assert.assertNotNull(vehicleList15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\"." + "'", str17, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\".");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(vehicleList23);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\". not found. not found. not found. not found.\". not found." + "'", str30, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\". not found. not found. not found. not found.\". not found.");
    }

    @Test
    public void test3670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3670");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID  not found. not found.", "No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        java.lang.String str8 = rentalSystem0.rentVehicle("hi!", "No vehicles match the keyword \"Vehicle with ID  not found.\".", 100);
        java.lang.String str10 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID hi! not found. not found.");
        java.lang.String str12 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.");
        java.lang.String str14 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\".\".", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found. not found.");
        int int18 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str20 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found. not found. not found. not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID hi! not found." + "'", str8, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found." + "'", str10, "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found." + "'", str12, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.\"." + "'", str14, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.\".");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found. not found. not found. not found. not found.\"." + "'", str20, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found. not found. not found. not found. not found.\".");
    }

    @Test
    public void test3671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3671");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.", "hi!", (int) (short) 100);
        java.lang.String str10 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".");
        java.util.List<org.example.Customer> customerList11 = rentalSystem0.getCustomers();
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found. not found.\". not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found.\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\". not found.", (double) (short) 100);
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID  not found.\".", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\". not found. not found. not found.");
        java.util.List<org.example.Customer> customerList20 = rentalSystem0.getCustomers();
        java.lang.String str22 = rentalSystem0.searchVehicle("");
        java.util.List<org.example.Customer> customerList23 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList24 = rentalSystem0.getCustomers();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\"." + "'", str10, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\".");
        org.junit.Assert.assertNotNull(customerList11);
        org.junit.Assert.assertNotNull(customerList20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "ID: Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found. not found.\". not found. not found., Model: No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found.\"., Type: Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\". not found., Daily Rate: $100.0, Status: Available\n" + "'", str22, "ID: Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found. not found.\". not found. not found., Model: No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found.\"., Type: Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\". not found., Daily Rate: $100.0, Status: Available\n");
        org.junit.Assert.assertNotNull(customerList23);
        org.junit.Assert.assertNotNull(customerList24);
    }

    @Test
    public void test3672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3672");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.searchVehicle("Vehicle with ID  not found.");
        rentalSystem0.addVehicle("hi!", "Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID hi! not found.", (double) 0);
        rentalSystem0.addCustomer("Vehicle with ID hi! not found.", "hi!");
        java.lang.String str18 = rentalSystem0.returnVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".");
        java.lang.String str20 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found.");
        java.lang.String str24 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found. not found. not found.", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.\".", (int) '4');
        java.lang.String str28 = rentalSystem0.rentVehicle("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found.\".\".\".", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID  not found.\".\".", (int) (byte) 10);
        java.util.List<org.example.Vehicle> vehicleList29 = rentalSystem0.getVehicles();
        java.lang.String str31 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\".\".\". not found. not found.");
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\". not found. not found. not found.", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\".\". not found.\".");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "No vehicles match the keyword \"Vehicle with ID  not found.\"." + "'", str8, "No vehicles match the keyword \"Vehicle with ID  not found.\".");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found." + "'", str18, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found.\"." + "'", str20, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found.\".");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found. not found. not found. not found." + "'", str24, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found. not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found.\".\".\". not found." + "'", str28, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found.\".\".\". not found.");
        org.junit.Assert.assertNotNull(vehicleList29);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\".\".\". not found. not found. not found." + "'", str31, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\".\".\". not found. not found. not found.");
    }

    @Test
    public void test3673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3673");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID  not found.\".", "hi!");
        int int10 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str12 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID  not found. not found.");
        java.lang.String str16 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.", (int) 'a');
        java.lang.String str18 = rentalSystem0.searchVehicle("Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.");
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.\". not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found. not found.\".", (double) ' ');
        int int24 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str26 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\".\".\". not found. not found.\". not found.");
        java.lang.String str28 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\".\". not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str12, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found." + "'", str16, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\"." + "'", str18, "No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\".\".\". not found. not found.\". not found. not found." + "'", str26, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\".\".\". not found. not found.\". not found. not found.");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\".\". not found. not found.\"." + "'", str28, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\".\". not found. not found.\".");
    }

    @Test
    public void test3674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3674");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList7 = rentalSystem0.getVehicles();
        java.lang.String str11 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID hi! not found.\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.", (int) (byte) 100);
        java.lang.String str13 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".");
        java.lang.String str17 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".", (int) (byte) -1);
        java.util.List<org.example.Vehicle> vehicleList18 = rentalSystem0.getVehicles();
        java.lang.String str20 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\". not found.");
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found. not found.", "hi!", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\". not found.", 0.0d);
        java.util.List<org.example.Vehicle> vehicleList26 = rentalSystem0.getVehicles();
        java.lang.String str30 = rentalSystem0.rentVehicle("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.\". not found.\".\".\".\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found. not found.", 0);
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\".\". not found. not found. not found. not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found. not found. not found.\". not found.", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.\". not found. not found. not found. not found.", 0.0d);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertNotNull(vehicleList7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found." + "'", str11, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\"." + "'", str13, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\".");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found." + "'", str17, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\". not found. not found." + "'", str20, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\". not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList26);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.\". not found.\".\".\".\". not found." + "'", str30, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.\". not found.\".\".\".\". not found.");
    }

    @Test
    public void test3675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3675");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID  not found. not found.", "No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        java.lang.String str8 = rentalSystem0.rentVehicle("hi!", "No vehicles match the keyword \"Vehicle with ID  not found.\".", 100);
        int int9 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str11 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found.");
        java.util.List<org.example.Vehicle> vehicleList12 = rentalSystem0.getVehicles();
        java.lang.String str14 = rentalSystem0.returnVehicle("");
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found. not found. not found.", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found.");
        int int18 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str20 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\".");
        java.util.List<org.example.Vehicle> vehicleList21 = rentalSystem0.getVehicles();
        java.lang.String str25 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.\".", "Vehicle with ID ID: Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found. not found.\". not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\". not found., Type: No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\"., Daily Rate: $10.0, Status: Available\n not found.", 0);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID hi! not found." + "'", str8, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found.\"." + "'", str11, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found.\".");
        org.junit.Assert.assertNotNull(vehicleList12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID  not found." + "'", str14, "Vehicle with ID  not found.");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found." + "'", str20, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList21);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.\". not found." + "'", str25, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.\". not found.");
    }

    @Test
    public void test3676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3676");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        int int2 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addCustomer("No vehicles match the keyword \"\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.");
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found.\".");
        java.lang.String str10 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found. not found.");
        rentalSystem0.addCustomer("Vehicle is already available.", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found. not found.");
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found. not found. not found.", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found.");
        java.lang.String str20 = rentalSystem0.rentVehicle("", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID  not found.\".\".\". not found.\". not found. not found.", (int) ' ');
        java.lang.String str24 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\". not found. not found. not found.\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found. not found. not found.\". not found.", 0);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found.\". not found." + "'", str8, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found. not found.\"." + "'", str10, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found. not found.\".");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Vehicle with ID  not found." + "'", str20, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\". not found. not found. not found.\". not found." + "'", str24, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\". not found. not found. not found.\". not found.");
    }

    @Test
    public void test3677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3677");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.returnVehicle("");
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".", "No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".");
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".\".", "ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n");
        java.lang.String str16 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.\".\". not found.");
        java.util.List<org.example.Customer> customerList17 = rentalSystem0.getCustomers();
        int int18 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.\". not found. not found. not found. not found. not found.\". not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found.\".\". not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found. not found. not found. not found. not found.\".", 100.0d);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID  not found." + "'", str8, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.\".\". not found.\"." + "'", str16, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.\".\". not found.\".");
        org.junit.Assert.assertNotNull(customerList17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
    }

    @Test
    public void test3678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3678");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID  not found.\".", "hi!");
        int int10 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str12 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID  not found. not found.");
        java.lang.String str16 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.", (int) 'a');
        java.lang.String str20 = rentalSystem0.rentVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found.", (int) (byte) -1);
        int int21 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found.\".\".\".\".", "Vehicle with ID ID: Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found., Model: ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n, Type: Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found., Daily Rate: $100.0, Status: Available\n not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str12, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found." + "'", str16, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found." + "'", str20, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found.");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
    }

    @Test
    public void test3679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3679");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        int int7 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addCustomer("hi!", "Vehicle with ID Vehicle with ID  not found. not found.");
        java.lang.String str12 = rentalSystem0.searchVehicle("No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".");
        java.lang.String str14 = rentalSystem0.searchVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".\".");
        java.util.List<org.example.Vehicle> vehicleList15 = rentalSystem0.getVehicles();
        int int16 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\". not found.\".\".\". not found.", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found. not found. not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\". not found. not found.", (double) 0.0f);
        java.util.List<org.example.Vehicle> vehicleList22 = rentalSystem0.getVehicles();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\"." + "'", str12, "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\".");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".\".\"." + "'", str14, "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".\".\".");
        org.junit.Assert.assertNotNull(vehicleList15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(vehicleList22);
    }

    @Test
    public void test3680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3680");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.", "hi!", (int) (short) 100);
        java.lang.String str10 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".");
        java.lang.String str14 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\". not found. not found. not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\". not found.", (-1));
        java.lang.String str16 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found. not found.\". not found. not found. not found.");
        java.lang.String str20 = rentalSystem0.rentVehicle("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found. not found. not found. not found.\".\".\".", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\". not found.\". not found. not found. not found.", 0);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\"." + "'", str10, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\".");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\". not found. not found. not found. not found." + "'", str14, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\". not found. not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found. not found.\". not found. not found. not found.\"." + "'", str16, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found. not found.\". not found. not found. not found.\".");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found. not found. not found. not found.\".\".\". not found." + "'", str20, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found. not found. not found. not found.\".\".\". not found.");
    }

    @Test
    public void test3681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3681");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("");
        int int4 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Vehicle> vehicleList5 = rentalSystem0.getVehicles();
        java.lang.String str7 = rentalSystem0.searchVehicle("hi!");
        java.lang.String str11 = rentalSystem0.rentVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found.", "", (int) (byte) 0);
        java.lang.String str13 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.");
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\". not found. not found.", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found. not found. not found. not found.");
        java.lang.String str20 = rentalSystem0.rentVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found.\". not found.\".\".\". not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\". not found. not found. not found.\".", (int) 'a');
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\". not found. not found. not found. not found.\".", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.\". not found. not found. not found. not found. not found. not found.");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID  not found." + "'", str3, "Vehicle with ID  not found.");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(vehicleList5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "No vehicles match the keyword \"hi!\"." + "'", str7, "No vehicles match the keyword \"hi!\".");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found." + "'", str11, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found.");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.\"." + "'", str13, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.\".");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found.\". not found.\".\".\". not found. not found." + "'", str20, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found.\". not found.\".\".\". not found. not found.");
    }

    @Test
    public void test3682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3682");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID  not found.", 100);
        java.lang.String str12 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID  not found.\".", "Vehicle with ID Vehicle with ID hi! not found. not found.", (int) (short) -1);
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.", "ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n", "Vehicle with ID Vehicle with ID hi! not found. not found.", 100.0d);
        // The following exception was thrown during execution in test generation
        try {
            rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\".\". not found.", "", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found.\". not found. not found.\".\".\".", (double) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Model cannot be null or empty");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found." + "'", str12, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.");
    }

    @Test
    public void test3683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3683");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.lang.String str5 = rentalSystem0.returnVehicle("Vehicle with ID  not found.");
        java.lang.String str7 = rentalSystem0.searchVehicle("Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.");
        java.lang.String str9 = rentalSystem0.searchVehicle("hi!");
        java.lang.String str13 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found. not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\". not found. not found.", (int) '#');
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\". not found.\". not found. not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\". not found.\". not found.");
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found. not found.\".\".", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\".\".\".");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID Vehicle with ID  not found. not found." + "'", str5, "Vehicle with ID Vehicle with ID  not found. not found.");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\"." + "'", str7, "No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "No vehicles match the keyword \"hi!\"." + "'", str9, "No vehicles match the keyword \"hi!\".");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found. not found. not found." + "'", str13, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found. not found. not found.");
    }

    @Test
    public void test3684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3684");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("");
        rentalSystem0.addVehicle("Vehicle with ID  not found.", "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.", "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.", (double) (short) 0);
        java.util.List<org.example.Vehicle> vehicleList9 = rentalSystem0.getVehicles();
        int int10 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str12 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\".\". not found. not found. not found. not found.");
        rentalSystem0.addCustomer("No vehicles match the keyword \"hi!\".", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\". not found.\".\". not found.");
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found.\".\". not found.", "Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found., Model: Vehicle with ID Vehicle with ID hi! not found. not found., Type: No vehicles match the keyword \"hi!\"., Daily Rate: $1.0, Status: Available\nID: Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.\". not found., Model: No vehicles match the keyword \"\"., Type: No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found.\"., Daily Rate: $100.0, Status: Available\n not found. not found. not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found.\". not found.\". not found. not found.", (double) ' ');
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID  not found." + "'", str3, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\".\". not found. not found. not found. not found.\"." + "'", str12, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\".\". not found. not found. not found. not found.\".");
    }

    @Test
    public void test3685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3685");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID  not found. not found.", "No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        java.lang.String str8 = rentalSystem0.rentVehicle("hi!", "No vehicles match the keyword \"Vehicle with ID  not found.\".", 100);
        java.lang.String str10 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID hi! not found. not found.");
        rentalSystem0.addVehicle("ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.", "No vehicles match the keyword \"\".", (double) (byte) 10);
        java.lang.String str17 = rentalSystem0.returnVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".");
        java.util.List<org.example.Customer> customerList18 = rentalSystem0.getCustomers();
        java.lang.String str20 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found. not found.");
        java.lang.String str22 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found. not found.");
        rentalSystem0.addCustomer("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\". not found.\".\".");
        int int26 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str28 = rentalSystem0.searchVehicle("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found. not found.\".\".\".\".");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID hi! not found." + "'", str8, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found." + "'", str10, "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found." + "'", str17, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.");
        org.junit.Assert.assertNotNull(customerList18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found. not found.\"." + "'", str20, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found. not found.\".");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found. not found. not found." + "'", str22, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found. not found. not found.");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found. not found.\".\".\".\".\"." + "'", str28, "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found. not found.\".\".\".\".\".");
    }

    @Test
    public void test3686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3686");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID  not found.\".", "hi!");
        int int10 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str12 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID  not found. not found.");
        java.lang.String str16 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.", (int) 'a');
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found. not found. not found.\". not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found. not found. not found.\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found. not found. not found. not found.\".", (double) (byte) 0);
        java.lang.String str23 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found. not found. not found.\". not found.");
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.\". not found. not found. not found. not found. not found.\".", "Vehicle with ID hi! not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found. not found.\". not found. not found.\". not found.", (double) 100);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str12, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found." + "'", str16, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found. not found. not found.\". not found.\"." + "'", str23, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found. not found. not found.\". not found.\".");
    }

    @Test
    public void test3687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3687");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\". not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.", 1.0d);
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\". not found.\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\". not found.", (double) 'a');
        java.lang.String str18 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found. not found.");
        rentalSystem0.addCustomer("Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\". not found.\". not found.", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found. not found. not found.\". not found.\".");
        java.util.List<org.example.Vehicle> vehicleList22 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList23 = rentalSystem0.getCustomers();
        java.lang.Class<?> wildcardClass24 = customerList23.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found. not found. not found." + "'", str18, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found. not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList22);
        org.junit.Assert.assertNotNull(customerList23);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test3688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3688");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList5 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\".");
        java.util.List<org.example.Customer> customerList10 = rentalSystem0.getCustomers();
        java.lang.String str12 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found.\".");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertNotNull(vehicleList5);
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertNotNull(customerList10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found.\". not found." + "'", str12, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found.\". not found.");
    }

    @Test
    public void test3689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3689");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.lang.String str5 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.");
        int int6 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str8 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\".");
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\". not found.\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\". not found. not found.", 0.0d);
        java.lang.String str15 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.");
        java.lang.String str17 = rentalSystem0.returnVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\".\".");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\"." + "'", str5, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\".");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found." + "'", str8, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found. not found." + "'", str15, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\".\". not found." + "'", str17, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\".\". not found.");
    }

    @Test
    public void test3690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3690");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.searchVehicle("Vehicle with ID  not found.");
        rentalSystem0.addVehicle("hi!", "Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID hi! not found.", (double) 0);
        rentalSystem0.addCustomer("Vehicle with ID hi! not found.", "hi!");
        java.lang.String str18 = rentalSystem0.returnVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".");
        java.lang.String str20 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found.");
        int int21 = rentalSystem0.getAvailableVehicleCount();
        int int22 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str24 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found. not found. not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "No vehicles match the keyword \"Vehicle with ID  not found.\"." + "'", str8, "No vehicles match the keyword \"Vehicle with ID  not found.\".");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found." + "'", str18, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found.\"." + "'", str20, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found.\".");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found. not found. not found. not found. not found." + "'", str24, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found. not found. not found. not found. not found.");
    }

    @Test
    public void test3691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3691");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        rentalSystem0.addCustomer("hi!", "Vehicle with ID Vehicle with ID  not found. not found.");
        java.util.List<org.example.Customer> customerList9 = rentalSystem0.getCustomers();
        int int10 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Vehicle> vehicleList11 = rentalSystem0.getVehicles();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(vehicleList11);
    }

    @Test
    public void test3692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3692");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList5 = rentalSystem0.getVehicles();
        java.lang.String str9 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".", "No vehicles match the keyword \"Vehicle with ID  not found.\".", (int) ' ');
        java.lang.String str13 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID  not found. not found.", "", (int) (byte) -1);
        java.lang.String str15 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\".");
        java.util.List<org.example.Vehicle> vehicleList16 = rentalSystem0.getVehicles();
        java.lang.String str20 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\".\". not found. not found.\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\". not found. not found.", 10);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertNotNull(vehicleList5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found." + "'", str9, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str13, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found." + "'", str15, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList16);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\".\". not found. not found.\". not found." + "'", str20, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\".\". not found. not found.\". not found.");
    }

    @Test
    public void test3693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3693");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.searchVehicle("Vehicle with ID  not found.");
        int int9 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList10 = rentalSystem0.getCustomers();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "No vehicles match the keyword \"Vehicle with ID  not found.\"." + "'", str8, "No vehicles match the keyword \"Vehicle with ID  not found.\".");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(customerList10);
    }

    @Test
    public void test3694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3694");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        rentalSystem0.addCustomer("hi!", "Vehicle with ID Vehicle with ID  not found. not found.");
        java.util.List<org.example.Vehicle> vehicleList9 = rentalSystem0.getVehicles();
        java.lang.String str13 = rentalSystem0.rentVehicle("hi!", "No vehicles match the keyword \"Vehicle with ID  not found.\".", (int) '4');
        java.util.List<org.example.Customer> customerList14 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList15 = rentalSystem0.getVehicles();
        int int16 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.", (double) 100L);
        rentalSystem0.addCustomer("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.", "Vehicle with ID No vehicles match the keyword \"hi!\". not found.");
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found. not found. not found.\".\". not found. not found.", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\". not found. not found. not found.");
        java.lang.String str31 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\". not found. not found.", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\". not found. not found. not found. not found.", (int) (short) 1);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList9);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID hi! not found." + "'", str13, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertNotNull(customerList14);
        org.junit.Assert.assertNotNull(vehicleList15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\". not found. not found. not found." + "'", str31, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\". not found. not found. not found.");
    }

    @Test
    public void test3695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3695");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID  not found. not found.", "No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        java.util.List<org.example.Vehicle> vehicleList5 = rentalSystem0.getVehicles();
        java.lang.String str7 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.");
        java.util.List<org.example.Customer> customerList8 = rentalSystem0.getCustomers();
        java.lang.String str10 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\".\". not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found." + "'", str7, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.");
        org.junit.Assert.assertNotNull(customerList8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\".\". not found. not found.\"." + "'", str10, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\".\". not found. not found.\".");
    }

    @Test
    public void test3696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3696");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.searchVehicle("Vehicle with ID  not found.");
        int int9 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str11 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        java.lang.String str15 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.\". not found. not found.\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.", (int) (short) 1);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "No vehicles match the keyword \"Vehicle with ID  not found.\"." + "'", str8, "No vehicles match the keyword \"Vehicle with ID  not found.\".");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID hi! not found.\".\"." + "'", str11, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID hi! not found.\".\".");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.\". not found. not found.\". not found." + "'", str15, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.\". not found. not found.\". not found.");
    }

    @Test
    public void test3697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3697");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        int int2 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        int int4 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addVehicle("Vehicle with ID  not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.", (double) (byte) 100);
        java.lang.String str11 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.\".");
        java.lang.String str15 = rentalSystem0.rentVehicle("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID  not found.\".\".\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found. not found.", (int) '#');
        int int16 = rentalSystem0.getAvailableVehicleCount();
        // The following exception was thrown during execution in test generation
        try {
            rentalSystem0.addVehicle("", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found. not found.\".\".\". not found.", "", (double) 1L);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Vehicle ID cannot be null or empty");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.\". not found." + "'", str11, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID  not found.\".\".\". not found." + "'", str15, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID  not found.\".\".\". not found.");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
    }

    @Test
    public void test3698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3698");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        java.lang.String str7 = rentalSystem0.searchVehicle("Vehicle with ID hi! not found.");
        java.util.List<org.example.Customer> customerList8 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList9 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\".\".", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found. not found. not found. not found.");
        // The following exception was thrown during execution in test generation
        try {
            rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found. not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\". not found.\". not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found.\". not found. not found.\".", (double) (-1L));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Daily rate cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "No vehicles match the keyword \"Vehicle with ID hi! not found.\"." + "'", str7, "No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        org.junit.Assert.assertNotNull(customerList8);
        org.junit.Assert.assertNotNull(vehicleList9);
    }

    @Test
    public void test3699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3699");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("");
        rentalSystem0.addVehicle("Vehicle with ID  not found.", "Vehicle with ID hi! not found.", "Vehicle with ID Vehicle with ID hi! not found. not found.", (double) '4');
        int int9 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\".", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.\".\".");
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\". not found.\". not found. not found.", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\".\". not found. not found. not found.", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found. not found. not found. not found. not found. not found.", 100.0d);
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.\". not found.", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\".\".\". not found. not found. not found.", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\". not found.\".", (double) 100);
        java.util.List<org.example.Customer> customerList23 = rentalSystem0.getCustomers();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID  not found." + "'", str3, "Vehicle with ID  not found.");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(customerList23);
    }

    @Test
    public void test3700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3700");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        int int2 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.lang.String str5 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\".");
        java.lang.String str9 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\". not found.\".", 0);
        int int10 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str14 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.\". not found. not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\". not found. not found.", (int) (short) 0);
        java.util.List<org.example.Customer> customerList15 = rentalSystem0.getCustomers();
        int int16 = rentalSystem0.getAvailableVehicleCount();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\". not found." + "'", str5, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\". not found." + "'", str9, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\". not found.");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.\". not found. not found. not found." + "'", str14, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.\". not found. not found. not found.");
        org.junit.Assert.assertNotNull(customerList15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
    }

    @Test
    public void test3701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3701");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("");
        rentalSystem0.addVehicle("Vehicle with ID  not found.", "Vehicle with ID hi! not found.", "Vehicle with ID Vehicle with ID hi! not found. not found.", (double) '4');
        rentalSystem0.addVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found.\".\".", "Vehicle with ID hi! not found.", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\". not found. not found. not found. not found.", (double) (short) 100);
        java.lang.String str17 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"\".\".\". not found.\". not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found. not found.\".", (int) (byte) 10);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID  not found." + "'", str3, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"\".\".\". not found.\". not found. not found. not found." + "'", str17, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"\".\".\". not found.\". not found. not found. not found.");
    }

    @Test
    public void test3702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3702");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList5 = rentalSystem0.getVehicles();
        java.lang.String str9 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".", "No vehicles match the keyword \"Vehicle with ID  not found.\".", (int) ' ');
        java.lang.String str13 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID  not found. not found.", "", (int) (byte) -1);
        int int14 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.", "Vehicle with ID hi! not found.");
        rentalSystem0.addCustomer("Vehicle with ID No vehicles match the keyword \"hi!\". not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\". not found.");
        java.lang.String str22 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.");
        java.lang.String str26 = rentalSystem0.rentVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\".\".\". not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found.\".", (int) ' ');
        java.util.List<org.example.Customer> customerList27 = rentalSystem0.getCustomers();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertNotNull(vehicleList5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found." + "'", str9, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str13, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found. not found." + "'", str22, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\".\".\". not found. not found." + "'", str26, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\".\".\". not found. not found.");
        org.junit.Assert.assertNotNull(customerList27);
    }

    @Test
    public void test3703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3703");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        int int7 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList8 = rentalSystem0.getCustomers();
        // The following exception was thrown during execution in test generation
        try {
            rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.\". not found.\".\". not found.\".\".", "");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Customer ID cannot be null or empty");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(customerList8);
    }

    @Test
    public void test3704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3704");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        int int5 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found. not found. not found.\". not found. not found.", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found. not found.");
        java.lang.String str10 = rentalSystem0.searchVehicle("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.\". not found.\".\".\".\".");
        int int11 = rentalSystem0.getAvailableVehicleCount();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.\". not found.\".\".\".\".\"." + "'", str10, "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.\". not found.\".\".\".\".\".");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
    }

    @Test
    public void test3705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3705");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList4 = rentalSystem0.getVehicles();
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.", "ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.", (double) (byte) 100);
        rentalSystem0.addVehicle("Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.", "Vehicle with ID hi! not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found.", 10.0d);
        java.lang.String str16 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.");
        java.lang.String str20 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.", (int) (byte) 10);
        // The following exception was thrown during execution in test generation
        try {
            rentalSystem0.addVehicle("", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\".\".", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found. not found. not found.\".\".", (double) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Vehicle ID cannot be null or empty");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(vehicleList4);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\"." + "'", str16, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found." + "'", str20, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found.");
    }

    @Test
    public void test3706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3706");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID  not found.\".", "hi!");
        rentalSystem0.addCustomer("No vehicles match the keyword \"hi!\".", "hi!");
        java.lang.String str14 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        int int15 = rentalSystem0.getAvailableVehicleCount();
        int int16 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList17 = rentalSystem0.getCustomers();
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\". not found.\". not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.\". not found. not found.\".", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found. not found. not found. not found.", (double) 3);
        int int23 = rentalSystem0.getAvailableVehicleCount();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found." + "'", str14, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(customerList17);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
    }

    @Test
    public void test3707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3707");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n", "Vehicle with ID No vehicles match the keyword \"hi!\". not found.", (int) (short) 0);
        int int6 = rentalSystem0.getAvailableVehicleCount();
        int int7 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found.\".\". not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.\". not found. not found. not found. not found. not found.\". not found.", (double) (short) 100);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found." + "'", str5, "Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
    }

    @Test
    public void test3708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3708");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.returnVehicle("");
        int int9 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str13 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found.", (int) (short) 0);
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\". not found.", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found. not found. not found.", "Vehicle with ID No vehicles match the keyword \"\". not found.", (double) ' ');
        rentalSystem0.addCustomer("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\". not found.", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\". not found. not found. not found.");
        java.util.List<org.example.Customer> customerList22 = rentalSystem0.getCustomers();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID  not found." + "'", str8, "Vehicle with ID  not found.");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str13, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertNotNull(customerList22);
    }

    @Test
    public void test3709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3709");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.returnVehicle("");
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".", "No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".");
        java.lang.String str15 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\".", "No vehicles match the keyword \"Vehicle with ID  not found.\".", (int) (short) 100);
        java.lang.String str19 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found.", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".\".\".", 0);
        java.lang.String str23 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found. not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".\".", (int) (byte) 100);
        java.util.List<org.example.Customer> customerList24 = rentalSystem0.getCustomers();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID  not found." + "'", str8, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found." + "'", str15, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found. not found." + "'", str19, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found. not found. not found." + "'", str23, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found. not found. not found.");
        org.junit.Assert.assertNotNull(customerList24);
    }

    @Test
    public void test3710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3710");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("hi!");
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        int int5 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str9 = rentalSystem0.rentVehicle("No vehicles match the keyword \"\".", "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.", (int) (short) 10);
        java.lang.String str11 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found. not found. not found.");
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\". not found. not found. not found.\". not found. not found. not found.", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\". not found. not found. not found. not found. not found.");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID hi! not found." + "'", str3, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Vehicle with ID No vehicles match the keyword \"\". not found." + "'", str9, "Vehicle with ID No vehicles match the keyword \"\". not found.");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found. not found. not found. not found." + "'", str11, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found. not found. not found. not found.");
    }

    @Test
    public void test3711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3711");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("");
        rentalSystem0.addVehicle("Vehicle with ID  not found.", "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.", "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.", (double) (short) 0);
        int int9 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str13 = rentalSystem0.rentVehicle("", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\".", (int) (short) -1);
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\". not found. not found.\". not found. not found. not found.", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found.\". not found. not found. not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\". not found. not found. not found.\". not found. not found.", (double) 3);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID  not found." + "'", str3, "Vehicle with ID  not found.");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID  not found." + "'", str13, "Vehicle with ID  not found.");
    }

    @Test
    public void test3712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3712");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\". not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.", 1.0d);
        int int12 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str14 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\". not found.\". not found. not found. not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\". not found.\". not found. not found. not found. not found.\"." + "'", str14, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\". not found.\". not found. not found. not found. not found.\".");
    }

    @Test
    public void test3713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3713");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        int int2 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.lang.String str5 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\".");
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\".\". not found. not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\". not found." + "'", str5, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\".\". not found. not found. not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\".\". not found. not found. not found. not found.");
    }

    @Test
    public void test3714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3714");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.searchVehicle("Vehicle with ID  not found.");
        rentalSystem0.addVehicle("hi!", "Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID hi! not found.", (double) 0);
        rentalSystem0.addCustomer("Vehicle with ID hi! not found.", "hi!");
        java.lang.String str18 = rentalSystem0.returnVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".");
        java.util.List<org.example.Customer> customerList19 = rentalSystem0.getCustomers();
        // The following exception was thrown during execution in test generation
        try {
            rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found.\".\". not found. not found.", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.\".\". not found. not found.", (double) (-1.0f));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Daily rate cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "No vehicles match the keyword \"Vehicle with ID  not found.\"." + "'", str8, "No vehicles match the keyword \"Vehicle with ID  not found.\".");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found." + "'", str18, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.");
        org.junit.Assert.assertNotNull(customerList19);
    }

    @Test
    public void test3715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3715");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        int int2 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        int int4 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".", "No vehicles match the keyword \"Vehicle with ID  not found.\".");
        int int8 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str10 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\".");
        java.util.List<org.example.Vehicle> vehicleList11 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList12 = rentalSystem0.getVehicles();
        java.lang.String str16 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\". not found. not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\".\".", 10);
        java.util.List<org.example.Customer> customerList17 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList18 = rentalSystem0.getCustomers();
        // The following exception was thrown during execution in test generation
        try {
            rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\". not found.\". not found.", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\". not found. not found. not found.\". not found.\".", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n\".\".\".", (double) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Daily rate cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found." + "'", str10, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList11);
        org.junit.Assert.assertNotNull(vehicleList12);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\". not found. not found. not found." + "'", str16, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\". not found. not found. not found.");
        org.junit.Assert.assertNotNull(customerList17);
        org.junit.Assert.assertNotNull(customerList18);
    }

    @Test
    public void test3716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3716");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.", "Vehicle with ID Vehicle with ID hi! not found. not found.", "No vehicles match the keyword \"hi!\".", (double) 1L);
        java.lang.String str13 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"hi!\". not found.");
        java.lang.String str17 = rentalSystem0.rentVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found.", (int) '4');
        java.util.List<org.example.Vehicle> vehicleList18 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList19 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\".\".\".");
        int int23 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str25 = rentalSystem0.searchVehicle("");
        java.lang.String str29 = rentalSystem0.rentVehicle("ID: Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found. not found., Model: No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\"., Type: Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found., Daily Rate: $32.0, Status: Available\n", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\". not found. not found.", (int) (byte) 1);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\"." + "'", str13, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\".");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found." + "'", str17, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.");
        org.junit.Assert.assertNotNull(vehicleList18);
        org.junit.Assert.assertNotNull(vehicleList19);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "ID: Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found., Model: Vehicle with ID Vehicle with ID hi! not found. not found., Type: No vehicles match the keyword \"hi!\"., Daily Rate: $1.0, Status: Available\n" + "'", str25, "ID: Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found., Model: Vehicle with ID Vehicle with ID hi! not found. not found., Type: No vehicles match the keyword \"hi!\"., Daily Rate: $1.0, Status: Available\n");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Vehicle with ID ID: Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found. not found., Model: No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\"., Type: Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found., Daily Rate: $32.0, Status: Available\n not found." + "'", str29, "Vehicle with ID ID: Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found. not found., Model: No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\"., Type: Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found., Daily Rate: $32.0, Status: Available\n not found.");
    }

    @Test
    public void test3717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3717");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.returnVehicle("Vehicle with ID  not found.");
        int int9 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str13 = rentalSystem0.rentVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".", "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.", (int) (short) 10);
        java.lang.String str17 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".", (int) (byte) 100);
        java.util.List<org.example.Customer> customerList18 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found. not found. not found.");
        int int22 = rentalSystem0.getAvailableVehicleCount();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID  not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID  not found. not found.");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found." + "'", str13, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found." + "'", str17, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.");
        org.junit.Assert.assertNotNull(customerList18);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
    }

    @Test
    public void test3718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3718");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID  not found. not found.", "No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        int int5 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID hi! not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".", "Vehicle with ID Vehicle with ID hi! not found. not found.", (double) 100.0f);
        java.lang.String str14 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found. not found.", "", 0);
        java.util.List<org.example.Customer> customerList15 = rentalSystem0.getCustomers();
        java.lang.String str17 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found. not found.\".\". not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found. not found. not found." + "'", str14, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found. not found. not found.");
        org.junit.Assert.assertNotNull(customerList15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found. not found.\".\". not found.\"." + "'", str17, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found. not found.\".\". not found.\".");
    }

    @Test
    public void test3719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3719");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("hi!");
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        int int5 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str9 = rentalSystem0.rentVehicle("No vehicles match the keyword \"\".", "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.", (int) (short) 10);
        java.lang.String str13 = rentalSystem0.rentVehicle("No vehicles match the keyword \"\".", "", (-1));
        int int14 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str16 = rentalSystem0.returnVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\".");
        java.util.List<org.example.Vehicle> vehicleList17 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList18 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList19 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList20 = rentalSystem0.getVehicles();
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found. not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found. not found. not found.\".", (double) (short) 1);
        java.util.List<org.example.Vehicle> vehicleList26 = rentalSystem0.getVehicles();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID hi! not found." + "'", str3, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Vehicle with ID No vehicles match the keyword \"\". not found." + "'", str9, "Vehicle with ID No vehicles match the keyword \"\". not found.");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID No vehicles match the keyword \"\". not found." + "'", str13, "Vehicle with ID No vehicles match the keyword \"\". not found.");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found." + "'", str16, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found.");
        org.junit.Assert.assertNotNull(vehicleList17);
        org.junit.Assert.assertNotNull(customerList18);
        org.junit.Assert.assertNotNull(customerList19);
        org.junit.Assert.assertNotNull(vehicleList20);
        org.junit.Assert.assertNotNull(vehicleList26);
    }

    @Test
    public void test3720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3720");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("");
        java.util.List<org.example.Vehicle> vehicleList4 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.rentVehicle("", "Vehicle with ID hi! not found.", (int) (short) 100);
        java.util.List<org.example.Vehicle> vehicleList9 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList10 = rentalSystem0.getCustomers();
        rentalSystem0.addVehicle("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\".\".", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\". not found. not found.", (double) '#');
        java.util.List<org.example.Vehicle> vehicleList16 = rentalSystem0.getVehicles();
        java.lang.String str20 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\".\". not found. not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found. not found. not found.\". not found.", (int) (short) 100);
        java.lang.String str24 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found.\".", (int) (byte) 0);
        int int25 = rentalSystem0.getAvailableVehicleCount();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID  not found." + "'", str3, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID  not found." + "'", str8, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList9);
        org.junit.Assert.assertNotNull(customerList10);
        org.junit.Assert.assertNotNull(vehicleList16);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\".\". not found. not found. not found." + "'", str20, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\".\". not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found. not found. not found." + "'", str24, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found. not found. not found.");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
    }

    @Test
    public void test3721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3721");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.", "hi!", (int) (short) 100);
        java.util.List<org.example.Vehicle> vehicleList9 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found.", "No vehicles match the keyword \"\".");
        java.lang.String str14 = rentalSystem0.searchVehicle("");
        rentalSystem0.addCustomer("Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\". not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\". not found. not found.");
        rentalSystem0.addVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\". not found.\".\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found. not found.\". not found. not found.\".", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".", (double) '4');
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList9);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "No vehicles match the keyword \"\"." + "'", str14, "No vehicles match the keyword \"\".");
    }

    @Test
    public void test3722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3722");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.returnVehicle("Vehicle with ID  not found.");
        java.lang.String str10 = rentalSystem0.returnVehicle("hi!");
        java.lang.String str12 = rentalSystem0.searchVehicle("");
        rentalSystem0.addCustomer("Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".");
        java.lang.String str17 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".");
        java.lang.String str19 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.");
        java.lang.String str21 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\". not found.\". not found. not found.\". not found.\".");
        java.lang.String str23 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID  not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID  not found. not found.");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID hi! not found." + "'", str10, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "No vehicles match the keyword \"\"." + "'", str12, "No vehicles match the keyword \"\".");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\". not found." + "'", str17, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\"." + "'", str19, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\". not found.\". not found. not found.\". not found.\".\"." + "'", str21, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\". not found.\". not found. not found.\". not found.\".\".");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID hi! not found.\".\"." + "'", str23, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID hi! not found.\".\".");
    }

    @Test
    public void test3723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3723");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.returnVehicle("Vehicle with ID  not found.");
        java.lang.String str12 = rentalSystem0.rentVehicle("Vehicle with ID hi! not found.", "Vehicle with ID Vehicle with ID  not found. not found.", (int) (byte) 10);
        java.lang.String str14 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        java.util.List<org.example.Vehicle> vehicleList15 = rentalSystem0.getVehicles();
        java.lang.String str19 = rentalSystem0.rentVehicle("", "Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.", (int) (byte) 100);
        java.lang.String str21 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\". not found.");
        int int22 = rentalSystem0.getAvailableVehicleCount();
        int int23 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList24 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".\". not found. not found.", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\". not found.\". not found.\".\".\".");
        int int28 = rentalSystem0.getAvailableVehicleCount();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID  not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID  not found. not found.");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID Vehicle with ID hi! not found. not found." + "'", str12, "Vehicle with ID Vehicle with ID hi! not found. not found.");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found." + "'", str14, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList15);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Vehicle with ID  not found." + "'", str19, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\". not found. not found." + "'", str21, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\". not found. not found.");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(customerList24);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
    }

    @Test
    public void test3724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3724");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("hi!");
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("Vehicle with ID hi! not found.", "Vehicle with ID Vehicle with ID  not found. not found.");
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found. not found.", "Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.\".", (double) 0.0f);
        int int13 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str15 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.");
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found. not found.", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\".\".");
        java.lang.String str20 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.");
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\".\".\". not found. not found. not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found.\". not found.");
        // The following exception was thrown during execution in test generation
        try {
            rentalSystem0.addVehicle("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.\".\".\".\".", "", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found. not found.\". not found. not found.\".\".", (double) (-1L));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Model cannot be null or empty");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID hi! not found." + "'", str3, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.\"." + "'", str15, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.\".");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found." + "'", str20, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.");
    }

    @Test
    public void test3725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3725");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList4 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID  not found. not found.", "hi!");
        int int8 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str10 = rentalSystem0.searchVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\".\".");
        int int11 = rentalSystem0.getAvailableVehicleCount();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(vehicleList4);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\".\".\"." + "'", str10, "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\".\".\".");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
    }

    @Test
    public void test3726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3726");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.lang.String str10 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found.", (int) (short) -1);
        java.util.List<org.example.Vehicle> vehicleList11 = rentalSystem0.getVehicles();
        java.lang.String str15 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\".", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.\".\". not found.\".", (int) (short) 0);
        java.util.List<org.example.Customer> customerList16 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList17 = rentalSystem0.getCustomers();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found." + "'", str10, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList11);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\". not found." + "'", str15, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\". not found.");
        org.junit.Assert.assertNotNull(customerList16);
        org.junit.Assert.assertNotNull(customerList17);
    }

    @Test
    public void test3727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3727");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.", "Vehicle with ID Vehicle with ID hi! not found. not found.", "No vehicles match the keyword \"hi!\".", (double) 1L);
        java.lang.String str13 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"hi!\". not found.");
        java.lang.String str17 = rentalSystem0.rentVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found.", (int) '4');
        int int18 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Vehicle> vehicleList19 = rentalSystem0.getVehicles();
        int int20 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Vehicle> vehicleList21 = rentalSystem0.getVehicles();
        java.lang.String str25 = rentalSystem0.rentVehicle("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\".\".\".\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\". not found. not found. not found.\".", (int) (short) 10);
        java.util.List<org.example.Customer> customerList26 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList27 = rentalSystem0.getVehicles();
        java.lang.String str29 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\". not found.\". not found. not found.\". not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\"." + "'", str13, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\".");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found." + "'", str17, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(vehicleList19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(vehicleList21);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\".\".\".\". not found." + "'", str25, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\".\".\".\". not found.");
        org.junit.Assert.assertNotNull(customerList26);
        org.junit.Assert.assertNotNull(vehicleList27);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\". not found.\". not found. not found.\". not found.\". not found. not found." + "'", str29, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\". not found.\". not found. not found.\". not found.\". not found. not found.");
    }

    @Test
    public void test3728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3728");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("hi!");
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        int int5 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        int int7 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str9 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\". not found. not found. not found.");
        java.lang.String str13 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found.", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\". not found.", 10);
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.", "Vehicle with ID No vehicles match the keyword \"\". not found.", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\". not found.\". not found. not found.\". not found.\".", (double) 1);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID hi! not found." + "'", str3, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\". not found. not found. not found. not found." + "'", str9, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\". not found. not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found." + "'", str13, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.");
    }

    @Test
    public void test3729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3729");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        rentalSystem0.addCustomer("hi!", "Vehicle with ID Vehicle with ID  not found. not found.");
        java.util.List<org.example.Vehicle> vehicleList9 = rentalSystem0.getVehicles();
        java.lang.String str13 = rentalSystem0.rentVehicle("hi!", "No vehicles match the keyword \"Vehicle with ID  not found.\".", (int) '4');
        java.util.List<org.example.Customer> customerList14 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList15 = rentalSystem0.getVehicles();
        int int16 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.", (double) 100L);
        java.lang.String str23 = rentalSystem0.searchVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\".");
        java.lang.String str25 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\". not found.\".");
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\".\". not found. not found.\".", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\". not found.\". not found.\".\".", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\". not found.\". not found.\".\". not found.", (double) (short) 1);
        java.lang.Class<?> wildcardClass31 = rentalSystem0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList9);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID hi! not found." + "'", str13, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertNotNull(customerList14);
        org.junit.Assert.assertNotNull(vehicleList15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\".\"." + "'", str23, "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\".\".");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\". not found.\". not found." + "'", str25, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\". not found.\". not found.");
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test3730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3730");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        int int7 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\".\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found.");
        java.lang.String str12 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\". not found.");
        java.lang.String str14 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found.");
        int int15 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Vehicle> vehicleList16 = rentalSystem0.getVehicles();
        java.lang.Class<?> wildcardClass17 = vehicleList16.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\". not found. not found." + "'", str12, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\". not found. not found.");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found.\"." + "'", str14, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found.\".");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(vehicleList16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test3731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3731");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList7 = rentalSystem0.getVehicles();
        rentalSystem0.addVehicle("Vehicle with ID  not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".", 1.0d);
        java.lang.String str14 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.");
        java.util.List<org.example.Vehicle> vehicleList15 = rentalSystem0.getVehicles();
        java.lang.String str19 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found. not found. not found.\". not found. not found.", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found. not found. not found.", 0);
        java.util.List<org.example.Customer> customerList20 = rentalSystem0.getCustomers();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertNotNull(vehicleList7);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n" + "'", str14, "ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n");
        org.junit.Assert.assertNotNull(vehicleList15);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found. not found. not found.\". not found. not found. not found." + "'", str19, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found. not found. not found.\". not found. not found. not found.");
        org.junit.Assert.assertNotNull(customerList20);
    }

    @Test
    public void test3732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3732");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID  not found.", 100);
        java.lang.String str12 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID  not found.\".", "Vehicle with ID Vehicle with ID hi! not found. not found.", (int) (short) -1);
        java.lang.String str14 = rentalSystem0.searchVehicle("hi!");
        java.util.List<org.example.Vehicle> vehicleList15 = rentalSystem0.getVehicles();
        java.lang.String str17 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID hi! not found. not found.");
        int int18 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str20 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found. not found. not found.\".");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found." + "'", str12, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "No vehicles match the keyword \"hi!\"." + "'", str14, "No vehicles match the keyword \"hi!\".");
        org.junit.Assert.assertNotNull(vehicleList15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\"." + "'", str17, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\".");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found. not found. not found.\". not found." + "'", str20, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found. not found. not found.\". not found.");
    }

    @Test
    public void test3733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3733");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.returnVehicle("");
        java.util.List<org.example.Customer> customerList9 = rentalSystem0.getCustomers();
        java.lang.String str11 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.");
        java.util.List<org.example.Vehicle> vehicleList12 = rentalSystem0.getVehicles();
        int int13 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addCustomer("Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found.\". not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\". not found. not found.\".");
        rentalSystem0.addVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.\". not found.\".\".", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.\". not found. not found. not found. not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\".\". not found. not found.", (double) 10L);
        java.lang.String str23 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\". not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID  not found." + "'", str8, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList9);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found." + "'", str11, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\". not found. not found.\"." + "'", str23, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\". not found. not found.\".");
    }

    @Test
    public void test3734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3734");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("");
        java.util.List<org.example.Vehicle> vehicleList4 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.rentVehicle("", "Vehicle with ID hi! not found.", (int) (short) 100);
        java.util.List<org.example.Vehicle> vehicleList9 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList10 = rentalSystem0.getCustomers();
        rentalSystem0.addVehicle("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\".\".", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\". not found. not found.", (double) '#');
        java.util.List<org.example.Vehicle> vehicleList16 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found. not found. not found.\". not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\".\". not found.\". not found.");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID  not found." + "'", str3, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID  not found." + "'", str8, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList9);
        org.junit.Assert.assertNotNull(customerList10);
        org.junit.Assert.assertNotNull(vehicleList16);
    }

    @Test
    public void test3735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3735");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        int int7 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addCustomer("hi!", "Vehicle with ID Vehicle with ID  not found. not found.");
        java.lang.String str12 = rentalSystem0.searchVehicle("No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".");
        java.lang.String str14 = rentalSystem0.searchVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".\".");
        java.util.List<org.example.Vehicle> vehicleList15 = rentalSystem0.getVehicles();
        int int16 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str18 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.\". not found. not found. not found. not found.\".");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\"." + "'", str12, "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\".");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".\".\"." + "'", str14, "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".\".\".");
        org.junit.Assert.assertNotNull(vehicleList15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.\". not found. not found. not found. not found.\".\"." + "'", str18, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.\". not found. not found. not found. not found.\".\".");
    }

    @Test
    public void test3736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3736");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.returnVehicle("");
        int int9 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList10 = rentalSystem0.getCustomers();
        int int11 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\".\". not found.\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found. not found.\". not found. not found.", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found. not found.\". not found. not found.\".\". not found.\".", (double) (byte) 10);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID  not found." + "'", str8, "Vehicle with ID  not found.");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(customerList10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
    }

    @Test
    public void test3737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3737");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n", "Vehicle with ID No vehicles match the keyword \"hi!\". not found.", (int) (short) 0);
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\".", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\". not found.\".");
        java.lang.String str12 = rentalSystem0.rentVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\". not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.\". not found. not found.", 0);
        java.lang.Class<?> wildcardClass13 = rentalSystem0.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found." + "'", str5, "Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\". not found. not found." + "'", str12, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\". not found. not found.");
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test3738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3738");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.rentVehicle("", "No vehicles match the keyword \"Vehicle with ID hi! not found.\".", (int) (byte) 100);
        java.lang.String str10 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.");
        int int11 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found. not found.\".");
        java.util.List<org.example.Customer> customerList15 = rentalSystem0.getCustomers();
        java.lang.String str17 = rentalSystem0.searchVehicle("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\".");
        java.lang.String str19 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found. not found.\". not found. not found.\". not found.\". not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID  not found." + "'", str8, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found." + "'", str10, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(customerList15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\".\"." + "'", str17, "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\".\".");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found. not found.\". not found. not found.\". not found.\". not found. not found. not found." + "'", str19, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found. not found.\". not found. not found.\". not found.\". not found. not found. not found.");
    }

    @Test
    public void test3739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3739");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.returnVehicle("");
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".", "No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".");
        java.lang.String str13 = rentalSystem0.searchVehicle("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\".\".\".\".\".");
        java.util.List<org.example.Customer> customerList14 = rentalSystem0.getCustomers();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID  not found." + "'", str8, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\".\".\".\".\".\"." + "'", str13, "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\".\".\".\".\".\".");
        org.junit.Assert.assertNotNull(customerList14);
    }

    @Test
    public void test3740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3740");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("hi!");
        java.lang.String str5 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\".", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".\".");
        java.util.List<org.example.Customer> customerList9 = rentalSystem0.getCustomers();
        java.lang.String str11 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.");
        int int12 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Vehicle> vehicleList13 = rentalSystem0.getVehicles();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID hi! not found." + "'", str3, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found." + "'", str5, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.");
        org.junit.Assert.assertNotNull(customerList9);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found. not found." + "'", str11, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found. not found.");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(vehicleList13);
    }

    @Test
    public void test3741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3741");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList7 = rentalSystem0.getVehicles();
        java.lang.String str11 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID hi! not found.\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.", (int) (byte) 100);
        int int12 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Vehicle> vehicleList13 = rentalSystem0.getVehicles();
        int int14 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str18 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found. not found. not found. not found.\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\".", 0);
        int int19 = rentalSystem0.getAvailableVehicleCount();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertNotNull(vehicleList7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found." + "'", str11, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(vehicleList13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found. not found. not found. not found.\". not found." + "'", str18, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found. not found. not found. not found.\". not found.");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
    }

    @Test
    public void test3742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3742");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID  not found.\".", "hi!");
        int int10 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str12 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID  not found. not found.");
        java.lang.String str16 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.", (int) 'a');
        java.lang.String str18 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found.");
        java.util.List<org.example.Vehicle> vehicleList19 = rentalSystem0.getVehicles();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str12, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found." + "'", str16, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found." + "'", str18, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList19);
    }

    @Test
    public void test3743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3743");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.searchVehicle("Vehicle with ID  not found.");
        rentalSystem0.addVehicle("hi!", "Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID hi! not found.", (double) 0);
        rentalSystem0.addCustomer("Vehicle with ID hi! not found.", "hi!");
        java.lang.String str18 = rentalSystem0.returnVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".");
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID hi! not found.\".", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.", (double) (byte) 10);
        java.lang.String str25 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".");
        java.lang.Class<?> wildcardClass26 = rentalSystem0.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "No vehicles match the keyword \"Vehicle with ID  not found.\"." + "'", str8, "No vehicles match the keyword \"Vehicle with ID  not found.\".");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found." + "'", str18, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found." + "'", str25, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found.");
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test3744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3744");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID  not found.", 100);
        java.lang.String str12 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID  not found.\".", "Vehicle with ID Vehicle with ID hi! not found. not found.", (int) (short) -1);
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.");
        java.util.List<org.example.Customer> customerList16 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList17 = rentalSystem0.getCustomers();
        // The following exception was thrown during execution in test generation
        try {
            rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\".\".\". not found. not found.\". not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found. not found.\". not found.\".\". not found. not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.\".\".", (double) (-1.0f));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Daily rate cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found." + "'", str12, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.");
        org.junit.Assert.assertNotNull(customerList16);
        org.junit.Assert.assertNotNull(customerList17);
    }

    @Test
    public void test3745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3745");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("");
        rentalSystem0.addVehicle("Vehicle with ID  not found.", "Vehicle with ID hi! not found.", "Vehicle with ID Vehicle with ID hi! not found. not found.", (double) '4');
        java.util.List<org.example.Customer> customerList9 = rentalSystem0.getCustomers();
        int int10 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str14 = rentalSystem0.rentVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\". not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.", 0);
        java.lang.Class<?> wildcardClass15 = rentalSystem0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID  not found." + "'", str3, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\". not found. not found." + "'", str14, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\". not found. not found.");
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test3746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3746");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID  not found. not found.", "No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        java.lang.String str8 = rentalSystem0.rentVehicle("hi!", "No vehicles match the keyword \"Vehicle with ID  not found.\".", 100);
        java.lang.String str10 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID hi! not found. not found.");
        rentalSystem0.addVehicle("ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.", "No vehicles match the keyword \"\".", (double) (byte) 10);
        java.lang.String str17 = rentalSystem0.returnVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".");
        rentalSystem0.addVehicle("Vehicle with ID ID: Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found., Model: Vehicle with ID Vehicle with ID hi! not found. not found., Type: No vehicles match the keyword \"hi!\"., Daily Rate: $1.0, Status: Available\nID: Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.\". not found., Model: No vehicles match the keyword \"\"., Type: No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found.\"., Daily Rate: $100.0, Status: Available\n not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found.\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found. not found. not found.\".", (double) (byte) 1);
        java.util.List<org.example.Vehicle> vehicleList23 = rentalSystem0.getVehicles();
        java.lang.String str27 = rentalSystem0.rentVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"\".\". not found. not found.\".\".", "", 0);
        // The following exception was thrown during execution in test generation
        try {
            rentalSystem0.addCustomer("", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found. not found.\".\". not found.\".");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Name cannot be null or empty");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID hi! not found." + "'", str8, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found." + "'", str10, "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found." + "'", str17, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.");
        org.junit.Assert.assertNotNull(vehicleList23);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"\".\". not found. not found.\".\". not found." + "'", str27, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"\".\". not found. not found.\".\". not found.");
    }

    @Test
    public void test3747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3747");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID  not found.\".", "hi!");
        int int10 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str12 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID  not found. not found.");
        java.lang.String str16 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.", (int) 'a');
        java.lang.String str18 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found.");
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\". not found. not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found. not found. not found.\".", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found. not found. not found.", (double) 10);
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found. not found.\".\".\". not found.", "Vehicle with ID ID: Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found., Model: ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n, Type: Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found., Daily Rate: $100.0, Status: Available\n not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found. not found. not found.\". not found. not found.", (double) (short) 100);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str12, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found." + "'", str16, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found." + "'", str18, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found.");
    }

    @Test
    public void test3748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3748");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.lang.String str4 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found.");
        java.util.List<org.example.Vehicle> vehicleList5 = rentalSystem0.getVehicles();
        int int6 = rentalSystem0.getAvailableVehicleCount();
        // The following exception was thrown during execution in test generation
        try {
            rentalSystem0.addCustomer("", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.\".\".\".");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Name cannot be null or empty");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found." + "'", str4, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    }

    @Test
    public void test3749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3749");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("hi!");
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        int int5 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str9 = rentalSystem0.rentVehicle("No vehicles match the keyword \"\".", "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.", (int) (short) 10);
        java.lang.String str11 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".");
        java.lang.String str13 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".");
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\". not found. not found. not found. not found.\".", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found. not found. not found.\". not found.\".", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\". not found. not found. not found.", (double) 'a');
        rentalSystem0.addVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\". not found.\". not found.\".\".", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\". not found. not found. not found. not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found. not found. not found. not found.\".\".", (double) (short) 1);
        java.util.List<org.example.Vehicle> vehicleList24 = rentalSystem0.getVehicles();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID hi! not found." + "'", str3, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Vehicle with ID No vehicles match the keyword \"\". not found." + "'", str9, "Vehicle with ID No vehicles match the keyword \"\". not found.");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\". not found." + "'", str11, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\". not found." + "'", str13, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList24);
    }

    @Test
    public void test3750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3750");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList7 = rentalSystem0.getVehicles();
        java.lang.String str11 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID hi! not found.\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.", (int) (byte) 100);
        java.lang.String str13 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".");
        java.lang.String str17 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".", (int) (byte) -1);
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\". not found.", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found.", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found.\".", 0.0d);
        java.util.List<org.example.Customer> customerList23 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList24 = rentalSystem0.getVehicles();
        java.lang.Class<?> wildcardClass25 = rentalSystem0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertNotNull(vehicleList7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found." + "'", str11, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\"." + "'", str13, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\".");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found." + "'", str17, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.");
        org.junit.Assert.assertNotNull(customerList23);
        org.junit.Assert.assertNotNull(vehicleList24);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test3751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3751");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        int int7 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Vehicle> vehicleList8 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList9 = rentalSystem0.getVehicles();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(vehicleList8);
        org.junit.Assert.assertNotNull(vehicleList9);
    }

    @Test
    public void test3752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3752");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        int int2 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Vehicle> vehicleList3 = rentalSystem0.getVehicles();
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.\".", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found.\".", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".\". not found.", (double) (short) 0);
        java.lang.String str10 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\". not found.\".");
        int int11 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(vehicleList3);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\". not found.\".\"." + "'", str10, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\". not found.\".\".");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
    }

    @Test
    public void test3753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3753");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.lang.String str7 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".");
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID  not found.");
        int int11 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found.", "Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.");
        java.lang.String str18 = rentalSystem0.rentVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found. not found.\". not found.", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\".\".", (int) (short) 0);
        java.util.List<org.example.Customer> customerList19 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\". not found.\".", "Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found.");
        java.lang.String str26 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\".\". not found. not found. not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\".\".\". not found. not found.", (int) (short) 0);
        java.lang.String str30 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found. not found. not found.", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found.\".\". not found.", 0);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\"." + "'", str7, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found. not found.\". not found. not found." + "'", str18, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found. not found.\". not found. not found.");
        org.junit.Assert.assertNotNull(customerList19);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\".\". not found. not found. not found. not found." + "'", str26, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\".\". not found. not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found. not found. not found. not found." + "'", str30, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found. not found. not found. not found.");
    }

    @Test
    public void test3754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3754");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID  not found.", 100);
        java.lang.String str12 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID  not found.\".", "Vehicle with ID Vehicle with ID hi! not found. not found.", (int) (short) -1);
        java.lang.String str14 = rentalSystem0.searchVehicle("hi!");
        java.util.List<org.example.Vehicle> vehicleList15 = rentalSystem0.getVehicles();
        java.lang.String str17 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID hi! not found. not found.");
        java.lang.String str19 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.");
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\". not found.\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found. not found.\". not found.");
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\". not found.\".", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\".\".");
        java.util.List<org.example.Customer> customerList26 = rentalSystem0.getCustomers();
        java.lang.String str30 = rentalSystem0.rentVehicle("", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\". not found. not found. not found.\". not found. not found.", 1);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found." + "'", str12, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "No vehicles match the keyword \"hi!\"." + "'", str14, "No vehicles match the keyword \"hi!\".");
        org.junit.Assert.assertNotNull(vehicleList15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\"." + "'", str17, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\".");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.\"." + "'", str19, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.\".");
        org.junit.Assert.assertNotNull(customerList26);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Vehicle with ID  not found." + "'", str30, "Vehicle with ID  not found.");
    }

    @Test
    public void test3755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3755");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.returnVehicle("");
        java.util.List<org.example.Customer> customerList9 = rentalSystem0.getCustomers();
        java.lang.String str11 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.");
        java.util.List<org.example.Customer> customerList12 = rentalSystem0.getCustomers();
        java.lang.Class<?> wildcardClass13 = customerList12.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID  not found." + "'", str8, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList9);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found." + "'", str11, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found.");
        org.junit.Assert.assertNotNull(customerList12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test3756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3756");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList5 = rentalSystem0.getVehicles();
        java.lang.String str9 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".", "No vehicles match the keyword \"Vehicle with ID  not found.\".", (int) ' ');
        java.lang.String str13 = rentalSystem0.rentVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.", 0);
        java.util.List<org.example.Vehicle> vehicleList14 = rentalSystem0.getVehicles();
        java.lang.String str16 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\". not found. not found. not found. not found. not found.");
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found., Model: Vehicle with ID Vehicle with ID hi! not found. not found., Type: No vehicles match the keyword \"hi!\"., Daily Rate: $1.0, Status: Available\nID: Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.\". not found., Model: No vehicles match the keyword \"\"., Type: No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found.\"., Daily Rate: $100.0, Status: Available\n not found. not found.\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.\". not found.\".\". not found. not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found. not found. not found.\".\". not found.\".\".", (double) (byte) 0);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertNotNull(vehicleList5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found." + "'", str9, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found." + "'", str13, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\". not found. not found. not found. not found. not found. not found." + "'", str16, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\". not found. not found. not found. not found. not found. not found.");
    }

    @Test
    public void test3757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3757");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList3 = rentalSystem0.getVehicles();
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\". not found. not found.", "Vehicle with ID No vehicles match the keyword \"\". not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found. not found.", (double) 1L);
        java.lang.String str10 = rentalSystem0.searchVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found.\". not found.\".\".");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(vehicleList3);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found.\". not found.\".\".\"." + "'", str10, "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found.\". not found.\".\".\".");
    }

    @Test
    public void test3758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3758");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("");
        int int4 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str8 = rentalSystem0.rentVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found.", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found. not found.", (int) '#');
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\". not found. not found.");
        java.util.List<org.example.Customer> customerList12 = rentalSystem0.getCustomers();
        int int13 = rentalSystem0.getAvailableVehicleCount();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID  not found." + "'", str3, "Vehicle with ID  not found.");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found.");
        org.junit.Assert.assertNotNull(customerList12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
    }

    @Test
    public void test3759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3759");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("hi!");
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        int int5 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList7 = rentalSystem0.getCustomers();
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\". not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found. not found.\".\".", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.\". not found.\".\".\".\". not found.", (double) 10);
        java.lang.String str14 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\". not found. not found. not found. not found.\". not found.\". not found.\".");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID hi! not found." + "'", str3, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertNotNull(customerList7);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\". not found. not found. not found. not found.\". not found.\". not found.\".\"." + "'", str14, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\". not found. not found. not found. not found.\". not found.\". not found.\".\".");
    }

    @Test
    public void test3760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3760");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("hi!");
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        int int5 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str9 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found. not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.", 10);
        java.lang.String str13 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\". not found.\".", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\".\".\".", (int) 'a');
        java.lang.String str15 = rentalSystem0.searchVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\". not found. not found. not found. not found.\".\".");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID hi! not found." + "'", str3, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found. not found. not found." + "'", str9, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\". not found.\". not found." + "'", str13, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\". not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\". not found. not found. not found. not found.\".\".\"." + "'", str15, "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\". not found. not found. not found. not found.\".\".\".");
    }

    @Test
    public void test3761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3761");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.searchVehicle("Vehicle with ID  not found.");
        rentalSystem0.addCustomer("No vehicles match the keyword \"hi!\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found.");
        java.util.List<org.example.Vehicle> vehicleList12 = rentalSystem0.getVehicles();
        java.lang.Class<?> wildcardClass13 = vehicleList12.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "No vehicles match the keyword \"Vehicle with ID  not found.\"." + "'", str8, "No vehicles match the keyword \"Vehicle with ID  not found.\".");
        org.junit.Assert.assertNotNull(vehicleList12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test3762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3762");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        rentalSystem0.addCustomer("hi!", "Vehicle with ID Vehicle with ID  not found. not found.");
        java.util.List<org.example.Vehicle> vehicleList9 = rentalSystem0.getVehicles();
        java.lang.String str13 = rentalSystem0.rentVehicle("hi!", "No vehicles match the keyword \"Vehicle with ID  not found.\".", (int) '4');
        java.util.List<org.example.Customer> customerList14 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList15 = rentalSystem0.getVehicles();
        java.lang.String str19 = rentalSystem0.rentVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found. not found. not found. not found.\". not found.", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found. not found. not found. not found.", 0);
        int int20 = rentalSystem0.getAvailableVehicleCount();
        int int21 = rentalSystem0.getAvailableVehicleCount();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList9);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID hi! not found." + "'", str13, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertNotNull(customerList14);
        org.junit.Assert.assertNotNull(vehicleList15);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found. not found. not found. not found.\". not found. not found." + "'", str19, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found. not found. not found. not found.\". not found. not found.");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
    }

    @Test
    public void test3763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3763");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.returnVehicle("Vehicle with ID  not found.");
        java.lang.String str10 = rentalSystem0.returnVehicle("hi!");
        java.lang.String str12 = rentalSystem0.searchVehicle("");
        java.lang.String str16 = rentalSystem0.rentVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found.", "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.", 0);
        java.lang.String str18 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".");
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found. not found.\".", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found. not found. not found.\". not found.\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found.\". not found.\". not found.", (double) (short) 100);
        java.lang.String str25 = rentalSystem0.returnVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\". not found. not found. not found. not found. not found.\".\".");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID  not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID  not found. not found.");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID hi! not found." + "'", str10, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "No vehicles match the keyword \"\"." + "'", str12, "No vehicles match the keyword \"\".");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found." + "'", str16, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found.");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\"." + "'", str18, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\".");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\". not found. not found. not found. not found. not found.\".\". not found." + "'", str25, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\". not found. not found. not found. not found. not found.\".\". not found.");
    }

    @Test
    public void test3764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3764");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("hi!");
        java.lang.String str5 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\".", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".\".");
        java.util.List<org.example.Customer> customerList9 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList10 = rentalSystem0.getCustomers();
        java.lang.String str12 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.\".\". not found.\".");
        java.lang.String str14 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\". not found.\". not found. not found.");
        java.lang.String str18 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\". not found.\".", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\".\".\". not found.", (int) (short) 10);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID hi! not found." + "'", str3, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found." + "'", str5, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.");
        org.junit.Assert.assertNotNull(customerList9);
        org.junit.Assert.assertNotNull(customerList10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.\".\". not found.\". not found." + "'", str12, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.\".\". not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\". not found.\". not found. not found.\"." + "'", str14, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\". not found.\". not found. not found.\".");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\". not found.\". not found." + "'", str18, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\". not found.\". not found.");
    }

    @Test
    public void test3765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3765");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.searchVehicle("Vehicle with ID  not found.");
        rentalSystem0.addVehicle("hi!", "Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID hi! not found.", (double) 0);
        rentalSystem0.addCustomer("Vehicle with ID hi! not found.", "hi!");
        java.lang.String str18 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.");
        java.util.List<org.example.Customer> customerList19 = rentalSystem0.getCustomers();
        java.lang.String str21 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found. not found. not found.\".");
        java.util.List<org.example.Vehicle> vehicleList22 = rentalSystem0.getVehicles();
        int int23 = rentalSystem0.getAvailableVehicleCount();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "No vehicles match the keyword \"Vehicle with ID  not found.\"." + "'", str8, "No vehicles match the keyword \"Vehicle with ID  not found.\".");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\"." + "'", str18, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\".");
        org.junit.Assert.assertNotNull(customerList19);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found. not found. not found.\". not found." + "'", str21, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found. not found. not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
    }

    @Test
    public void test3766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3766");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.", "hi!", (int) (short) 100);
        java.lang.String str10 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".");
        java.lang.String str14 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\". not found. not found. not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\". not found.", (-1));
        java.util.List<org.example.Customer> customerList15 = rentalSystem0.getCustomers();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\"." + "'", str10, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\".");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\". not found. not found. not found. not found." + "'", str14, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\". not found. not found. not found. not found.");
        org.junit.Assert.assertNotNull(customerList15);
    }

    @Test
    public void test3767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3767");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        int int7 = rentalSystem0.getAvailableVehicleCount();
        int int8 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList9 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList10 = rentalSystem0.getCustomers();
        java.lang.String str14 = rentalSystem0.rentVehicle("Vehicle with ID hi! not found.", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\". not found.", (int) '4');
        int int15 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\".\".", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.\". not found.\".");
        int int19 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str21 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\".\". not found.\".");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(customerList9);
        org.junit.Assert.assertNotNull(customerList10);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID Vehicle with ID hi! not found. not found." + "'", str14, "Vehicle with ID Vehicle with ID hi! not found. not found.");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\".\". not found.\".\"." + "'", str21, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\".\". not found.\".\".");
    }

    @Test
    public void test3768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3768");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.returnVehicle("Vehicle with ID  not found.");
        java.lang.String str10 = rentalSystem0.returnVehicle("hi!");
        java.lang.String str12 = rentalSystem0.searchVehicle("");
        rentalSystem0.addCustomer("Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".");
        java.util.List<org.example.Vehicle> vehicleList16 = rentalSystem0.getVehicles();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID  not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID  not found. not found.");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID hi! not found." + "'", str10, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "No vehicles match the keyword \"\"." + "'", str12, "No vehicles match the keyword \"\".");
        org.junit.Assert.assertNotNull(vehicleList16);
    }

    @Test
    public void test3769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3769");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID  not found.\".", "hi!");
        int int10 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList11 = rentalSystem0.getCustomers();
        java.lang.String str15 = rentalSystem0.rentVehicle("ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.", 100);
        java.util.List<org.example.Vehicle> vehicleList16 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\". not found. not found. not found.", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found. not found.");
        rentalSystem0.addVehicle("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.\". not found.\".\".\".\".", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found.\".\".\".", "Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.", (double) 1);
        java.lang.String str28 = rentalSystem0.rentVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\". not found. not found.\". not found.", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found. not found.\".\". not found.", 100);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(customerList11);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found." + "'", str15, "Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.");
        org.junit.Assert.assertNotNull(vehicleList16);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\". not found. not found.\". not found. not found." + "'", str28, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\". not found. not found.\". not found. not found.");
    }

    @Test
    public void test3770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3770");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.lang.String str4 = rentalSystem0.searchVehicle("hi!");
        java.util.List<org.example.Customer> customerList5 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found. not found.\".");
        java.lang.String str12 = rentalSystem0.rentVehicle("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\".\".", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\".\".", 0);
        java.util.List<org.example.Vehicle> vehicleList13 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\". not found. not found.\".", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found. not found.\". not found.\".\". not found.");
        rentalSystem0.addCustomer("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\".\".\". not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\".\".\". not found. not found.");
        int int20 = rentalSystem0.getAvailableVehicleCount();
        // The following exception was thrown during execution in test generation
        try {
            rentalSystem0.addCustomer("", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found. not found.\". not found. not found.");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Name cannot be null or empty");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "No vehicles match the keyword \"hi!\"." + "'", str4, "No vehicles match the keyword \"hi!\".");
        org.junit.Assert.assertNotNull(customerList5);
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found. not found.\".\"." + "'", str8, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found. not found.\".\".");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\".\". not found." + "'", str12, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\".\". not found.");
        org.junit.Assert.assertNotNull(vehicleList13);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
    }

    @Test
    public void test3771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3771");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.", "Vehicle with ID Vehicle with ID hi! not found. not found.", "No vehicles match the keyword \"hi!\".", (double) 1L);
        java.lang.String str13 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\". not found.");
        java.lang.String str15 = rentalSystem0.returnVehicle("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\".\".\".");
        java.lang.String str17 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\". not found. not found. not found.");
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.\". not found.\".\". not found. not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\". not found. not found.\".\". not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\". not found.\"." + "'", str13, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\". not found.\".");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\".\".\". not found." + "'", str15, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\".\".\". not found.");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\". not found. not found. not found. not found." + "'", str17, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\". not found. not found. not found. not found.");
    }

    @Test
    public void test3772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3772");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID  not found.\".", "hi!");
        int int10 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str12 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID  not found. not found.");
        java.lang.String str14 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.");
        java.util.List<org.example.Customer> customerList15 = rentalSystem0.getCustomers();
        java.lang.String str17 = rentalSystem0.searchVehicle("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\".\".");
        int int18 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\".\".", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\".\".");
        java.lang.String str23 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found. not found. not found.\".");
        java.lang.String str27 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found.\". not found. not found. not found. not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\".\".", (int) 'a');
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str12, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\"." + "'", str14, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".");
        org.junit.Assert.assertNotNull(customerList15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\".\".\"." + "'", str17, "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\".\".\".");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found. not found. not found.\".\"." + "'", str23, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found. not found. not found.\".\".");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found.\". not found. not found. not found. not found. not found." + "'", str27, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found.\". not found. not found. not found. not found. not found.");
    }

    @Test
    public void test3773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3773");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.returnVehicle("Vehicle with ID  not found.");
        int int9 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str13 = rentalSystem0.rentVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".", "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.", (int) (short) 10);
        java.lang.Class<?> wildcardClass14 = rentalSystem0.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID  not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID  not found. not found.");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found." + "'", str13, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.");
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test3774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3774");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.");
        rentalSystem0.addCustomer("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\".");
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\".", "No vehicles match the keyword \"Vehicle with ID hi! not found.\".", (double) (short) 100);
        java.util.List<org.example.Customer> customerList18 = rentalSystem0.getCustomers();
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".", "ID: No vehicles match the keyword \"Vehicle with ID  not found.\"., Model: No vehicles match the keyword \"Vehicle with ID  not found.\"., Type: Vehicle with ID  not found., Daily Rate: $10.0, Status: Available\n", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\". not found. not found.\".", (double) 100.0f);
        java.lang.String str25 = rentalSystem0.returnVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found. not found.\". not found. not found.\".\". not found.\".\".");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertNotNull(customerList18);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found. not found.\". not found. not found.\".\". not found.\".\". not found." + "'", str25, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found. not found.\". not found. not found.\".\". not found.\".\". not found.");
    }

    @Test
    public void test3775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3775");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("");
        int int4 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Vehicle> vehicleList5 = rentalSystem0.getVehicles();
        java.lang.String str7 = rentalSystem0.searchVehicle("hi!");
        java.util.List<org.example.Vehicle> vehicleList8 = rentalSystem0.getVehicles();
        java.lang.String str10 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.");
        java.lang.String str12 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\". not found.");
        java.util.List<org.example.Customer> customerList13 = rentalSystem0.getCustomers();
        int int14 = rentalSystem0.getAvailableVehicleCount();
        java.lang.Class<?> wildcardClass15 = rentalSystem0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID  not found." + "'", str3, "Vehicle with ID  not found.");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(vehicleList5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "No vehicles match the keyword \"hi!\"." + "'", str7, "No vehicles match the keyword \"hi!\".");
        org.junit.Assert.assertNotNull(vehicleList8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found." + "'", str10, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\". not found. not found." + "'", str12, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\". not found. not found.");
        org.junit.Assert.assertNotNull(customerList13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test3776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3776");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("");
        java.util.List<org.example.Vehicle> vehicleList4 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.rentVehicle("", "Vehicle with ID hi! not found.", (int) (short) 100);
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.", "No vehicles match the keyword \"Vehicle with ID  not found.\".", "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.", (double) 10);
        int int14 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Vehicle> vehicleList15 = rentalSystem0.getVehicles();
        java.lang.String str17 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found.");
        int int18 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Vehicle> vehicleList19 = rentalSystem0.getVehicles();
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found. not found.\". not found. not found.\".", "No vehicles match the keyword \"Vehicle is already available.\".", "Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found., Model: Vehicle with ID Vehicle with ID hi! not found. not found., Type: No vehicles match the keyword \"hi!\"., Daily Rate: $1.0, Status: Available\nID: Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.\". not found., Model: No vehicles match the keyword \"\"., Type: No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found.\"., Daily Rate: $100.0, Status: Available\n not found. not found. not found.", (double) (byte) 100);
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.\". not found. not found.\".\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\". not found. not found. not found.\". not found.");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID  not found." + "'", str3, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID  not found." + "'", str8, "Vehicle with ID  not found.");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(vehicleList15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found.\"." + "'", str17, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found.\".");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(vehicleList19);
    }

    @Test
    public void test3777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3777");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID  not found. not found.", "No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        java.lang.String str8 = rentalSystem0.rentVehicle("hi!", "No vehicles match the keyword \"Vehicle with ID  not found.\".", 100);
        int int9 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str11 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found.");
        java.util.List<org.example.Vehicle> vehicleList12 = rentalSystem0.getVehicles();
        java.lang.String str14 = rentalSystem0.returnVehicle("");
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found. not found. not found.", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found.");
        int int18 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str20 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\".");
        java.util.List<org.example.Vehicle> vehicleList21 = rentalSystem0.getVehicles();
        java.lang.String str23 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.");
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.\". not found. not found. not found. not found. not found. not found.\".", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".\".\".");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID hi! not found." + "'", str8, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found.\"." + "'", str11, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found.\".");
        org.junit.Assert.assertNotNull(vehicleList12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID  not found." + "'", str14, "Vehicle with ID  not found.");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found." + "'", str20, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found. not found." + "'", str23, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found. not found.");
    }

    @Test
    public void test3778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3778");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID  not found.\".", "hi!");
        int int10 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str12 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID  not found. not found.");
        int int13 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.", (double) 10);
        int int19 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str21 = rentalSystem0.searchVehicle("");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str12, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "ID: No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\"., Model: Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found., Type: Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found., Daily Rate: $10.0, Status: Available\n" + "'", str21, "ID: No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\"., Model: Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found., Type: Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found., Daily Rate: $10.0, Status: Available\n");
    }

    @Test
    public void test3779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3779");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.", "hi!", (int) (short) 100);
        java.lang.String str10 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".");
        java.lang.String str12 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.");
        java.util.List<org.example.Customer> customerList13 = rentalSystem0.getCustomers();
        java.lang.String str15 = rentalSystem0.returnVehicle("ID: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Model: No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\"., Type: No vehicles match the keyword \"Vehicle with ID hi! not found.\"., Daily Rate: $100.0, Status: Available\n");
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\". not found. not found. not found.\".", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.\". not found. not found. not found. not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\"." + "'", str10, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\".");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\"." + "'", str12, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\".");
        org.junit.Assert.assertNotNull(customerList13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Vehicle with ID ID: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Model: No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\"., Type: No vehicles match the keyword \"Vehicle with ID hi! not found.\"., Daily Rate: $100.0, Status: Available\n not found." + "'", str15, "Vehicle with ID ID: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Model: No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\"., Type: No vehicles match the keyword \"Vehicle with ID hi! not found.\"., Daily Rate: $100.0, Status: Available\n not found.");
    }

    @Test
    public void test3780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3780");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.searchVehicle("Vehicle with ID  not found.");
        rentalSystem0.addVehicle("hi!", "Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID hi! not found.", (double) 0);
        java.util.List<org.example.Vehicle> vehicleList14 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList15 = rentalSystem0.getCustomers();
        int int16 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.");
        java.lang.String str21 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\". not found.\". not found.\".\". not found. not found.");
        java.lang.String str23 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found. not found. not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "No vehicles match the keyword \"Vehicle with ID  not found.\"." + "'", str8, "No vehicles match the keyword \"Vehicle with ID  not found.\".");
        org.junit.Assert.assertNotNull(vehicleList14);
        org.junit.Assert.assertNotNull(customerList15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\". not found.\". not found.\".\". not found. not found.\"." + "'", str21, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\". not found.\". not found.\".\". not found. not found.\".");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found. not found. not found. not found.\"." + "'", str23, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found. not found. not found. not found.\".");
    }

    @Test
    public void test3781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3781");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.searchVehicle("Vehicle with ID  not found.");
        rentalSystem0.addVehicle("hi!", "Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID hi! not found.", (double) 0);
        rentalSystem0.addCustomer("ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\".");
        java.lang.String str18 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\".\". not found.");
        java.lang.String str22 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\". not found. not found. not found.", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"\".\". not found. not found. not found. not found.", 10);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "No vehicles match the keyword \"Vehicle with ID  not found.\"." + "'", str8, "No vehicles match the keyword \"Vehicle with ID  not found.\".");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\".\". not found. not found." + "'", str18, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\".\". not found. not found.");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\". not found. not found. not found. not found." + "'", str22, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\". not found. not found. not found. not found.");
    }

    @Test
    public void test3782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3782");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.lang.String str9 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.", (int) (byte) 1);
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID  not found. not found.", "No vehicles match the keyword \"\".", "Vehicle with ID  not found.", (double) 1L);
        java.lang.String str16 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\". not found.");
        java.lang.String str18 = rentalSystem0.returnVehicle("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\".");
        java.util.List<org.example.Vehicle> vehicleList19 = rentalSystem0.getVehicles();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found." + "'", str9, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\". not found.\"." + "'", str16, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\". not found.\".");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\". not found." + "'", str18, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\". not found.");
        org.junit.Assert.assertNotNull(vehicleList19);
    }

    @Test
    public void test3783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3783");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID  not found.\".", "hi!");
        rentalSystem0.addCustomer("No vehicles match the keyword \"hi!\".", "hi!");
        java.lang.String str14 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        java.util.List<org.example.Vehicle> vehicleList15 = rentalSystem0.getVehicles();
        java.lang.String str17 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.");
        int int18 = rentalSystem0.getAvailableVehicleCount();
        int int19 = rentalSystem0.getAvailableVehicleCount();
        int int20 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str22 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\". not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found." + "'", str14, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found." + "'", str17, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\". not found.\"." + "'", str22, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\". not found.\".");
    }

    @Test
    public void test3784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3784");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.rentVehicle("", "No vehicles match the keyword \"Vehicle with ID hi! not found.\".", (int) (byte) 100);
        java.lang.String str10 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.");
        int int11 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found. not found.\".");
        java.util.List<org.example.Customer> customerList15 = rentalSystem0.getCustomers();
        java.lang.String str17 = rentalSystem0.searchVehicle("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\".");
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID Vehicle is already available. not found. not found.", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\".\". not found.");
        rentalSystem0.addCustomer("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.\".\".\". not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found. not found.\".\". not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID  not found." + "'", str8, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found." + "'", str10, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(customerList15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\".\"." + "'", str17, "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\".\".");
    }

    @Test
    public void test3785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3785");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.returnVehicle("");
        java.lang.String str10 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.");
        java.lang.String str14 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".\".", 0);
        java.lang.String str16 = rentalSystem0.searchVehicle("");
        java.lang.Class<?> wildcardClass17 = rentalSystem0.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID  not found." + "'", str8, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\"." + "'", str10, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\".");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found. not found." + "'", str14, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "No vehicles match the keyword \"\"." + "'", str16, "No vehicles match the keyword \"\".");
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test3786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3786");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        int int2 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        int int4 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".", "No vehicles match the keyword \"Vehicle with ID  not found.\".");
        int int8 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str10 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\".");
        java.util.List<org.example.Vehicle> vehicleList11 = rentalSystem0.getVehicles();
        java.lang.String str13 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found.");
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\".\".\". not found. not found.\".", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\". not found.\".\".");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found." + "'", str10, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found. not found." + "'", str13, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found. not found.");
    }

    @Test
    public void test3787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3787");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID  not found. not found.", "No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        java.lang.String str8 = rentalSystem0.rentVehicle("hi!", "No vehicles match the keyword \"Vehicle with ID  not found.\".", 100);
        java.lang.String str10 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID hi! not found. not found.");
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found. not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.", (double) ' ');
        java.util.List<org.example.Vehicle> vehicleList16 = rentalSystem0.getVehicles();
        java.lang.String str18 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\". not found.\".");
        java.lang.String str20 = rentalSystem0.searchVehicle("Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.");
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.\". not found.\".\".\".\". not found. not found.", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\". not found.\". not found. not found. not found.");
        int int24 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\".\". not found.", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\".\". not found. not found. not found. not found. not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\". not found.\". not found.\".\".", (double) (short) 1);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID hi! not found." + "'", str8, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found." + "'", str10, "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\". not found.\". not found." + "'", str18, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\". not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "ID: Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found. not found., Model: No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\"., Type: Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found., Daily Rate: $32.0, Status: Available\n" + "'", str20, "ID: Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found. not found., Model: No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\"., Type: Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found., Daily Rate: $32.0, Status: Available\n");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
    }

    @Test
    public void test3788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3788");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID  not found.\".", "hi!");
        rentalSystem0.addCustomer("No vehicles match the keyword \"hi!\".", "hi!");
        java.lang.String str14 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.");
        java.lang.String str16 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\". not found.\".");
        java.util.List<org.example.Vehicle> vehicleList17 = rentalSystem0.getVehicles();
        java.lang.String str19 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\".\". not found. not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.\"." + "'", str14, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.\".");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\". not found.\". not found." + "'", str16, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\". not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\".\". not found. not found. not found. not found." + "'", str19, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\".\". not found. not found. not found. not found.");
    }

    @Test
    public void test3789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3789");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID  not found.", 100);
        java.lang.String str12 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID  not found.\".", "Vehicle with ID Vehicle with ID hi! not found. not found.", (int) (short) -1);
        java.lang.String str14 = rentalSystem0.searchVehicle("hi!");
        java.util.List<org.example.Vehicle> vehicleList15 = rentalSystem0.getVehicles();
        java.lang.String str17 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID hi! not found. not found.");
        java.lang.String str19 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.");
        java.util.List<org.example.Vehicle> vehicleList20 = rentalSystem0.getVehicles();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found." + "'", str12, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "No vehicles match the keyword \"hi!\"." + "'", str14, "No vehicles match the keyword \"hi!\".");
        org.junit.Assert.assertNotNull(vehicleList15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\"." + "'", str17, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\".");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.\"." + "'", str19, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.\".");
        org.junit.Assert.assertNotNull(vehicleList20);
    }

    @Test
    public void test3790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3790");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList5 = rentalSystem0.getVehicles();
        java.lang.String str9 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".", "No vehicles match the keyword \"Vehicle with ID  not found.\".", (int) ' ');
        java.lang.String str11 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\".", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\".\".");
        java.lang.String str18 = rentalSystem0.rentVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\".\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\". not found.", 0);
        int int19 = rentalSystem0.getAvailableVehicleCount();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertNotNull(vehicleList5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found." + "'", str9, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found." + "'", str11, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\".\". not found." + "'", str18, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\".\". not found.");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
    }

    @Test
    public void test3791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3791");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        int int2 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        int int4 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addVehicle("Vehicle with ID  not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.", (double) (byte) 100);
        java.lang.String str11 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.\".");
        java.lang.Class<?> wildcardClass12 = rentalSystem0.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.\". not found." + "'", str11, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.\". not found.");
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test3792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3792");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.searchVehicle("Vehicle with ID  not found.");
        rentalSystem0.addVehicle("hi!", "Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID hi! not found.", (double) 0);
        java.util.List<org.example.Customer> customerList14 = rentalSystem0.getCustomers();
        java.lang.String str18 = rentalSystem0.rentVehicle("Vehicle with ID No vehicles match the keyword \"hi!\". not found.", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found. not found.", (int) (short) -1);
        java.util.List<org.example.Vehicle> vehicleList19 = rentalSystem0.getVehicles();
        java.lang.String str21 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.");
        java.util.List<org.example.Customer> customerList22 = rentalSystem0.getCustomers();
        java.lang.String str24 = rentalSystem0.returnVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\". not found.\".\".");
        java.lang.String str26 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\". not found. not found. not found. not found.\". not found.\". not found.");
        java.lang.String str28 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found. not found. not found.\". not found. not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "No vehicles match the keyword \"Vehicle with ID  not found.\"." + "'", str8, "No vehicles match the keyword \"Vehicle with ID  not found.\".");
        org.junit.Assert.assertNotNull(customerList14);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found." + "'", str18, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList19);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\"." + "'", str21, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\".");
        org.junit.Assert.assertNotNull(customerList22);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\". not found.\".\". not found." + "'", str24, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\". not found.\".\". not found.");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\". not found. not found. not found. not found.\". not found.\". not found.\"." + "'", str26, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\". not found. not found. not found. not found.\". not found.\". not found.\".");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found. not found. not found.\". not found. not found. not found.\"." + "'", str28, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found. not found. not found.\". not found. not found. not found.\".");
    }

    @Test
    public void test3793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3793");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("hi!");
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        int int5 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str9 = rentalSystem0.rentVehicle("No vehicles match the keyword \"\".", "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.", (int) (short) 10);
        java.lang.String str13 = rentalSystem0.rentVehicle("No vehicles match the keyword \"\".", "", (-1));
        int int14 = rentalSystem0.getAvailableVehicleCount();
        int int15 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str17 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found.");
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\". not found. not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\". not found.");
        java.lang.String str22 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found.");
        java.lang.String str24 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found.\". not found.\". not found. not found. not found.");
        java.lang.String str26 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID  not found.\".\".\". not found.\".\". not found.");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID hi! not found." + "'", str3, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Vehicle with ID No vehicles match the keyword \"\". not found." + "'", str9, "Vehicle with ID No vehicles match the keyword \"\". not found.");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID No vehicles match the keyword \"\". not found." + "'", str13, "Vehicle with ID No vehicles match the keyword \"\". not found.");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found." + "'", str17, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found.\"." + "'", str22, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found.\".");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found.\". not found.\". not found. not found. not found.\"." + "'", str24, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found.\". not found.\". not found. not found. not found.\".");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID  not found.\".\".\". not found.\".\". not found. not found." + "'", str26, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID  not found.\".\".\". not found.\".\". not found. not found.");
    }

    @Test
    public void test3794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3794");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        int int7 = rentalSystem0.getAvailableVehicleCount();
        int int8 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList9 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList10 = rentalSystem0.getCustomers();
        int int11 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList12 = rentalSystem0.getCustomers();
        java.lang.String str16 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\". not found. not found.\".", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found. not found. not found. not found.", 10);
        int int17 = rentalSystem0.getAvailableVehicleCount();
        java.lang.Class<?> wildcardClass18 = rentalSystem0.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(customerList9);
        org.junit.Assert.assertNotNull(customerList10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(customerList12);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\". not found. not found.\". not found." + "'", str16, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\". not found. not found.\". not found.");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test3795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3795");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID  not found.", 100);
        java.lang.String str12 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID  not found.\".", "Vehicle with ID Vehicle with ID hi! not found. not found.", (int) (short) -1);
        java.lang.String str14 = rentalSystem0.searchVehicle("hi!");
        java.util.List<org.example.Vehicle> vehicleList15 = rentalSystem0.getVehicles();
        java.lang.String str17 = rentalSystem0.searchVehicle("");
        java.lang.String str21 = rentalSystem0.rentVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\".", 2);
        java.lang.String str23 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n\".\".\".\".\". not found.");
        java.util.List<org.example.Customer> customerList24 = rentalSystem0.getCustomers();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found." + "'", str12, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "No vehicles match the keyword \"hi!\"." + "'", str14, "No vehicles match the keyword \"hi!\".");
        org.junit.Assert.assertNotNull(vehicleList15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "No vehicles match the keyword \"\"." + "'", str17, "No vehicles match the keyword \"\".");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found. not found." + "'", str21, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found. not found.");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n\".\".\".\".\". not found.\"." + "'", str23, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n\".\".\".\".\". not found.\".");
        org.junit.Assert.assertNotNull(customerList24);
    }

    @Test
    public void test3796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3796");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID  not found.", 100);
        java.lang.String str12 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID  not found.\".", "Vehicle with ID Vehicle with ID hi! not found. not found.", (int) (short) -1);
        java.lang.String str14 = rentalSystem0.searchVehicle("hi!");
        java.util.List<org.example.Vehicle> vehicleList15 = rentalSystem0.getVehicles();
        java.lang.String str17 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID hi! not found. not found.");
        java.lang.String str19 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.");
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\". not found.\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found. not found.\". not found.");
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\". not found.\".", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\".\".");
        java.util.List<org.example.Vehicle> vehicleList26 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList27 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList28 = rentalSystem0.getVehicles();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found." + "'", str12, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "No vehicles match the keyword \"hi!\"." + "'", str14, "No vehicles match the keyword \"hi!\".");
        org.junit.Assert.assertNotNull(vehicleList15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\"." + "'", str17, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\".");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.\"." + "'", str19, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.\".");
        org.junit.Assert.assertNotNull(vehicleList26);
        org.junit.Assert.assertNotNull(vehicleList27);
        org.junit.Assert.assertNotNull(vehicleList28);
    }

    @Test
    public void test3797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3797");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList5 = rentalSystem0.getVehicles();
        java.lang.String str9 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".", "No vehicles match the keyword \"Vehicle with ID  not found.\".", (int) ' ');
        rentalSystem0.addVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found.\".\".", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found. not found.\".\".\".", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found. not found.", (double) (short) 0);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertNotNull(vehicleList5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found." + "'", str9, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.");
    }

    @Test
    public void test3798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3798");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.searchVehicle("Vehicle with ID  not found.");
        rentalSystem0.addVehicle("hi!", "Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID hi! not found.", (double) 0);
        java.util.List<org.example.Customer> customerList14 = rentalSystem0.getCustomers();
        java.lang.String str18 = rentalSystem0.rentVehicle("Vehicle with ID No vehicles match the keyword \"hi!\". not found.", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found. not found.", (int) (short) -1);
        java.util.List<org.example.Vehicle> vehicleList19 = rentalSystem0.getVehicles();
        java.lang.String str21 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.");
        java.lang.String str23 = rentalSystem0.searchVehicle("No vehicles match the keyword \"hi!\".");
        java.lang.String str25 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\".\". not found. not found. not found. not found. not found.");
        java.lang.Class<?> wildcardClass26 = rentalSystem0.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "No vehicles match the keyword \"Vehicle with ID  not found.\"." + "'", str8, "No vehicles match the keyword \"Vehicle with ID  not found.\".");
        org.junit.Assert.assertNotNull(customerList14);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found." + "'", str18, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList19);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\"." + "'", str21, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\".");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\"." + "'", str23, "No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\".\". not found. not found. not found. not found. not found. not found." + "'", str25, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\".\". not found. not found. not found. not found. not found. not found.");
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test3799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3799");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID hi! not found.\".", "Vehicle with ID Vehicle with ID  not found. not found.");
        java.lang.String str8 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"\". not found.");
        java.lang.String str10 = rentalSystem0.searchVehicle("Vehicle with ID hi! not found.");
        java.lang.String str14 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found.\". not found.\".", "Vehicle with ID No vehicles match the keyword \"hi!\". not found.", (int) (byte) 0);
        java.lang.String str18 = rentalSystem0.rentVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found.\".\". not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found.\".\".", (int) (byte) 10);
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\".\". not found. not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".\". not found. not found. not found. not found. not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found.");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "No vehicles match the keyword \"Vehicle with ID hi! not found.\"." + "'", str10, "No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found.\". not found.\". not found." + "'", str14, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found.\". not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found.\".\". not found. not found." + "'", str18, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found.\".\". not found. not found.");
    }

    @Test
    public void test3800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3800");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID  not found. not found.", "No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        int int5 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID hi! not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".", "Vehicle with ID Vehicle with ID hi! not found. not found.", (double) 100.0f);
        java.util.List<org.example.Customer> customerList11 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\".", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\".\". not found.\".");
        java.util.List<org.example.Customer> customerList15 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".\".\".", "No vehicles match the keyword \"ID: Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found., Model: No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\"., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found. not found. not found.\"., Daily Rate: $100.0, Status: Available\n\".");
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.\". not found.\".\".\".\". not found.\".\".");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(customerList11);
        org.junit.Assert.assertNotNull(customerList15);
    }

    @Test
    public void test3801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3801");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("");
        rentalSystem0.addVehicle("Vehicle with ID  not found.", "Vehicle with ID hi! not found.", "Vehicle with ID Vehicle with ID hi! not found. not found.", (double) '4');
        java.lang.String str10 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".");
        int int11 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str13 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found. not found.");
        java.util.List<org.example.Vehicle> vehicleList14 = rentalSystem0.getVehicles();
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found. not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found. not found. not found.\". not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.\". not found.\".\".", (double) (byte) 0);
        java.lang.String str21 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.\".\".\". not found.");
        java.lang.String str25 = rentalSystem0.rentVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.\".\".", "", (int) (short) 100);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID  not found." + "'", str3, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\". not found." + "'", str10, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\". not found.");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found. not found. not found." + "'", str13, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found. not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList14);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.\".\".\". not found. not found." + "'", str21, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.\".\".\". not found. not found.");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.\".\". not found." + "'", str25, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.\".\". not found.");
    }

    @Test
    public void test3802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3802");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID  not found.\".", "hi!");
        int int10 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str12 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID  not found. not found.");
        java.lang.String str14 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.");
        java.util.List<org.example.Customer> customerList15 = rentalSystem0.getCustomers();
        java.lang.String str17 = rentalSystem0.searchVehicle("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\".\".");
        int int18 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\".\". not found.", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\".", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found. not found. not found.\".\".", 0.0d);
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID  not found.\".\".\". not found. not found.", "No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str12, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\"." + "'", str14, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".");
        org.junit.Assert.assertNotNull(customerList15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\".\".\"." + "'", str17, "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\".\".\".");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
    }

    @Test
    public void test3803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3803");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.returnVehicle("");
        java.lang.String str10 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\". not found.");
        java.util.List<org.example.Customer> customerList11 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\". not found. not found. not found.\".");
        java.util.List<org.example.Customer> customerList15 = rentalSystem0.getCustomers();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID  not found." + "'", str8, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\". not found.\"." + "'", str10, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\". not found.\".");
        org.junit.Assert.assertNotNull(customerList11);
        org.junit.Assert.assertNotNull(customerList15);
    }

    @Test
    public void test3804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3804");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID  not found.", 100);
        java.lang.String str12 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID  not found.\".", "Vehicle with ID Vehicle with ID hi! not found. not found.", (int) (short) -1);
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.");
        java.util.List<org.example.Vehicle> vehicleList16 = rentalSystem0.getVehicles();
        java.lang.String str20 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.\".\". not found. not found.", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\". not found.\". not found. not found. not found.", (int) (byte) 100);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found." + "'", str12, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList16);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.\".\". not found. not found. not found." + "'", str20, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.\".\". not found. not found. not found.");
    }

    @Test
    public void test3805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3805");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID  not found. not found.", "No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        int int5 = rentalSystem0.getAvailableVehicleCount();
        int int6 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Vehicle> vehicleList7 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found.");
        java.util.List<org.example.Vehicle> vehicleList11 = rentalSystem0.getVehicles();
        java.lang.String str13 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\". not found. not found. not found.\". not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(vehicleList7);
        org.junit.Assert.assertNotNull(vehicleList11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\". not found. not found. not found.\". not found. not found.\"." + "'", str13, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\". not found. not found. not found.\". not found. not found.\".");
    }

    @Test
    public void test3806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3806");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.lang.String str4 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found.");
        java.lang.String str6 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found.\".");
        java.lang.String str8 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"\".\". not found. not found.\".");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found." + "'", str4, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found.");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found.\".\"." + "'", str6, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found.\".\".");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"\".\". not found. not found.\". not found." + "'", str8, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"\".\". not found. not found.\". not found.");
    }

    @Test
    public void test3807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3807");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.returnVehicle("Vehicle with ID  not found.");
        java.lang.String str10 = rentalSystem0.returnVehicle("hi!");
        java.lang.String str14 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found. not found.", (-1));
        java.util.List<org.example.Customer> customerList15 = rentalSystem0.getCustomers();
        java.lang.Class<?> wildcardClass16 = rentalSystem0.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID  not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID  not found. not found.");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID hi! not found." + "'", str10, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\". not found." + "'", str14, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\". not found.");
        org.junit.Assert.assertNotNull(customerList15);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test3808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3808");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.lang.String str4 = rentalSystem0.searchVehicle("hi!");
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID  not found.\".", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\".", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\".", 100.0d);
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.\". not found.");
        java.util.List<org.example.Customer> customerList13 = rentalSystem0.getCustomers();
        java.lang.String str15 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found. not found. not found.\". not found.");
        java.lang.String str17 = rentalSystem0.returnVehicle("");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "No vehicles match the keyword \"hi!\"." + "'", str4, "No vehicles match the keyword \"hi!\".");
        org.junit.Assert.assertNotNull(customerList13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found. not found. not found.\". not found. not found." + "'", str15, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found. not found. not found.\". not found. not found.");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Vehicle with ID  not found." + "'", str17, "Vehicle with ID  not found.");
    }

    @Test
    public void test3809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3809");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("");
        int int4 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str8 = rentalSystem0.rentVehicle("", "", (int) '#');
        java.lang.String str10 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\".");
        java.lang.String str12 = rentalSystem0.returnVehicle("ID: Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found., Model: ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n, Type: Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found., Daily Rate: $100.0, Status: Available\n");
        java.lang.String str16 = rentalSystem0.rentVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\". not found. not found.\".\".\". not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found. not found. not found.\". not found.", (int) (byte) 10);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID  not found." + "'", str3, "Vehicle with ID  not found.");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID  not found." + "'", str8, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\". not found." + "'", str10, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID ID: Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found., Model: ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n, Type: Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found., Daily Rate: $100.0, Status: Available\n not found." + "'", str12, "Vehicle with ID ID: Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found., Model: ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n, Type: Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found., Daily Rate: $100.0, Status: Available\n not found.");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\". not found. not found.\".\".\". not found. not found." + "'", str16, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\". not found. not found.\".\".\". not found. not found.");
    }

    @Test
    public void test3810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3810");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.searchVehicle("Vehicle with ID  not found.");
        rentalSystem0.addVehicle("hi!", "Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID hi! not found.", (double) 0);
        rentalSystem0.addCustomer("Vehicle with ID hi! not found.", "hi!");
        java.lang.String str18 = rentalSystem0.returnVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".");
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID hi! not found.\".", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.", (double) (byte) 10);
        int int24 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found. not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID hi! not found.\".\".", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found. not found.", (double) '#');
        java.util.List<org.example.Vehicle> vehicleList30 = rentalSystem0.getVehicles();
        int int31 = rentalSystem0.getAvailableVehicleCount();
        int int32 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\". not found.\". not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found. not found. not found.\".");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "No vehicles match the keyword \"Vehicle with ID  not found.\"." + "'", str8, "No vehicles match the keyword \"Vehicle with ID  not found.\".");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found." + "'", str18, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2 + "'", int24 == 2);
        org.junit.Assert.assertNotNull(vehicleList30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 3 + "'", int31 == 3);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 3 + "'", int32 == 3);
    }

    @Test
    public void test3811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3811");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList5 = rentalSystem0.getVehicles();
        java.lang.String str9 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".", "No vehicles match the keyword \"Vehicle with ID  not found.\".", (int) ' ');
        java.lang.String str13 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID  not found. not found.", "", (int) (byte) -1);
        int int14 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str18 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found. not found. not found.", 100);
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found.\". not found.\".", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\".\".");
        int int22 = rentalSystem0.getAvailableVehicleCount();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertNotNull(vehicleList5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found." + "'", str9, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str13, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found." + "'", str18, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
    }

    @Test
    public void test3812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3812");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID  not found.\".", "hi!");
        int int10 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList11 = rentalSystem0.getCustomers();
        java.lang.String str13 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.");
        int int14 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Vehicle> vehicleList15 = rentalSystem0.getVehicles();
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found. not found. not found.\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\". not found. not found.", (double) 0L);
        java.lang.String str22 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found. not found. not found. not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(customerList11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\"." + "'", str13, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(vehicleList15);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found. not found. not found. not found.\". not found.\"." + "'", str22, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found. not found. not found. not found.\". not found.\".");
    }

    @Test
    public void test3813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3813");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        int int2 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Vehicle> vehicleList3 = rentalSystem0.getVehicles();
        int int4 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Vehicle> vehicleList5 = rentalSystem0.getVehicles();
        java.lang.String str7 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found. not found.");
        rentalSystem0.addCustomer("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\". not found.\".\". not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found. not found. not found.\". not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(vehicleList3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(vehicleList5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found. not found. not found." + "'", str7, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found. not found. not found.");
    }

    @Test
    public void test3814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3814");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("");
        int int4 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Vehicle> vehicleList5 = rentalSystem0.getVehicles();
        java.lang.String str7 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.");
        java.lang.String str9 = rentalSystem0.returnVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\".");
        rentalSystem0.addVehicle("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\".\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.", (double) 10);
        java.util.List<org.example.Customer> customerList15 = rentalSystem0.getCustomers();
        java.lang.String str17 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.\". not found. not found.");
        java.lang.String str19 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\". not found. not found. not found.\". not found.");
        java.lang.String str21 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found.\".\". not found. not found.");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID  not found." + "'", str3, "Vehicle with ID  not found.");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(vehicleList5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.\"." + "'", str7, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.\".");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found." + "'", str9, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found.");
        org.junit.Assert.assertNotNull(customerList15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.\". not found. not found.\"." + "'", str17, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.\". not found. not found.\".");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\". not found. not found. not found.\". not found.\"." + "'", str19, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\". not found. not found. not found.\". not found.\".");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found.\".\". not found. not found. not found." + "'", str21, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found.\".\". not found. not found. not found.");
    }

    @Test
    public void test3815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3815");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList7 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList8 = rentalSystem0.getCustomers();
        int int9 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str13 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n\".\". not found. not found. not found.\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\".", 10);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertNotNull(vehicleList7);
        org.junit.Assert.assertNotNull(customerList8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n\".\". not found. not found. not found.\". not found." + "'", str13, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n\".\". not found. not found. not found.\". not found.");
    }

    @Test
    public void test3816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3816");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID  not found. not found.", "No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        int int5 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID hi! not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".", "Vehicle with ID Vehicle with ID hi! not found. not found.", (double) 100.0f);
        java.lang.String str14 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found. not found.", "", 0);
        java.util.List<org.example.Vehicle> vehicleList15 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList16 = rentalSystem0.getCustomers();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found. not found. not found." + "'", str14, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found. not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList15);
        org.junit.Assert.assertNotNull(customerList16);
    }

    @Test
    public void test3817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3817");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID  not found.\".", "hi!");
        rentalSystem0.addCustomer("No vehicles match the keyword \"hi!\".", "hi!");
        java.lang.String str14 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        java.util.List<org.example.Vehicle> vehicleList15 = rentalSystem0.getVehicles();
        java.lang.String str17 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.");
        int int18 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found. not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\". not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.\". not found.", (double) 1.0f);
        java.lang.String str25 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found. not found.");
        java.lang.String str27 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\". not found. not found.");
        java.util.List<org.example.Vehicle> vehicleList28 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found. not found.\".", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\".\". not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found." + "'", str14, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found." + "'", str17, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found. not found.\"." + "'", str25, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found. not found.\".");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\". not found. not found. not found." + "'", str27, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\". not found. not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList28);
    }

    @Test
    public void test3818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3818");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.rentVehicle("", "No vehicles match the keyword \"Vehicle with ID hi! not found.\".", (int) (byte) 100);
        java.lang.String str10 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.");
        int int11 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID hi! not found. not found.", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.");
        java.util.List<org.example.Customer> customerList15 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList16 = rentalSystem0.getVehicles();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID  not found." + "'", str8, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found." + "'", str10, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(customerList15);
        org.junit.Assert.assertNotNull(vehicleList16);
    }

    @Test
    public void test3819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3819");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.searchVehicle("Vehicle with ID  not found.");
        rentalSystem0.addVehicle("hi!", "Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID hi! not found.", (double) 0);
        java.util.List<org.example.Vehicle> vehicleList14 = rentalSystem0.getVehicles();
        java.lang.String str16 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\". not found.");
        java.util.List<org.example.Customer> customerList17 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList18 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList19 = rentalSystem0.getVehicles();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "No vehicles match the keyword \"Vehicle with ID  not found.\"." + "'", str8, "No vehicles match the keyword \"Vehicle with ID  not found.\".");
        org.junit.Assert.assertNotNull(vehicleList14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\". not found.\"." + "'", str16, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\". not found.\".");
        org.junit.Assert.assertNotNull(customerList17);
        org.junit.Assert.assertNotNull(customerList18);
        org.junit.Assert.assertNotNull(vehicleList19);
    }

    @Test
    public void test3820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3820");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID  not found.", 100);
        java.lang.String str10 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.");
        java.lang.String str14 = rentalSystem0.rentVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found.\".\".", (int) ' ');
        rentalSystem0.addVehicle("ID: Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found. not found.\". not found. not found., Model: No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found.\"., Type: Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\". not found., Daily Rate: $100.0, Status: Available\n", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.\".\".\". not found.\".\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n\".\".\".\".\". not found. not found.", (double) 10.0f);
        java.lang.String str21 = rentalSystem0.returnVehicle("");
        java.util.List<org.example.Customer> customerList22 = rentalSystem0.getCustomers();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found." + "'", str10, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found. not found." + "'", str14, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found. not found.");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Vehicle with ID  not found." + "'", str21, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList22);
    }

    @Test
    public void test3821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3821");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList5 = rentalSystem0.getVehicles();
        java.lang.String str9 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".", "No vehicles match the keyword \"Vehicle with ID  not found.\".", (int) ' ');
        rentalSystem0.addVehicle("Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.", "No vehicles match the keyword \"\".", "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.", (double) 1L);
        int int15 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList16 = rentalSystem0.getCustomers();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertNotNull(vehicleList5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found." + "'", str9, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(customerList16);
    }

    @Test
    public void test3822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3822");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.searchVehicle("Vehicle with ID  not found.");
        rentalSystem0.addVehicle("hi!", "Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID hi! not found.", (double) 0);
        java.lang.String str15 = rentalSystem0.returnVehicle("Vehicle with ID  not found.");
        int int16 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str20 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\".", 100);
        java.util.List<org.example.Customer> customerList21 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList22 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\". not found.\".\".\".", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".\".\".");
        java.util.List<org.example.Vehicle> vehicleList26 = rentalSystem0.getVehicles();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "No vehicles match the keyword \"Vehicle with ID  not found.\"." + "'", str8, "No vehicles match the keyword \"Vehicle with ID  not found.\".");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Vehicle with ID Vehicle with ID  not found. not found." + "'", str15, "Vehicle with ID Vehicle with ID  not found. not found.");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found." + "'", str20, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found.");
        org.junit.Assert.assertNotNull(customerList21);
        org.junit.Assert.assertNotNull(vehicleList22);
        org.junit.Assert.assertNotNull(vehicleList26);
    }

    @Test
    public void test3823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3823");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList5 = rentalSystem0.getVehicles();
        java.lang.String str9 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".", "No vehicles match the keyword \"Vehicle with ID  not found.\".", (int) ' ');
        java.lang.String str13 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID  not found. not found.", "", (int) (byte) -1);
        int int14 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.", "Vehicle with ID hi! not found.");
        rentalSystem0.addCustomer("Vehicle with ID No vehicles match the keyword \"hi!\". not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\". not found.");
        java.lang.String str22 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.");
        java.util.List<org.example.Customer> customerList23 = rentalSystem0.getCustomers();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertNotNull(vehicleList5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found." + "'", str9, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str13, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found. not found." + "'", str22, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found. not found.");
        org.junit.Assert.assertNotNull(customerList23);
    }

    @Test
    public void test3824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3824");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("hi!");
        rentalSystem0.addCustomer("ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n", "No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".");
        java.lang.String str10 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".", (int) (byte) 1);
        java.lang.String str14 = rentalSystem0.rentVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\". not found.", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".\".\".", 100);
        java.lang.String str18 = rentalSystem0.rentVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.\". not found.", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\".\".\". not found. not found. not found. not found.", 0);
        java.lang.String str22 = rentalSystem0.rentVehicle("Vehicle with ID ID: Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found., Model: ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n, Type: Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found., Daily Rate: $100.0, Status: Available\n not found.", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found. not found.", (int) '4');
        int int23 = rentalSystem0.getAvailableVehicleCount();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID hi! not found." + "'", str3, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found. not found." + "'", str10, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\". not found. not found." + "'", str14, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\". not found. not found.");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.\". not found. not found." + "'", str18, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.\". not found. not found.");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Vehicle with ID Vehicle with ID ID: Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found., Model: ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n, Type: Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found., Daily Rate: $100.0, Status: Available\n not found. not found." + "'", str22, "Vehicle with ID Vehicle with ID ID: Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found., Model: ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n, Type: Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found., Daily Rate: $100.0, Status: Available\n not found. not found.");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
    }

    @Test
    public void test3825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3825");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID  not found.", 100);
        java.lang.String str12 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID  not found.\".", "Vehicle with ID Vehicle with ID hi! not found. not found.", (int) (short) -1);
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.");
        java.lang.String str19 = rentalSystem0.rentVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\".\".", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found. not found.", (int) (byte) 100);
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.\".\". not found.", "Vehicle with ID No vehicles match the keyword \"\". not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found. not found.\".", (double) (byte) 100);
        java.util.List<org.example.Customer> customerList25 = rentalSystem0.getCustomers();
        java.lang.String str29 = rentalSystem0.rentVehicle("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.\".\".\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\". not found.\". not found. not found.\". not found. not found.", (int) (byte) -1);
        int int30 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\". not found. not found. not found.\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found., Model: Vehicle with ID Vehicle with ID hi! not found. not found., Type: No vehicles match the keyword \"hi!\"., Daily Rate: $1.0, Status: Available\nID: Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.\". not found., Model: No vehicles match the keyword \"\"., Type: No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found.\"., Daily Rate: $100.0, Status: Available\n not found.\". not found.", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\". not found.\".\".\". not found.", (double) '4');
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found." + "'", str12, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\".\". not found." + "'", str19, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\".\". not found.");
        org.junit.Assert.assertNotNull(customerList25);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.\".\".\". not found." + "'", str29, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.\".\".\". not found.");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
    }

    @Test
    public void test3826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3826");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID  not found.\".", "hi!");
        rentalSystem0.addCustomer("No vehicles match the keyword \"hi!\".", "hi!");
        java.lang.String str14 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        java.util.List<org.example.Vehicle> vehicleList15 = rentalSystem0.getVehicles();
        java.lang.String str17 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.");
        int int18 = rentalSystem0.getAvailableVehicleCount();
        int int19 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str23 = rentalSystem0.rentVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\".\". not found.", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\". not found.\".", 0);
        java.lang.String str25 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found. not found.\". not found.");
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\". not found. not found. not found. not found. not found.", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\". not found.\".");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found." + "'", str14, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found." + "'", str17, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\".\". not found. not found." + "'", str23, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\".\". not found. not found.");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found. not found.\". not found. not found." + "'", str25, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found. not found.\". not found. not found.");
    }

    @Test
    public void test3827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3827");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID  not found.\".", "hi!");
        rentalSystem0.addCustomer("No vehicles match the keyword \"hi!\".", "hi!");
        java.lang.String str14 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        java.lang.String str18 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found.\".", (int) (byte) 100);
        java.lang.String str22 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\". not found. not found.", 0);
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found.\".\".", "No vehicles match the keyword \"Vehicle with ID  not found.\".");
        int int26 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str28 = rentalSystem0.returnVehicle("");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found." + "'", str14, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found. not found." + "'", str18, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found." + "'", str22, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Vehicle with ID  not found." + "'", str28, "Vehicle with ID  not found.");
    }

    @Test
    public void test3828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3828");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID  not found. not found.", "No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        java.lang.String str8 = rentalSystem0.rentVehicle("hi!", "No vehicles match the keyword \"Vehicle with ID  not found.\".", 100);
        java.lang.String str10 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID hi! not found. not found.");
        rentalSystem0.addVehicle("ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.", "No vehicles match the keyword \"\".", (double) (byte) 10);
        java.lang.String str17 = rentalSystem0.returnVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".");
        java.util.List<org.example.Vehicle> vehicleList18 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList19 = rentalSystem0.getVehicles();
        int int20 = rentalSystem0.getAvailableVehicleCount();
        int int21 = rentalSystem0.getAvailableVehicleCount();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID hi! not found." + "'", str8, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found." + "'", str10, "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found." + "'", str17, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.");
        org.junit.Assert.assertNotNull(vehicleList18);
        org.junit.Assert.assertNotNull(vehicleList19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
    }

    @Test
    public void test3829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3829");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList7 = rentalSystem0.getVehicles();
        java.lang.String str11 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.", "Vehicle with ID hi! not found.", (int) '#');
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found. not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\".", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found. not found.", 0.0d);
        java.util.List<org.example.Customer> customerList17 = rentalSystem0.getCustomers();
        java.lang.String str19 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\". not found.\".");
        java.lang.String str21 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\".\". not found. not found.");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertNotNull(vehicleList7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found." + "'", str11, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.");
        org.junit.Assert.assertNotNull(customerList17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\". not found.\". not found." + "'", str19, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\". not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\".\". not found. not found. not found." + "'", str21, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\".\". not found. not found. not found.");
    }

    @Test
    public void test3830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3830");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.returnVehicle("");
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".", "No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".");
        java.lang.String str15 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\".", "No vehicles match the keyword \"Vehicle with ID  not found.\".", (int) (short) 100);
        java.lang.String str19 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found.", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".\".\".", 0);
        int int20 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList21 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"ID: Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found., Model: No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\"., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found. not found. not found.\"., Daily Rate: $100.0, Status: Available\n\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found.");
        // The following exception was thrown during execution in test generation
        try {
            rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\". not found. not found. not found. not found. not found. not found.", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.\".\".\".\".", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\". not found. not found. not found.", (double) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Daily rate cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID  not found." + "'", str8, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found." + "'", str15, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found. not found." + "'", str19, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found. not found.");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(customerList21);
    }

    @Test
    public void test3831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3831");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.lang.String str7 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".");
        java.lang.String str11 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found.", "", 0);
        java.util.List<org.example.Vehicle> vehicleList12 = rentalSystem0.getVehicles();
        java.lang.String str14 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found. not found.");
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\".\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found.\".\". not found. not found.");
        java.lang.Class<?> wildcardClass18 = rentalSystem0.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\"." + "'", str7, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found." + "'", str11, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found. not found. not found." + "'", str14, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found. not found. not found.");
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test3832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3832");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID  not found.\".", "hi!");
        rentalSystem0.addCustomer("No vehicles match the keyword \"hi!\".", "hi!");
        java.lang.String str14 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        java.lang.String str18 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found.\".", (int) (byte) 100);
        java.lang.String str22 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\". not found. not found.", 0);
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found.\".\".", "No vehicles match the keyword \"Vehicle with ID  not found.\".");
        rentalSystem0.addCustomer("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\". not found. not found.\". not found.", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found. not found. not found. not found.\". not found.\". not found. not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found." + "'", str14, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found. not found." + "'", str18, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found." + "'", str22, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.");
    }

    @Test
    public void test3833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3833");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.returnVehicle("Vehicle with ID  not found.");
        java.lang.String str12 = rentalSystem0.rentVehicle("Vehicle with ID hi! not found.", "Vehicle with ID Vehicle with ID  not found. not found.", (int) (byte) 10);
        java.lang.String str14 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        java.util.List<org.example.Vehicle> vehicleList15 = rentalSystem0.getVehicles();
        java.lang.String str19 = rentalSystem0.rentVehicle("", "Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.", (int) (byte) 100);
        java.lang.String str21 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\". not found.");
        java.util.List<org.example.Customer> customerList22 = rentalSystem0.getCustomers();
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\". not found. not found. not found.", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\". not found. not found. not found. not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found.\". not found. not found.", (double) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\". not found. not found.\". not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\".\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\".\". not found. not found.\".", (double) (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Daily rate cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID  not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID  not found. not found.");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID Vehicle with ID hi! not found. not found." + "'", str12, "Vehicle with ID Vehicle with ID hi! not found. not found.");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found." + "'", str14, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList15);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Vehicle with ID  not found." + "'", str19, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\". not found. not found." + "'", str21, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\". not found. not found.");
        org.junit.Assert.assertNotNull(customerList22);
    }

    @Test
    public void test3834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3834");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID  not found. not found.", "No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        java.lang.String str8 = rentalSystem0.rentVehicle("hi!", "No vehicles match the keyword \"Vehicle with ID  not found.\".", 100);
        int int9 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str11 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found.");
        java.util.List<org.example.Vehicle> vehicleList12 = rentalSystem0.getVehicles();
        java.lang.String str14 = rentalSystem0.returnVehicle("");
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found. not found. not found.", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found.");
        int int18 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str20 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\".");
        rentalSystem0.addCustomer("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found. not found. not found. not found.\".\".\". not found.", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n\".\".\". not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID hi! not found." + "'", str8, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found.\"." + "'", str11, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found.\".");
        org.junit.Assert.assertNotNull(vehicleList12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID  not found." + "'", str14, "Vehicle with ID  not found.");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found." + "'", str20, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.");
    }

    @Test
    public void test3835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3835");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList7 = rentalSystem0.getVehicles();
        java.lang.String str11 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID hi! not found.\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.", (int) (byte) 100);
        int int12 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Vehicle> vehicleList13 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList14 = rentalSystem0.getCustomers();
        java.lang.String str16 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.");
        java.lang.String str18 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\". not found.");
        java.lang.String str22 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\". not found. not found. not found. not found.", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\".\". not found.", 100);
        java.util.List<org.example.Customer> customerList23 = rentalSystem0.getCustomers();
        java.lang.String str25 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found.");
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found. not found.\".\".", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\".\". not found.");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertNotNull(vehicleList7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found." + "'", str11, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(vehicleList13);
        org.junit.Assert.assertNotNull(customerList14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found. not found." + "'", str16, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\". not found.\"." + "'", str18, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\". not found.\".");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\". not found. not found. not found. not found. not found." + "'", str22, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\". not found. not found. not found. not found. not found.");
        org.junit.Assert.assertNotNull(customerList23);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found.\"." + "'", str25, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found.\".");
    }

    @Test
    public void test3836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3836");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.returnVehicle("");
        java.util.List<org.example.Customer> customerList9 = rentalSystem0.getCustomers();
        java.lang.String str11 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.");
        java.util.List<org.example.Customer> customerList12 = rentalSystem0.getCustomers();
        int int13 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\". not found.\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found. not found.\". not found.\". not found.", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\". not found.\".\". not found.", 10.0d);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID  not found." + "'", str8, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList9);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found." + "'", str11, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found.");
        org.junit.Assert.assertNotNull(customerList12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
    }

    @Test
    public void test3837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3837");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID  not found. not found.", "No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        java.lang.String str8 = rentalSystem0.rentVehicle("hi!", "No vehicles match the keyword \"Vehicle with ID  not found.\".", 100);
        java.util.List<org.example.Customer> customerList9 = rentalSystem0.getCustomers();
        rentalSystem0.addVehicle("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\".\".\".\".", "No vehicles match the keyword \"hi!\".", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found. not found.", (double) ' ');
        java.lang.String str18 = rentalSystem0.rentVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\". not found.\". not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\". not found.\". not found.\". not found.", (int) (byte) 10);
        java.lang.String str20 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found.\". not found.\". not found.");
        java.lang.Class<?> wildcardClass21 = rentalSystem0.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID hi! not found." + "'", str8, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertNotNull(customerList9);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\". not found.\". not found. not found." + "'", str18, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\". not found.\". not found. not found.");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found.\". not found.\". not found.\"." + "'", str20, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found.\". not found.\". not found.\".");
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test3838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3838");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("");
        int int4 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str8 = rentalSystem0.rentVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found.", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found. not found.", (int) '#');
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\". not found. not found.");
        java.util.List<org.example.Vehicle> vehicleList12 = rentalSystem0.getVehicles();
        int int13 = rentalSystem0.getAvailableVehicleCount();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID  not found." + "'", str3, "Vehicle with ID  not found.");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
    }

    @Test
    public void test3839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3839");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID  not found.\".", "hi!");
        int int10 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.", "ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\".", 100.0d);
        java.lang.String str19 = rentalSystem0.rentVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.", (int) (short) 1);
        java.lang.String str21 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found. not found.");
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\".\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.\". not found.");
        java.lang.String str28 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".\". not found. not found. not found. not found.\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\". not found. not found.", (int) (short) 1);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found. not found." + "'", str19, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found. not found.");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found. not found. not found." + "'", str21, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".\". not found. not found. not found. not found.\". not found." + "'", str28, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".\". not found. not found. not found. not found.\". not found.");
    }

    @Test
    public void test3840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3840");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID  not found.", 100);
        java.lang.String str12 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID  not found.\".", "Vehicle with ID Vehicle with ID hi! not found. not found.", (int) (short) -1);
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.", "ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n", "Vehicle with ID Vehicle with ID hi! not found. not found.", 100.0d);
        java.util.List<org.example.Vehicle> vehicleList18 = rentalSystem0.getVehicles();
        java.lang.String str22 = rentalSystem0.rentVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found. not found.\".\".", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found.\".\".", (int) (byte) 10);
        java.util.List<org.example.Customer> customerList23 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList24 = rentalSystem0.getVehicles();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found." + "'", str12, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList18);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found. not found.\".\". not found." + "'", str22, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found. not found.\".\". not found.");
        org.junit.Assert.assertNotNull(customerList23);
        org.junit.Assert.assertNotNull(vehicleList24);
    }

    @Test
    public void test3841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3841");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.searchVehicle("Vehicle with ID  not found.");
        rentalSystem0.addVehicle("hi!", "Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID hi! not found.", (double) 0);
        java.util.List<org.example.Vehicle> vehicleList14 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList15 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found. not found.\".\". not found.\".", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found. not found. not found. not found.\". not found. not found. not found.");
        java.lang.String str22 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.\". not found. not found.\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\".\". not found. not found.\". not found. not found.", (int) (byte) 10);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "No vehicles match the keyword \"Vehicle with ID  not found.\"." + "'", str8, "No vehicles match the keyword \"Vehicle with ID  not found.\".");
        org.junit.Assert.assertNotNull(vehicleList14);
        org.junit.Assert.assertNotNull(vehicleList15);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.\". not found. not found.\". not found." + "'", str22, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.\". not found. not found.\". not found.");
    }

    @Test
    public void test3842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3842");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID  not found.\".", "hi!");
        java.lang.String str11 = rentalSystem0.returnVehicle("Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.");
        java.util.List<org.example.Vehicle> vehicleList12 = rentalSystem0.getVehicles();
        int int13 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str17 = rentalSystem0.rentVehicle("Vehicle with ID ID: Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found., Model: Vehicle with ID Vehicle with ID hi! not found. not found., Type: No vehicles match the keyword \"hi!\"., Daily Rate: $1.0, Status: Available\nID: Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.\". not found., Model: No vehicles match the keyword \"\"., Type: No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found.\"., Daily Rate: $100.0, Status: Available\n not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\".", (int) (byte) 10);
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\". not found. not found. not found.\". not found. not found.\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\". not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found." + "'", str11, "Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Vehicle with ID Vehicle with ID ID: Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found., Model: Vehicle with ID Vehicle with ID hi! not found. not found., Type: No vehicles match the keyword \"hi!\"., Daily Rate: $1.0, Status: Available\nID: Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.\". not found., Model: No vehicles match the keyword \"\"., Type: No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found.\"., Daily Rate: $100.0, Status: Available\n not found. not found." + "'", str17, "Vehicle with ID Vehicle with ID ID: Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found., Model: Vehicle with ID Vehicle with ID hi! not found. not found., Type: No vehicles match the keyword \"hi!\"., Daily Rate: $1.0, Status: Available\nID: Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.\". not found., Model: No vehicles match the keyword \"\"., Type: No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found.\"., Daily Rate: $100.0, Status: Available\n not found. not found.");
    }

    @Test
    public void test3843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3843");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.lang.String str9 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.", (int) (byte) 1);
        java.util.List<org.example.Vehicle> vehicleList10 = rentalSystem0.getVehicles();
        java.lang.String str14 = rentalSystem0.rentVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.", (int) (short) 1);
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found. not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\".\".", (double) (short) 100);
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.\".", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found. not found. not found.\". not found.\". not found.\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\". not found. not found.\".\". not found. not found.", 0.0d);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found." + "'", str9, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList10);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found." + "'", str14, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.");
    }

    @Test
    public void test3844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3844");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.", "hi!", (int) (short) 100);
        java.util.List<org.example.Vehicle> vehicleList9 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found.", "No vehicles match the keyword \"\".");
        java.lang.String str14 = rentalSystem0.searchVehicle("");
        int int15 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Vehicle> vehicleList16 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList17 = rentalSystem0.getVehicles();
        java.lang.String str19 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle is already available. not found. not found.\". not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList9);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "No vehicles match the keyword \"\"." + "'", str14, "No vehicles match the keyword \"\".");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(vehicleList16);
        org.junit.Assert.assertNotNull(vehicleList17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle is already available. not found. not found.\". not found.\". not found. not found." + "'", str19, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle is already available. not found. not found.\". not found.\". not found. not found.");
    }

    @Test
    public void test3845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3845");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID hi! not found.\".", "Vehicle with ID Vehicle with ID  not found. not found.");
        java.lang.String str8 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"\". not found.");
        java.lang.String str10 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found.");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found." + "'", str10, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found.");
    }

    @Test
    public void test3846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3846");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\". not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.", 1.0d);
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\". not found.\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\". not found.", (double) 'a');
        java.lang.String str18 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found. not found.");
        rentalSystem0.addCustomer("Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\". not found.\". not found.", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found. not found. not found.\". not found.\".");
        java.util.List<org.example.Customer> customerList22 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found.\". not found.", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID hi! not found.\".\". not found.");
        java.lang.String str29 = rentalSystem0.rentVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\".\".", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\". not found.\". not found. not found. not found.", (int) (byte) 0);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found. not found. not found." + "'", str18, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found. not found. not found.");
        org.junit.Assert.assertNotNull(customerList22);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\".\". not found." + "'", str29, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\".\". not found.");
    }

    @Test
    public void test3847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3847");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.returnVehicle("Vehicle with ID  not found.");
        java.lang.String str12 = rentalSystem0.rentVehicle("Vehicle with ID hi! not found.", "Vehicle with ID Vehicle with ID  not found. not found.", (int) (byte) 10);
        java.lang.String str14 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        java.util.List<org.example.Vehicle> vehicleList15 = rentalSystem0.getVehicles();
        java.lang.String str19 = rentalSystem0.rentVehicle("", "Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.", (int) (byte) 100);
        java.util.List<org.example.Vehicle> vehicleList20 = rentalSystem0.getVehicles();
        java.lang.String str22 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found. not found. not found.\".\".\". not found.");
        java.util.List<org.example.Customer> customerList23 = rentalSystem0.getCustomers();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID  not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID  not found. not found.");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID Vehicle with ID hi! not found. not found." + "'", str12, "Vehicle with ID Vehicle with ID hi! not found. not found.");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found." + "'", str14, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList15);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Vehicle with ID  not found." + "'", str19, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found. not found. not found.\".\".\". not found.\"." + "'", str22, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found. not found. not found.\".\".\". not found.\".");
        org.junit.Assert.assertNotNull(customerList23);
    }

    @Test
    public void test3848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3848");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("hi!");
        rentalSystem0.addCustomer("ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n", "No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".");
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\".", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID hi! not found.\".\".", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\".", 0.0d);
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\".", "Vehicle with ID Vehicle with ID  not found. not found.");
        java.util.List<org.example.Customer> customerList15 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\". not found.\". not found.\". not found. not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found. not found.\".\". not found. not found.");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID hi! not found." + "'", str3, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertNotNull(customerList15);
    }

    @Test
    public void test3849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3849");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("");
        rentalSystem0.addVehicle("Vehicle with ID  not found.", "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.", "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.", (double) (short) 0);
        java.lang.String str10 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"hi!\". not found.");
        int int11 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str13 = rentalSystem0.returnVehicle("Vehicle with ID  not found.");
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.\". not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found.", (double) 'a');
        rentalSystem0.addCustomer("Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found. not found.\". not found.\". not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found. not found. not found.\".");
        java.lang.String str23 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\". not found.\".");
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\". not found.\".\".\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found.\". not found. not found.\".");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID  not found." + "'", str3, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found." + "'", str10, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle is already available." + "'", str13, "Vehicle is already available.");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\". not found.\". not found." + "'", str23, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\". not found.\". not found.");
    }

    @Test
    public void test3850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3850");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("hi!");
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        rentalSystem0.addVehicle("Vehicle with ID  not found.", "Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID hi! not found.", 1.0d);
        java.lang.String str13 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\".", (int) (short) 100);
        int int14 = rentalSystem0.getAvailableVehicleCount();
        java.lang.Class<?> wildcardClass15 = rentalSystem0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID hi! not found." + "'", str3, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found." + "'", str13, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test3851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3851");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList5 = rentalSystem0.getVehicles();
        java.lang.String str9 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".", "No vehicles match the keyword \"Vehicle with ID  not found.\".", (int) ' ');
        java.lang.String str11 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        java.lang.String str13 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.");
        java.lang.String str15 = rentalSystem0.returnVehicle("ID: Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found. not found.\". not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\". not found., Type: No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\"., Daily Rate: $10.0, Status: Available\n");
        java.lang.String str19 = rentalSystem0.rentVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\". not found. not found. not found. not found.\".\".", "Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found., Model: Vehicle with ID Vehicle with ID hi! not found. not found., Type: No vehicles match the keyword \"hi!\"., Daily Rate: $1.0, Status: Available\nID: Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.\". not found., Model: No vehicles match the keyword \"\"., Type: No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found.\"., Daily Rate: $100.0, Status: Available\n not found. not found. not found.", (int) (short) 10);
        java.lang.String str21 = rentalSystem0.searchVehicle("ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertNotNull(vehicleList5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found." + "'", str9, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found." + "'", str11, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\"." + "'", str13, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Vehicle with ID ID: Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found. not found.\". not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\". not found., Type: No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\"., Daily Rate: $10.0, Status: Available\n not found." + "'", str15, "Vehicle with ID ID: Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found. not found.\". not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\". not found., Type: No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\"., Daily Rate: $10.0, Status: Available\n not found.");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\". not found. not found. not found. not found.\".\". not found." + "'", str19, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\". not found. not found. not found. not found.\".\". not found.");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "No vehicles match the keyword \"ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n\"." + "'", str21, "No vehicles match the keyword \"ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n\".");
    }

    @Test
    public void test3852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3852");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.returnVehicle("Vehicle with ID  not found.");
        java.lang.String str10 = rentalSystem0.returnVehicle("hi!");
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\".", (double) 2);
        java.lang.String str17 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.");
        java.util.List<org.example.Customer> customerList18 = rentalSystem0.getCustomers();
        java.lang.String str22 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\".\". not found. not found. not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\". not found.\". not found.", (int) (byte) 10);
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\". not found.\". not found. not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\". not found. not found. not found. not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID  not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID  not found. not found.");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID hi! not found." + "'", str10, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\"." + "'", str17, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".");
        org.junit.Assert.assertNotNull(customerList18);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\".\". not found. not found. not found. not found." + "'", str22, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\".\". not found. not found. not found. not found.");
    }

    @Test
    public void test3853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3853");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.searchVehicle("Vehicle with ID  not found.");
        rentalSystem0.addVehicle("hi!", "Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID hi! not found.", (double) 0);
        rentalSystem0.addCustomer("Vehicle with ID hi! not found.", "hi!");
        java.lang.String str18 = rentalSystem0.returnVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".");
        int int19 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID hi! not found.\".", "ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n");
        java.util.List<org.example.Customer> customerList23 = rentalSystem0.getCustomers();
        java.lang.String str27 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found. not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\". not found. not found.", (int) ' ');
        java.lang.String str29 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found. not found.\". not found.\". not found.");
        java.util.List<org.example.Vehicle> vehicleList30 = rentalSystem0.getVehicles();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "No vehicles match the keyword \"Vehicle with ID  not found.\"." + "'", str8, "No vehicles match the keyword \"Vehicle with ID  not found.\".");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found." + "'", str18, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(customerList23);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found. not found. not found." + "'", str27, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found. not found.\". not found.\". not found. not found." + "'", str29, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found. not found.\". not found.\". not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList30);
    }

    @Test
    public void test3854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3854");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID  not found. not found.", "No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        java.lang.String str8 = rentalSystem0.rentVehicle("hi!", "No vehicles match the keyword \"Vehicle with ID  not found.\".", 100);
        java.lang.String str10 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID hi! not found. not found.");
        rentalSystem0.addVehicle("ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.", "No vehicles match the keyword \"\".", (double) (byte) 10);
        java.lang.String str17 = rentalSystem0.returnVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".");
        java.util.List<org.example.Vehicle> vehicleList18 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList19 = rentalSystem0.getVehicles();
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\". not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found.\".\".", (double) '#');
        rentalSystem0.addCustomer("Vehicle with ID  not found.", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID  not found.\".\". not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID hi! not found." + "'", str8, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found." + "'", str10, "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found." + "'", str17, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.");
        org.junit.Assert.assertNotNull(vehicleList18);
        org.junit.Assert.assertNotNull(vehicleList19);
    }

    @Test
    public void test3855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3855");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID  not found.\".", "hi!");
        int int10 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str12 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.");
        java.lang.String str14 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\". not found.");
        rentalSystem0.addVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\".\".", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\". not found. not found. not found.", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\". not found. not found. not found.", 10.0d);
        java.lang.String str21 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.");
        java.lang.String str25 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\".\". not found. not found. not found. not found.\".", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found. not found. not found.\".\".\". not found.\".", 0);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\"." + "'", str12, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\".");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\". not found. not found." + "'", str14, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\". not found. not found.");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found." + "'", str21, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\".\". not found. not found. not found. not found.\". not found." + "'", str25, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\".\". not found. not found. not found. not found.\". not found.");
    }

    @Test
    public void test3856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3856");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.", "Vehicle with ID Vehicle with ID hi! not found. not found.", "No vehicles match the keyword \"hi!\".", (double) 1L);
        java.lang.String str13 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"hi!\". not found.");
        java.lang.String str15 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found. not found.");
        java.util.List<org.example.Customer> customerList16 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\".\". not found. not found. not found. not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found. not found.\".\".");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\"." + "'", str13, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\".");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found. not found. not found." + "'", str15, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found. not found. not found.");
        org.junit.Assert.assertNotNull(customerList16);
    }

    @Test
    public void test3857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3857");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("hi!");
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        int int5 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str9 = rentalSystem0.rentVehicle("No vehicles match the keyword \"\".", "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.", (int) (short) 10);
        java.lang.String str13 = rentalSystem0.rentVehicle("No vehicles match the keyword \"\".", "", (-1));
        java.lang.String str15 = rentalSystem0.returnVehicle("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\".");
        java.util.List<org.example.Customer> customerList16 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList17 = rentalSystem0.getCustomers();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID hi! not found." + "'", str3, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Vehicle with ID No vehicles match the keyword \"\". not found." + "'", str9, "Vehicle with ID No vehicles match the keyword \"\". not found.");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID No vehicles match the keyword \"\". not found." + "'", str13, "Vehicle with ID No vehicles match the keyword \"\". not found.");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\". not found." + "'", str15, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\". not found.");
        org.junit.Assert.assertNotNull(customerList16);
        org.junit.Assert.assertNotNull(customerList17);
    }

    @Test
    public void test3858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3858");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.");
        java.lang.String str10 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"hi!\". not found.");
        java.util.List<org.example.Vehicle> vehicleList11 = rentalSystem0.getVehicles();
        java.lang.String str15 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found. not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.\".\".", (int) 'a');
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\". not found. not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found. not found.\". not found. not found.\".");
        int int19 = rentalSystem0.getAvailableVehicleCount();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\"." + "'", str8, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\".");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\"." + "'", str10, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\".");
        org.junit.Assert.assertNotNull(vehicleList11);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found. not found. not found." + "'", str15, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found. not found. not found.");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
    }

    @Test
    public void test3859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3859");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("hi!");
        rentalSystem0.addCustomer("ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n", "No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".");
        java.lang.String str10 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".", (int) (byte) 1);
        java.lang.String str14 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found. not found.", "No vehicles match the keyword \"No vehicles match the keyword \"\".\".", (-1));
        int int15 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Vehicle> vehicleList16 = rentalSystem0.getVehicles();
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\". not found. not found. not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\". not found.\". not found.", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\". not found. not found. not found. not found. not found.", (double) 3);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID hi! not found." + "'", str3, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found. not found." + "'", str10, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found. not found. not found." + "'", str14, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found. not found. not found.");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(vehicleList16);
    }

    @Test
    public void test3860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3860");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        rentalSystem0.addCustomer("hi!", "Vehicle with ID Vehicle with ID  not found. not found.");
        java.util.List<org.example.Vehicle> vehicleList9 = rentalSystem0.getVehicles();
        java.lang.String str11 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\".");
        java.util.List<org.example.Customer> customerList12 = rentalSystem0.getCustomers();
        java.lang.String str14 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found. not found.");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList9);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found." + "'", str11, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.");
        org.junit.Assert.assertNotNull(customerList12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found. not found. not found." + "'", str14, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found. not found. not found.");
    }

    @Test
    public void test3861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3861");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.lang.String str5 = rentalSystem0.returnVehicle("Vehicle with ID  not found.");
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID  not found.\".", "No vehicles match the keyword \"\".");
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.", "Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.\".", (double) (byte) 100);
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found.\".", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found.");
        java.util.List<org.example.Customer> customerList17 = rentalSystem0.getCustomers();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID Vehicle with ID  not found. not found." + "'", str5, "Vehicle with ID Vehicle with ID  not found. not found.");
        org.junit.Assert.assertNotNull(customerList17);
    }

    @Test
    public void test3862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3862");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        rentalSystem0.addCustomer("hi!", "Vehicle with ID Vehicle with ID  not found. not found.");
        java.util.List<org.example.Vehicle> vehicleList9 = rentalSystem0.getVehicles();
        java.lang.String str11 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID  not found. not found.");
        rentalSystem0.addCustomer("Vehicle with ID hi! not found.", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".");
        java.util.List<org.example.Vehicle> vehicleList15 = rentalSystem0.getVehicles();
        int int16 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str20 = rentalSystem0.rentVehicle("", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\". not found. not found. not found. not found.\".", (int) (short) 0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList9);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"." + "'", str11, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".");
        org.junit.Assert.assertNotNull(vehicleList15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Vehicle with ID  not found." + "'", str20, "Vehicle with ID  not found.");
    }

    @Test
    public void test3863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3863");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        java.lang.String str7 = rentalSystem0.searchVehicle("Vehicle with ID hi! not found.");
        java.util.List<org.example.Customer> customerList8 = rentalSystem0.getCustomers();
        java.lang.String str10 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\". not found.\". not found. not found. not found. not found.");
        int int11 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList12 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList13 = rentalSystem0.getCustomers();
        java.lang.String str15 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\".\".\". not found. not found.\". not found. not found.");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "No vehicles match the keyword \"Vehicle with ID hi! not found.\"." + "'", str7, "No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        org.junit.Assert.assertNotNull(customerList8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\". not found.\". not found. not found. not found. not found.\"." + "'", str10, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\". not found.\". not found. not found. not found. not found.\".");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(customerList12);
        org.junit.Assert.assertNotNull(customerList13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\".\".\". not found. not found.\". not found. not found.\"." + "'", str15, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\".\".\". not found. not found.\". not found. not found.\".");
    }

    @Test
    public void test3864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3864");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        int int2 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        int int4 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".", "No vehicles match the keyword \"Vehicle with ID  not found.\".");
        int int8 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str10 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\".");
        java.util.List<org.example.Vehicle> vehicleList11 = rentalSystem0.getVehicles();
        java.lang.String str13 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found.\". not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found." + "'", str10, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found.\". not found. not found. not found." + "'", str13, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found.\". not found. not found. not found.");
    }

    @Test
    public void test3865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3865");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.returnVehicle("");
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".", "No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".");
        java.lang.String str15 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\".", "No vehicles match the keyword \"Vehicle with ID  not found.\".", (int) (short) 100);
        java.lang.String str19 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found.", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".\".\".", 0);
        java.lang.String str23 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found. not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".\".", (int) (byte) 100);
        int int24 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str26 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.\".");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID  not found." + "'", str8, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found." + "'", str15, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found. not found." + "'", str19, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found. not found. not found." + "'", str23, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found. not found. not found.");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.\".\"." + "'", str26, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.\".\".");
    }

    @Test
    public void test3866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3866");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID  not found.", 100);
        java.lang.String str12 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID  not found.\".", "Vehicle with ID Vehicle with ID hi! not found. not found.", (int) (short) -1);
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.");
        java.lang.String str19 = rentalSystem0.rentVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\".\".", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found. not found.", (int) (byte) 100);
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.\".\". not found.", "Vehicle with ID No vehicles match the keyword \"\". not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found. not found.\".", (double) (byte) 100);
        java.util.List<org.example.Customer> customerList25 = rentalSystem0.getCustomers();
        java.lang.String str29 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found. not found. not found.", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found.", (int) (short) 0);
        java.lang.String str31 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\". not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found." + "'", str12, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\".\". not found." + "'", str19, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\".\". not found.");
        org.junit.Assert.assertNotNull(customerList25);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found. not found. not found. not found." + "'", str29, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found. not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\". not found. not found.\"." + "'", str31, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\". not found. not found.\".");
    }

    @Test
    public void test3867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3867");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList7 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found.", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".");
        java.lang.String str12 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.\".");
        java.util.List<org.example.Vehicle> vehicleList13 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList14 = rentalSystem0.getVehicles();
        int int15 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str17 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found. not found.\".\". not found. not found. not found.");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertNotNull(vehicleList7);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.\". not found." + "'", str12, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList13);
        org.junit.Assert.assertNotNull(vehicleList14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found. not found.\".\". not found. not found. not found.\"." + "'", str17, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found. not found.\".\". not found. not found. not found.\".");
    }

    @Test
    public void test3868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3868");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.returnVehicle("Vehicle with ID  not found.");
        java.lang.String str10 = rentalSystem0.returnVehicle("hi!");
        java.lang.String str12 = rentalSystem0.searchVehicle("");
        rentalSystem0.addCustomer("Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".");
        java.lang.String str17 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".");
        java.lang.String str19 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".");
        java.util.List<org.example.Vehicle> vehicleList20 = rentalSystem0.getVehicles();
        java.lang.String str22 = rentalSystem0.returnVehicle("");
        int int23 = rentalSystem0.getAvailableVehicleCount();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID  not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID  not found. not found.");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID hi! not found." + "'", str10, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "No vehicles match the keyword \"\"." + "'", str12, "No vehicles match the keyword \"\".");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\". not found." + "'", str17, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\". not found." + "'", str19, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Vehicle with ID  not found." + "'", str22, "Vehicle with ID  not found.");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
    }

    @Test
    public void test3869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3869");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.returnVehicle("Vehicle with ID  not found.");
        java.lang.String str10 = rentalSystem0.returnVehicle("hi!");
        java.lang.String str12 = rentalSystem0.searchVehicle("");
        rentalSystem0.addCustomer("Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".");
        java.lang.String str17 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".");
        java.lang.String str19 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".");
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.\". not found.\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.\". not found.", "ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n", (double) (byte) 1);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID  not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID  not found. not found.");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID hi! not found." + "'", str10, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "No vehicles match the keyword \"\"." + "'", str12, "No vehicles match the keyword \"\".");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\". not found." + "'", str17, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\". not found." + "'", str19, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\". not found.");
    }

    @Test
    public void test3870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3870");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID  not found.", 100);
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID  not found.\".", "Vehicle with ID Vehicle with ID  not found. not found.");
        java.lang.String str13 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.");
        java.lang.String str15 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle is already available. not found.\".");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\"." + "'", str13, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle is already available. not found.\".\"." + "'", str15, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle is already available. not found.\".\".");
    }

    @Test
    public void test3871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3871");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList5 = rentalSystem0.getVehicles();
        java.lang.String str9 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".", "No vehicles match the keyword \"Vehicle with ID  not found.\".", (int) ' ');
        java.lang.String str13 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID  not found. not found.", "", (int) (byte) -1);
        int int14 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.", "Vehicle with ID hi! not found.");
        rentalSystem0.addCustomer("Vehicle with ID No vehicles match the keyword \"hi!\". not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\". not found.");
        java.lang.String str22 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\". not found. not found. not found.");
        java.util.List<org.example.Customer> customerList23 = rentalSystem0.getCustomers();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertNotNull(vehicleList5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found." + "'", str9, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str13, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\". not found. not found. not found.\"." + "'", str22, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\". not found. not found. not found.\".");
        org.junit.Assert.assertNotNull(customerList23);
    }

    @Test
    public void test3872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3872");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.returnVehicle("Vehicle with ID  not found.");
        java.lang.String str12 = rentalSystem0.rentVehicle("Vehicle with ID hi! not found.", "Vehicle with ID Vehicle with ID  not found. not found.", (int) (byte) 10);
        java.lang.String str14 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        java.util.List<org.example.Vehicle> vehicleList15 = rentalSystem0.getVehicles();
        java.lang.String str19 = rentalSystem0.rentVehicle("", "Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.", (int) (byte) 100);
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found. not found.\". not found.", "ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found. not found.\". not found. not found.", 0.0d);
        java.lang.String str28 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found. not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\".", (int) ' ');
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\". not found. not found.", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\".\".\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\". not found.\". not found.\". not found.", (double) 1L);
        rentalSystem0.addVehicle("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\".\".\".", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n\". not found.\". not found.\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found. not found. not found.\".\". not found.\". not found.", (double) (short) 100);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID  not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID  not found. not found.");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID Vehicle with ID hi! not found. not found." + "'", str12, "Vehicle with ID Vehicle with ID hi! not found. not found.");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found." + "'", str14, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList15);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Vehicle with ID  not found." + "'", str19, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found. not found. not found. not found." + "'", str28, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found. not found. not found. not found.");
    }

    @Test
    public void test3873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3873");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID  not found.\".", "hi!");
        int int10 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList11 = rentalSystem0.getCustomers();
        java.lang.String str13 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.");
        int int14 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str16 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.\".");
        int int17 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.\". not found.\". not found.", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\". not found. not found. not found.", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\". not found.\". not found.\".\".\".\". not found.", (double) (short) 0);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(customerList11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\"." + "'", str13, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.\". not found." + "'", str16, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.\". not found.");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
    }

    @Test
    public void test3874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3874");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.returnVehicle("Vehicle with ID  not found.");
        java.lang.String str10 = rentalSystem0.returnVehicle("hi!");
        java.util.List<org.example.Customer> customerList11 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList12 = rentalSystem0.getCustomers();
        java.lang.String str14 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found. not found. not found.");
        java.lang.String str16 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.\". not found.\". not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID  not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID  not found. not found.");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID hi! not found." + "'", str10, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertNotNull(customerList11);
        org.junit.Assert.assertNotNull(customerList12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found. not found. not found.\"." + "'", str14, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found. not found. not found.\".");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.\". not found.\". not found. not found.\"." + "'", str16, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.\". not found.\". not found. not found.\".");
    }

    @Test
    public void test3875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3875");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.returnVehicle("");
        int int9 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str11 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.");
        java.lang.String str15 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID  not found. not found.", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".", (int) (short) 0);
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.");
        java.lang.String str20 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\". not found.");
        java.lang.String str22 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.");
        rentalSystem0.addCustomer("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found. not found.\". not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found.\".");
        // The following exception was thrown during execution in test generation
        try {
            rentalSystem0.addVehicle("", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\".\". not found. not found. not found. not found.\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n\".\".\".\". not found. not found.", 10.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Vehicle ID cannot be null or empty");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID  not found." + "'", str8, "Vehicle with ID  not found.");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found." + "'", str11, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str15, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\". not found.\"." + "'", str20, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\". not found.\".");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\"." + "'", str22, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\".");
    }

    @Test
    public void test3876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3876");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        int int2 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        int int4 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".", "No vehicles match the keyword \"Vehicle with ID  not found.\".");
        java.util.List<org.example.Vehicle> vehicleList8 = rentalSystem0.getVehicles();
        java.lang.String str10 = rentalSystem0.returnVehicle("");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(vehicleList8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID  not found." + "'", str10, "Vehicle with ID  not found.");
    }

    @Test
    public void test3877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3877");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("");
        int int4 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Vehicle> vehicleList5 = rentalSystem0.getVehicles();
        java.lang.String str7 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found.");
        java.lang.String str9 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found.");
        java.lang.String str13 = rentalSystem0.rentVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\".", "Vehicle with ID Vehicle with ID hi! not found. not found.", 100);
        java.lang.String str15 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".");
        java.lang.Class<?> wildcardClass16 = rentalSystem0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID  not found." + "'", str3, "Vehicle with ID  not found.");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(vehicleList5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found." + "'", str7, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found.\"." + "'", str9, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found.\".");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\". not found." + "'", str13, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\". not found.");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\"." + "'", str15, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\".");
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test3878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3878");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        int int7 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\".\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found.");
        int int11 = rentalSystem0.getAvailableVehicleCount();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
    }

    @Test
    public void test3879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3879");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("");
        java.util.List<org.example.Vehicle> vehicleList4 = rentalSystem0.getVehicles();
        java.lang.String str6 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID  not found. not found.");
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\". not found. not found.");
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found. not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\". not found. not found. not found. not found. not found.\".\".");
        // The following exception was thrown during execution in test generation
        try {
            rentalSystem0.addVehicle("", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\". not found. not found. not found.\". not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle is already available. not found. not found.\". not found.\". not found.", (double) 100L);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Vehicle ID cannot be null or empty");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID  not found." + "'", str3, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str6, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
    }

    @Test
    public void test3880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3880");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("hi!");
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID hi! not found. not found.", "Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID hi! not found.", 10.0d);
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n\".\".\". not found. not found. not found.", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\". not found. not found. not found. not found.", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\". not found. not found. not found.", (double) 0);
        java.util.List<org.example.Customer> customerList14 = rentalSystem0.getCustomers();
        java.lang.String str18 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found.\".\". not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\". not found. not found. not found. not found. not found.\".", (int) (byte) -1);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID hi! not found." + "'", str3, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertNotNull(customerList14);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found.\".\". not found. not found. not found." + "'", str18, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found.\".\". not found. not found. not found.");
    }

    @Test
    public void test3881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3881");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID  not found. not found.", "No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        java.lang.String str8 = rentalSystem0.rentVehicle("hi!", "No vehicles match the keyword \"Vehicle with ID  not found.\".", 100);
        java.lang.String str10 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID hi! not found. not found.");
        rentalSystem0.addVehicle("ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.", "No vehicles match the keyword \"\".", (double) (byte) 10);
        java.lang.String str17 = rentalSystem0.returnVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".");
        rentalSystem0.addVehicle("Vehicle with ID ID: Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found., Model: Vehicle with ID Vehicle with ID hi! not found. not found., Type: No vehicles match the keyword \"hi!\"., Daily Rate: $1.0, Status: Available\nID: Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.\". not found., Model: No vehicles match the keyword \"\"., Type: No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found.\"., Daily Rate: $100.0, Status: Available\n not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found.\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found. not found. not found.\".", (double) (byte) 1);
        java.util.List<org.example.Vehicle> vehicleList23 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList24 = rentalSystem0.getVehicles();
        java.lang.Class<?> wildcardClass25 = vehicleList24.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID hi! not found." + "'", str8, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found." + "'", str10, "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found." + "'", str17, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.");
        org.junit.Assert.assertNotNull(vehicleList23);
        org.junit.Assert.assertNotNull(vehicleList24);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test3882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3882");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        rentalSystem0.addCustomer("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.\". not found.\".\".\". not found.", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\".\".\". not found.");
        int int4 = rentalSystem0.getAvailableVehicleCount();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
    }

    @Test
    public void test3883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3883");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList4 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID  not found. not found.", "hi!");
        java.lang.String str11 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID hi! not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".", (int) '4');
        java.lang.String str13 = rentalSystem0.returnVehicle("");
        rentalSystem0.addVehicle("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\".\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\".", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID  not found.\".\".", 1.0d);
        java.lang.String str20 = rentalSystem0.returnVehicle("Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.");
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\". not found.\". not found.\". not found.", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.\". not found.\".", (double) 1.0f);
        java.lang.String str27 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\".\". not found.\".");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(vehicleList4);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found." + "'", str11, "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID  not found." + "'", str13, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found." + "'", str20, "Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\".\". not found.\".\"." + "'", str27, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\".\". not found.\".\".");
    }

    @Test
    public void test3884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3884");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.returnVehicle("Vehicle with ID  not found.");
        java.lang.String str12 = rentalSystem0.rentVehicle("Vehicle with ID hi! not found.", "Vehicle with ID Vehicle with ID  not found. not found.", (int) (byte) 10);
        java.lang.String str14 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        java.util.List<org.example.Vehicle> vehicleList15 = rentalSystem0.getVehicles();
        java.lang.String str19 = rentalSystem0.rentVehicle("", "Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.", (int) (byte) 100);
        java.lang.String str21 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.");
        java.util.List<org.example.Vehicle> vehicleList22 = rentalSystem0.getVehicles();
        java.lang.String str24 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\". not found. not found.");
        java.util.List<org.example.Vehicle> vehicleList25 = rentalSystem0.getVehicles();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID  not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID  not found. not found.");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID Vehicle with ID hi! not found. not found." + "'", str12, "Vehicle with ID Vehicle with ID hi! not found. not found.");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found." + "'", str14, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList15);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Vehicle with ID  not found." + "'", str19, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.\"." + "'", str21, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.\".");
        org.junit.Assert.assertNotNull(vehicleList22);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\". not found. not found. not found." + "'", str24, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\". not found. not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList25);
    }

    @Test
    public void test3885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3885");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        int int7 = rentalSystem0.getAvailableVehicleCount();
        int int8 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\".", "hi!");
        java.lang.String str15 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\".", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID  not found.\".\".", (int) 'a');
        java.lang.String str17 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\".");
        java.util.List<org.example.Vehicle> vehicleList18 = rentalSystem0.getVehicles();
        java.lang.Class<?> wildcardClass19 = vehicleList18.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found." + "'", str15, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\".\"." + "'", str17, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\".\".");
        org.junit.Assert.assertNotNull(vehicleList18);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test3886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3886");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.lang.String str5 = rentalSystem0.returnVehicle("Vehicle with ID  not found.");
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID  not found.\".", "No vehicles match the keyword \"\".");
        java.util.List<org.example.Customer> customerList9 = rentalSystem0.getCustomers();
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\". not found.", "ID: No vehicles match the keyword \"Vehicle with ID  not found.\"., Model: No vehicles match the keyword \"Vehicle with ID  not found.\"., Type: Vehicle with ID  not found., Daily Rate: $10.0, Status: Available\n", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\". not found. not found. not found. not found.", (double) 2);
        java.util.List<org.example.Vehicle> vehicleList15 = rentalSystem0.getVehicles();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID Vehicle with ID  not found. not found." + "'", str5, "Vehicle with ID Vehicle with ID  not found. not found.");
        org.junit.Assert.assertNotNull(customerList9);
        org.junit.Assert.assertNotNull(vehicleList15);
    }

    @Test
    public void test3887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3887");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.searchVehicle("Vehicle with ID  not found.");
        rentalSystem0.addVehicle("hi!", "Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID hi! not found.", (double) 0);
        rentalSystem0.addCustomer("Vehicle with ID hi! not found.", "hi!");
        java.util.List<org.example.Vehicle> vehicleList17 = rentalSystem0.getVehicles();
        int int18 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str20 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found. not found. not found.");
        java.lang.String str22 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found.\".");
        java.util.List<org.example.Vehicle> vehicleList23 = rentalSystem0.getVehicles();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "No vehicles match the keyword \"Vehicle with ID  not found.\"." + "'", str8, "No vehicles match the keyword \"Vehicle with ID  not found.\".");
        org.junit.Assert.assertNotNull(vehicleList17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found. not found. not found. not found." + "'", str20, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found. not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found.\". not found." + "'", str22, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList23);
    }

    @Test
    public void test3888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3888");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList3 = rentalSystem0.getVehicles();
        int int4 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str6 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found.\". not found.");
        java.lang.Class<?> wildcardClass7 = rentalSystem0.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(vehicleList3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found.\". not found. not found." + "'", str6, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found.\". not found. not found.");
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test3889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3889");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.lang.String str7 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".");
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID  not found.");
        int int11 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found.", "Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.");
        java.lang.String str18 = rentalSystem0.rentVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found. not found.\". not found.", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\".\".", (int) (short) 0);
        java.util.List<org.example.Customer> customerList19 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\". not found.\".", "Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found.");
        java.util.List<org.example.Customer> customerList23 = rentalSystem0.getCustomers();
        int int24 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found. not found.\".", "Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.");
        int int28 = rentalSystem0.getAvailableVehicleCount();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\"." + "'", str7, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found. not found.\". not found. not found." + "'", str18, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found. not found.\". not found. not found.");
        org.junit.Assert.assertNotNull(customerList19);
        org.junit.Assert.assertNotNull(customerList23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
    }

    @Test
    public void test3890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3890");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("");
        rentalSystem0.addVehicle("Vehicle with ID  not found.", "Vehicle with ID hi! not found.", "Vehicle with ID Vehicle with ID hi! not found. not found.", (double) '4');
        java.lang.String str10 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".");
        int int11 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str13 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found. not found.");
        java.util.List<org.example.Customer> customerList14 = rentalSystem0.getCustomers();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID  not found." + "'", str3, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\". not found." + "'", str10, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\". not found.");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found. not found. not found." + "'", str13, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found. not found. not found.");
        org.junit.Assert.assertNotNull(customerList14);
    }

    @Test
    public void test3891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3891");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        int int7 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\".\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found.");
        java.lang.String str12 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found.");
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\".", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.", 0.0d);
        java.lang.String str19 = rentalSystem0.returnVehicle("");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found. not found." + "'", str12, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found. not found.");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Vehicle with ID  not found." + "'", str19, "Vehicle with ID  not found.");
    }

    @Test
    public void test3892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3892");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID  not found. not found.", "No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        java.lang.String str8 = rentalSystem0.rentVehicle("hi!", "No vehicles match the keyword \"Vehicle with ID  not found.\".", 100);
        java.lang.String str10 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID hi! not found. not found.");
        rentalSystem0.addVehicle("ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.", "No vehicles match the keyword \"\".", (double) (byte) 10);
        java.lang.String str17 = rentalSystem0.returnVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".");
        java.util.List<org.example.Customer> customerList18 = rentalSystem0.getCustomers();
        java.lang.String str20 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\". not found. not found. not found.");
        java.lang.String str22 = rentalSystem0.returnVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found.\". not found.\".\".");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID hi! not found." + "'", str8, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found." + "'", str10, "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found." + "'", str17, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.");
        org.junit.Assert.assertNotNull(customerList18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\". not found. not found. not found.\"." + "'", str20, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\". not found. not found. not found.\".");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found.\". not found.\".\". not found." + "'", str22, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found.\". not found.\".\". not found.");
    }

    @Test
    public void test3893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3893");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList7 = rentalSystem0.getVehicles();
        java.lang.String str11 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID hi! not found.\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.", (int) (byte) 100);
        java.lang.String str13 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".");
        int int14 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList15 = rentalSystem0.getCustomers();
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found.", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.", (double) '4');
        int int21 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str23 = rentalSystem0.returnVehicle("");
        java.lang.String str25 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\". not found.");
        java.lang.String str29 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.\". not found. not found. not found. not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.\". not found. not found.", (int) (byte) 10);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertNotNull(vehicleList7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found." + "'", str11, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\"." + "'", str13, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\".");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(customerList15);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Vehicle with ID  not found." + "'", str23, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\". not found. not found." + "'", str25, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\". not found. not found.");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.\". not found. not found. not found. not found. not found." + "'", str29, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.\". not found. not found. not found. not found. not found.");
    }

    @Test
    public void test3894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3894");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.lang.String str9 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.", (int) (byte) 1);
        java.lang.String str11 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\". not found.");
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found.\". not found.");
        java.lang.String str18 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\". not found.\". not found. not found.", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\".", (int) (short) 100);
        int int19 = rentalSystem0.getAvailableVehicleCount();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found." + "'", str9, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\". not found.\"." + "'", str11, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\". not found.\".");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\". not found.\". not found. not found. not found." + "'", str18, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\". not found.\". not found. not found. not found.");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
    }

    @Test
    public void test3895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3895");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID  not found.\".", "hi!");
        java.lang.String str11 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.");
        java.lang.String str13 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.");
        java.lang.String str15 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.\".");
        java.util.List<org.example.Vehicle> vehicleList16 = rentalSystem0.getVehicles();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\"." + "'", str11, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\".");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\"." + "'", str13, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\".");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.\".\"." + "'", str15, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.\".\".");
        org.junit.Assert.assertNotNull(vehicleList16);
    }

    @Test
    public void test3896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3896");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID  not found.\".", "hi!");
        java.lang.String str11 = rentalSystem0.returnVehicle("Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.");
        java.util.List<org.example.Vehicle> vehicleList12 = rentalSystem0.getVehicles();
        int int13 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\". not found. not found. not found. not found. not found.", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.", (double) 1L);
        int int19 = rentalSystem0.getAvailableVehicleCount();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found." + "'", str11, "Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
    }

    @Test
    public void test3897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3897");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID  not found.\".", "hi!");
        int int10 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList11 = rentalSystem0.getCustomers();
        java.lang.String str13 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.");
        java.lang.String str15 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".");
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.\". not found. not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\".\".", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\". not found.\".", (double) (byte) 100);
        java.util.List<org.example.Customer> customerList21 = rentalSystem0.getCustomers();
        java.lang.String str23 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID  not found.\".");
        java.lang.String str25 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\". not found. not found. not found. not found.\". not found.");
        rentalSystem0.addCustomer("Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\". not found.\". not found.", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found. not found. not found.\". not found.\". not found.\".");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(customerList11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\"." + "'", str13, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found." + "'", str15, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found.");
        org.junit.Assert.assertNotNull(customerList21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found." + "'", str23, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\". not found. not found. not found. not found.\". not found.\"." + "'", str25, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\". not found. not found. not found. not found.\". not found.\".");
    }

    @Test
    public void test3898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3898");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("");
        java.util.List<org.example.Vehicle> vehicleList4 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.rentVehicle("", "Vehicle with ID hi! not found.", (int) (short) 100);
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.", "No vehicles match the keyword \"Vehicle with ID  not found.\".", "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.", (double) 10);
        int int14 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str18 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found.", (int) (byte) -1);
        java.lang.String str22 = rentalSystem0.rentVehicle("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\".\".\".\".", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found. not found. not found.\".\". not found.\".", 0);
        java.lang.Class<?> wildcardClass23 = rentalSystem0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID  not found." + "'", str3, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID  not found." + "'", str8, "Vehicle with ID  not found.");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found. not found." + "'", str18, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\".\".\".\". not found." + "'", str22, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\".\".\".\". not found.");
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test3899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3899");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        int int2 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        int int4 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addVehicle("Vehicle with ID  not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.", (double) (byte) 100);
        rentalSystem0.addCustomer("Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.", "Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.");
        java.lang.String str14 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".\".\". not found.");
        int int15 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str17 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\".\". not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".\".\". not found.\"." + "'", str14, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".\".\". not found.\".");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\".\". not found. not found.\"." + "'", str17, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\".\". not found. not found.\".");
    }

    @Test
    public void test3900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3900");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList7 = rentalSystem0.getVehicles();
        java.lang.String str11 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID hi! not found.\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.", (int) (byte) 100);
        java.lang.String str13 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".");
        int int14 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList15 = rentalSystem0.getCustomers();
        java.lang.String str17 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\". not found.\". not found. not found. not found. not found.");
        java.lang.String str19 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\".\".\". not found. not found.");
        java.util.List<org.example.Vehicle> vehicleList20 = rentalSystem0.getVehicles();
        java.lang.String str24 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found. not found.\". not found.\". not found. not found.", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.\". not found.\".\".\".\". not found.\".", (int) 'a');
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertNotNull(vehicleList7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found." + "'", str11, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\"." + "'", str13, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\".");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(customerList15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\". not found.\". not found. not found. not found. not found.\"." + "'", str17, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\". not found.\". not found. not found. not found. not found.\".");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\".\".\". not found. not found. not found." + "'", str19, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\".\".\". not found. not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList20);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found. not found.\". not found.\". not found. not found. not found." + "'", str24, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found. not found.\". not found.\". not found. not found. not found.");
    }

    @Test
    public void test3901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3901");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList7 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList8 = rentalSystem0.getCustomers();
        int int9 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str13 = rentalSystem0.rentVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\".\".\".", (int) '#');
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\".\".\". not found. not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found.\".");
        rentalSystem0.addCustomer("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\". not found.", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\".\".");
        java.lang.String str21 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\". not found.");
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n\".\". not found. not found.", "Vehicle with ID Vehicle with ID Vehicle is already available. not found. not found.");
        java.util.List<org.example.Vehicle> vehicleList25 = rentalSystem0.getVehicles();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertNotNull(vehicleList7);
        org.junit.Assert.assertNotNull(customerList8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found." + "'", str13, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\". not found.\"." + "'", str21, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\". not found.\".");
        org.junit.Assert.assertNotNull(vehicleList25);
    }

    @Test
    public void test3902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3902");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList4 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID  not found. not found.", "hi!");
        java.lang.String str11 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID hi! not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".", (int) '4');
        java.lang.String str13 = rentalSystem0.returnVehicle("");
        rentalSystem0.addVehicle("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\".\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\".", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID  not found.\".\".", 1.0d);
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\". not found. not found. not found.", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.");
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\". not found. not found. not found.", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\".\".\". not found.");
        java.util.List<org.example.Customer> customerList25 = rentalSystem0.getCustomers();
        rentalSystem0.addVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\".\".", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"\".\". not found.\".\".\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID  not found.\".\".\". not found.\".\". not found. not found.", 0.0d);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(vehicleList4);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found." + "'", str11, "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID  not found." + "'", str13, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList25);
    }

    @Test
    public void test3903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3903");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("");
        java.util.List<org.example.Vehicle> vehicleList4 = rentalSystem0.getVehicles();
        java.lang.String str6 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID  not found. not found.");
        java.util.List<org.example.Customer> customerList7 = rentalSystem0.getCustomers();
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID  not found.\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.", (double) ' ');
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found. not found.", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found. not found. not found.", "Vehicle with ID Vehicle with ID hi! not found. not found.", (double) '#');
        java.lang.String str19 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\". not found.\". not found. not found. not found.");
        java.util.List<org.example.Vehicle> vehicleList20 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList21 = rentalSystem0.getCustomers();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID  not found." + "'", str3, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str6, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertNotNull(customerList7);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\". not found.\". not found. not found. not found. not found." + "'", str19, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\". not found.\". not found. not found. not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList20);
        org.junit.Assert.assertNotNull(customerList21);
    }

    @Test
    public void test3904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3904");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID  not found.", 100);
        java.util.List<org.example.Customer> customerList9 = rentalSystem0.getCustomers();
        java.lang.String str11 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found. not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertNotNull(customerList9);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found. not found. not found.\"." + "'", str11, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found. not found. not found.\".");
    }

    @Test
    public void test3905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3905");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.");
        java.util.List<org.example.Customer> customerList9 = rentalSystem0.getCustomers();
        int int10 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str12 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\"." + "'", str8, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\".");
        org.junit.Assert.assertNotNull(customerList9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found. not found.\"." + "'", str12, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found. not found.\".");
    }

    @Test
    public void test3906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3906");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.searchVehicle("Vehicle with ID  not found.");
        rentalSystem0.addVehicle("hi!", "Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID hi! not found.", (double) 0);
        rentalSystem0.addCustomer("Vehicle with ID hi! not found.", "hi!");
        java.util.List<org.example.Vehicle> vehicleList17 = rentalSystem0.getVehicles();
        java.lang.String str19 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found. not found. not found.");
        java.lang.String str21 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found. not found.");
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found. not found. not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.");
        java.util.List<org.example.Customer> customerList25 = rentalSystem0.getCustomers();
        java.lang.String str29 = rentalSystem0.rentVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found. not found.\". not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found. not found.\".\". not found.\".\".", (int) (short) 10);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "No vehicles match the keyword \"Vehicle with ID  not found.\"." + "'", str8, "No vehicles match the keyword \"Vehicle with ID  not found.\".");
        org.junit.Assert.assertNotNull(vehicleList17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found. not found. not found.\"." + "'", str19, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found. not found. not found.\".");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found. not found. not found." + "'", str21, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found. not found. not found.");
        org.junit.Assert.assertNotNull(customerList25);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found. not found.\". not found. not found." + "'", str29, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found. not found.\". not found. not found.");
    }

    @Test
    public void test3907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3907");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID  not found. not found.", "No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        java.util.List<org.example.Vehicle> vehicleList5 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID No vehicles match the keyword \"\". not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.");
        java.util.List<org.example.Customer> customerList9 = rentalSystem0.getCustomers();
        rentalSystem0.addVehicle("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found.\".\".\".", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found.\".\". not found.\".", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\".\". not found. not found. not found.", (double) (short) 0);
        java.util.List<org.example.Customer> customerList15 = rentalSystem0.getCustomers();
        java.lang.Class<?> wildcardClass16 = rentalSystem0.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList5);
        org.junit.Assert.assertNotNull(customerList9);
        org.junit.Assert.assertNotNull(customerList15);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test3908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3908");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.searchVehicle("Vehicle with ID  not found.");
        rentalSystem0.addVehicle("hi!", "Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID hi! not found.", (double) 0);
        java.util.List<org.example.Vehicle> vehicleList14 = rentalSystem0.getVehicles();
        java.lang.String str16 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\". not found.");
        java.lang.String str20 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\". not found. not found. not found.", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID  not found.\".\".\".", (-1));
        java.lang.String str22 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\".\". not found.\".");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "No vehicles match the keyword \"Vehicle with ID  not found.\"." + "'", str8, "No vehicles match the keyword \"Vehicle with ID  not found.\".");
        org.junit.Assert.assertNotNull(vehicleList14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\". not found.\"." + "'", str16, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\". not found.\".");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\". not found. not found. not found. not found." + "'", str20, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\". not found. not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\".\". not found.\". not found." + "'", str22, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\".\". not found.\". not found.");
    }

    @Test
    public void test3909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3909");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList7 = rentalSystem0.getVehicles();
        java.lang.String str11 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID hi! not found.\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.", (int) (byte) 100);
        int int12 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Vehicle> vehicleList13 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList14 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\".\".\". not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found. not found.\". not found. not found.\".");
        java.util.List<org.example.Vehicle> vehicleList18 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList19 = rentalSystem0.getCustomers();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertNotNull(vehicleList7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found." + "'", str11, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(vehicleList13);
        org.junit.Assert.assertNotNull(customerList14);
        org.junit.Assert.assertNotNull(vehicleList18);
        org.junit.Assert.assertNotNull(customerList19);
    }

    @Test
    public void test3910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3910");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.", "Vehicle with ID Vehicle with ID hi! not found. not found.", "No vehicles match the keyword \"hi!\".", (double) 1L);
        java.lang.String str13 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"hi!\". not found.");
        java.lang.String str17 = rentalSystem0.rentVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found.", (int) '4');
        java.util.List<org.example.Vehicle> vehicleList18 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList19 = rentalSystem0.getVehicles();
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\".", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\". not found.", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".", 0.0d);
        java.lang.String str26 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\".\". not found.\". not found.");
        java.lang.String str28 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found. not found. not found.\".");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\"." + "'", str13, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\".");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found." + "'", str17, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.");
        org.junit.Assert.assertNotNull(vehicleList18);
        org.junit.Assert.assertNotNull(vehicleList19);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\".\". not found.\". not found.\"." + "'", str26, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\".\". not found.\". not found.\".");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found. not found. not found.\". not found." + "'", str28, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found. not found. not found.\". not found.");
    }

    @Test
    public void test3911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3911");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList7 = rentalSystem0.getVehicles();
        java.lang.String str11 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID hi! not found.\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.", (int) (byte) 100);
        int int12 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Vehicle> vehicleList13 = rentalSystem0.getVehicles();
        java.lang.String str15 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\".");
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID  not found.\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\".", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.", (double) (byte) 1);
        java.util.List<org.example.Customer> customerList21 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList22 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found. not found.\".\". not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\". not found.");
        java.util.List<org.example.Vehicle> vehicleList26 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found.\". not found. not found. not found.\".", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found.\".\". not found.");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertNotNull(vehicleList7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found." + "'", str11, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(vehicleList13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found." + "'", str15, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.");
        org.junit.Assert.assertNotNull(customerList21);
        org.junit.Assert.assertNotNull(customerList22);
        org.junit.Assert.assertNotNull(vehicleList26);
    }

    @Test
    public void test3912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3912");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID  not found.\".", "hi!");
        rentalSystem0.addCustomer("No vehicles match the keyword \"hi!\".", "hi!");
        java.lang.String str14 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        java.util.List<org.example.Vehicle> vehicleList15 = rentalSystem0.getVehicles();
        java.lang.String str17 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.");
        int int18 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str22 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found.", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\".\".\".", 2);
        // The following exception was thrown during execution in test generation
        try {
            rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.\".\". not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found. not found.\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.\". not found. not found.\". not found. not found. not found. not found.\".", (double) (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Daily rate cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found." + "'", str14, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found." + "'", str17, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found." + "'", str22, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.");
    }

    @Test
    public void test3913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3913");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.searchVehicle("Vehicle with ID  not found.");
        rentalSystem0.addVehicle("hi!", "Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID hi! not found.", (double) 0);
        java.util.List<org.example.Vehicle> vehicleList14 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.\". not found.");
        java.lang.Class<?> wildcardClass18 = rentalSystem0.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "No vehicles match the keyword \"Vehicle with ID  not found.\"." + "'", str8, "No vehicles match the keyword \"Vehicle with ID  not found.\".");
        org.junit.Assert.assertNotNull(vehicleList14);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test3914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3914");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList5 = rentalSystem0.getVehicles();
        java.lang.String str9 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".", "No vehicles match the keyword \"Vehicle with ID  not found.\".", (int) ' ');
        java.lang.String str11 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\".", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\".\".");
        java.util.List<org.example.Customer> customerList15 = rentalSystem0.getCustomers();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertNotNull(vehicleList5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found." + "'", str9, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found." + "'", str11, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.");
        org.junit.Assert.assertNotNull(customerList15);
    }

    @Test
    public void test3915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3915");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        int int7 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addCustomer("hi!", "Vehicle with ID Vehicle with ID  not found. not found.");
        java.lang.String str12 = rentalSystem0.searchVehicle("No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".");
        java.lang.String str14 = rentalSystem0.searchVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".\".");
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found.\".", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.\".\". not found.");
        java.lang.String str21 = rentalSystem0.rentVehicle("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".\".\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found. not found.\". not found. not found.\".", (-1));
        int int22 = rentalSystem0.getAvailableVehicleCount();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\"." + "'", str12, "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\".");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".\".\"." + "'", str14, "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".\".\".");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".\".\". not found." + "'", str21, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".\".\". not found.");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
    }

    @Test
    public void test3916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3916");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.returnVehicle("Vehicle with ID  not found.");
        java.lang.String str12 = rentalSystem0.rentVehicle("Vehicle with ID hi! not found.", "Vehicle with ID Vehicle with ID  not found. not found.", (int) (byte) 10);
        java.lang.String str14 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        java.util.List<org.example.Vehicle> vehicleList15 = rentalSystem0.getVehicles();
        java.lang.String str19 = rentalSystem0.rentVehicle("", "Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.", (int) (byte) 100);
        java.lang.String str21 = rentalSystem0.searchVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\".\".");
        int int22 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".\". not found. not found. not found.", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found.");
        java.util.List<org.example.Customer> customerList26 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.\". not found.", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID  not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID  not found. not found.");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID Vehicle with ID hi! not found. not found." + "'", str12, "Vehicle with ID Vehicle with ID hi! not found. not found.");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found." + "'", str14, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList15);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Vehicle with ID  not found." + "'", str19, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\".\".\"." + "'", str21, "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\".\".\".");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(customerList26);
    }

    @Test
    public void test3917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3917");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.searchVehicle("Vehicle with ID  not found.");
        rentalSystem0.addVehicle("hi!", "Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID hi! not found.", (double) 0);
        rentalSystem0.addCustomer("Vehicle with ID hi! not found.", "hi!");
        java.lang.String str18 = rentalSystem0.returnVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".");
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID hi! not found.\".", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.", (double) (byte) 10);
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found.", 1.0d);
        int int29 = rentalSystem0.getAvailableVehicleCount();
        int int30 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str34 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\". not found.\".", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\".\". not found.", (int) (byte) 0);
        int int35 = rentalSystem0.getAvailableVehicleCount();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "No vehicles match the keyword \"Vehicle with ID  not found.\"." + "'", str8, "No vehicles match the keyword \"Vehicle with ID  not found.\".");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found." + "'", str18, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 3 + "'", int29 == 3);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 3 + "'", int30 == 3);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\". not found.\". not found." + "'", str34, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\". not found.\". not found.");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 3 + "'", int35 == 3);
    }

    @Test
    public void test3918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3918");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("");
        java.util.List<org.example.Vehicle> vehicleList4 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.rentVehicle("", "Vehicle with ID hi! not found.", (int) (short) 100);
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.", "No vehicles match the keyword \"Vehicle with ID  not found.\".", "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.", (double) 10);
        int int14 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Vehicle> vehicleList15 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found. not found.\".", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found. not found. not found. not found.");
        java.util.List<org.example.Vehicle> vehicleList19 = rentalSystem0.getVehicles();
        java.lang.Class<?> wildcardClass20 = rentalSystem0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID  not found." + "'", str3, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID  not found." + "'", str8, "Vehicle with ID  not found.");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(vehicleList15);
        org.junit.Assert.assertNotNull(vehicleList19);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test3919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3919");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        int int7 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str9 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID  not found.\".");
        java.lang.String str13 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID hi! not found. not found.", "Vehicle with ID Vehicle with ID  not found. not found.", 100);
        java.lang.String str17 = rentalSystem0.rentVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found. not found.\". not found.", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found.\". not found. not found. not found. not found.", (int) (short) -1);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found." + "'", str9, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found." + "'", str13, "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found. not found.\". not found. not found." + "'", str17, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found. not found.\". not found. not found.");
    }

    @Test
    public void test3920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3920");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        rentalSystem0.addCustomer("hi!", "Vehicle with ID Vehicle with ID  not found. not found.");
        java.util.List<org.example.Vehicle> vehicleList9 = rentalSystem0.getVehicles();
        java.lang.String str11 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID  not found. not found.");
        java.util.List<org.example.Customer> customerList12 = rentalSystem0.getCustomers();
        java.lang.String str16 = rentalSystem0.rentVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.\".\". not found.", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".", (int) '4');
        java.util.List<org.example.Vehicle> vehicleList17 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList18 = rentalSystem0.getCustomers();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList9);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"." + "'", str11, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".");
        org.junit.Assert.assertNotNull(customerList12);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.\".\". not found. not found." + "'", str16, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.\".\". not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList17);
        org.junit.Assert.assertNotNull(customerList18);
    }

    @Test
    public void test3921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3921");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("hi!");
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        int int5 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str9 = rentalSystem0.rentVehicle("No vehicles match the keyword \"\".", "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.", (int) (short) 10);
        java.lang.String str13 = rentalSystem0.rentVehicle("No vehicles match the keyword \"\".", "", (-1));
        int int14 = rentalSystem0.getAvailableVehicleCount();
        int int15 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str17 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found.");
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\". not found. not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\". not found.");
        java.lang.String str22 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found.");
        java.lang.String str24 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found.\".");
        int int25 = rentalSystem0.getAvailableVehicleCount();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID hi! not found." + "'", str3, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Vehicle with ID No vehicles match the keyword \"\". not found." + "'", str9, "Vehicle with ID No vehicles match the keyword \"\". not found.");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID No vehicles match the keyword \"\". not found." + "'", str13, "Vehicle with ID No vehicles match the keyword \"\". not found.");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found." + "'", str17, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found.\"." + "'", str22, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found.\".");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found.\".\"." + "'", str24, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found.\".\".");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
    }

    @Test
    public void test3922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3922");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        int int7 = rentalSystem0.getAvailableVehicleCount();
        int int8 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\".", "hi!");
        java.lang.String str15 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\".", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID  not found.\".\".", (int) 'a');
        java.lang.String str17 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.\". not found.");
        int int18 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str22 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.\". not found. not found. not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.\". not found. not found.\".", 100);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found." + "'", str15, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.\". not found.\"." + "'", str17, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.\". not found.\".");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.\". not found. not found. not found. not found. not found." + "'", str22, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.\". not found. not found. not found. not found. not found.");
    }

    @Test
    public void test3923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3923");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.lang.String str4 = rentalSystem0.searchVehicle("hi!");
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\".\".");
        java.lang.String str11 = rentalSystem0.rentVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found. not found. not found. not found.\".\". not found.", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\". not found.\". not found.\".", (int) (short) 0);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "No vehicles match the keyword \"hi!\"." + "'", str4, "No vehicles match the keyword \"hi!\".");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found. not found. not found. not found.\".\". not found. not found." + "'", str11, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found. not found. not found. not found.\".\". not found. not found.");
    }

    @Test
    public void test3924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3924");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("hi!");
        java.lang.String str5 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\".", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".\".");
        java.lang.String str12 = rentalSystem0.rentVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\".\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\".", 1);
        java.lang.String str14 = rentalSystem0.returnVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\".\".");
        java.util.List<org.example.Vehicle> vehicleList15 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList16 = rentalSystem0.getVehicles();
        int int17 = rentalSystem0.getAvailableVehicleCount();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID hi! not found." + "'", str3, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found." + "'", str5, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\".\". not found." + "'", str12, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\".\". not found.");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\".\". not found." + "'", str14, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\".\". not found.");
        org.junit.Assert.assertNotNull(vehicleList15);
        org.junit.Assert.assertNotNull(vehicleList16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
    }

    @Test
    public void test3925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3925");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("");
        int int4 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Vehicle> vehicleList5 = rentalSystem0.getVehicles();
        java.lang.String str7 = rentalSystem0.searchVehicle("hi!");
        java.lang.String str11 = rentalSystem0.rentVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found.", "", (int) (byte) 0);
        java.lang.String str13 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.");
        java.util.List<org.example.Vehicle> vehicleList14 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.\". not found. not found.\". not found. not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\". not found.\".\".");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID  not found." + "'", str3, "Vehicle with ID  not found.");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(vehicleList5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "No vehicles match the keyword \"hi!\"." + "'", str7, "No vehicles match the keyword \"hi!\".");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found." + "'", str11, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found.");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.\"." + "'", str13, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.\".");
        org.junit.Assert.assertNotNull(vehicleList14);
    }

    @Test
    public void test3926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3926");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.searchVehicle("Vehicle with ID  not found.");
        rentalSystem0.addVehicle("hi!", "Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID hi! not found.", (double) 0);
        rentalSystem0.addCustomer("Vehicle with ID hi! not found.", "hi!");
        java.util.List<org.example.Vehicle> vehicleList17 = rentalSystem0.getVehicles();
        java.lang.String str19 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found. not found. not found.");
        java.util.List<org.example.Vehicle> vehicleList20 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.\".\". not found.\".\".", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found. not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "No vehicles match the keyword \"Vehicle with ID  not found.\"." + "'", str8, "No vehicles match the keyword \"Vehicle with ID  not found.\".");
        org.junit.Assert.assertNotNull(vehicleList17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found. not found. not found.\"." + "'", str19, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found. not found. not found.\".");
        org.junit.Assert.assertNotNull(vehicleList20);
    }

    @Test
    public void test3927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3927");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.", "Vehicle with ID Vehicle with ID hi! not found. not found.", "No vehicles match the keyword \"hi!\".", (double) 1L);
        java.lang.String str13 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"hi!\". not found.");
        java.lang.String str17 = rentalSystem0.rentVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found.", (int) '4');
        java.lang.String str19 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.");
        java.lang.String str21 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found. not found.\". not found. not found.\". not found.\".");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\"." + "'", str13, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\".");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found." + "'", str17, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\"." + "'", str19, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\".");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found. not found.\". not found. not found.\". not found.\". not found." + "'", str21, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found. not found.\". not found. not found.\". not found.\". not found.");
    }

    @Test
    public void test3928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3928");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList7 = rentalSystem0.getVehicles();
        java.lang.String str11 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID hi! not found.\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.", (int) (byte) 100);
        java.lang.String str13 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".");
        java.util.List<org.example.Customer> customerList14 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList15 = rentalSystem0.getCustomers();
        java.lang.String str19 = rentalSystem0.rentVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found.\".\".", "Vehicle is already available.", (int) '#');
        int int20 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str22 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertNotNull(vehicleList7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found." + "'", str11, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\"." + "'", str13, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\".");
        org.junit.Assert.assertNotNull(customerList14);
        org.junit.Assert.assertNotNull(customerList15);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found.\".\". not found." + "'", str19, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found.\".\". not found.");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found." + "'", str22, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.");
    }

    @Test
    public void test3929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3929");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("");
        int int4 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Vehicle> vehicleList5 = rentalSystem0.getVehicles();
        java.lang.String str7 = rentalSystem0.searchVehicle("hi!");
        java.lang.String str9 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found.\". not found.\".");
        int int10 = rentalSystem0.getAvailableVehicleCount();
        java.lang.Class<?> wildcardClass11 = rentalSystem0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID  not found." + "'", str3, "Vehicle with ID  not found.");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(vehicleList5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "No vehicles match the keyword \"hi!\"." + "'", str7, "No vehicles match the keyword \"hi!\".");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found.\". not found.\". not found." + "'", str9, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found.\". not found.\". not found.");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test3930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3930");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.returnVehicle("Vehicle with ID  not found.");
        java.lang.String str12 = rentalSystem0.rentVehicle("Vehicle with ID hi! not found.", "Vehicle with ID Vehicle with ID  not found. not found.", (int) (byte) 10);
        java.lang.String str14 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        java.util.List<org.example.Vehicle> vehicleList15 = rentalSystem0.getVehicles();
        java.lang.String str17 = rentalSystem0.returnVehicle("");
        java.util.List<org.example.Vehicle> vehicleList18 = rentalSystem0.getVehicles();
        java.lang.String str20 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.");
        java.lang.String str24 = rentalSystem0.rentVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found. not found.\".", 2);
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\".", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found.\".\".\". not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\". not found.\". not found. not found.", (double) 0L);
        int int30 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found.\".\".", "Vehicle with ID ID: No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\".\"., Model: No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.\"., Type: Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found., Daily Rate: $10.0, Status: Available\n not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found.\".", (double) 10L);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID  not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID  not found. not found.");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID Vehicle with ID hi! not found. not found." + "'", str12, "Vehicle with ID Vehicle with ID hi! not found. not found.");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found." + "'", str14, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Vehicle with ID  not found." + "'", str17, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\"." + "'", str20, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\".");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found. not found." + "'", str24, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found. not found.");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
    }

    @Test
    public void test3931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3931");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("");
        rentalSystem0.addVehicle("Vehicle with ID  not found.", "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.", "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.", (double) (short) 0);
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.", "Vehicle with ID hi! not found.", "ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n", (double) 2);
        java.lang.String str17 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found., Model: Vehicle with ID Vehicle with ID hi! not found. not found., Type: No vehicles match the keyword \"hi!\"., Daily Rate: $1.0, Status: Available\nID: Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.\". not found., Model: No vehicles match the keyword \"\"., Type: No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found.\"., Daily Rate: $100.0, Status: Available\n not found.\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found. not found.\". not found.\". not found.", (int) (byte) -1);
        java.lang.String str19 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\". not found. not found. not found.\". not found.");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID  not found." + "'", str3, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found., Model: Vehicle with ID Vehicle with ID hi! not found. not found., Type: No vehicles match the keyword \"hi!\"., Daily Rate: $1.0, Status: Available\nID: Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.\". not found., Model: No vehicles match the keyword \"\"., Type: No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found.\"., Daily Rate: $100.0, Status: Available\n not found.\". not found." + "'", str17, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found., Model: Vehicle with ID Vehicle with ID hi! not found. not found., Type: No vehicles match the keyword \"hi!\"., Daily Rate: $1.0, Status: Available\nID: Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.\". not found., Model: No vehicles match the keyword \"\"., Type: No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found.\"., Daily Rate: $100.0, Status: Available\n not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\". not found. not found. not found.\". not found. not found." + "'", str19, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\". not found. not found. not found.\". not found. not found.");
    }

    @Test
    public void test3932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3932");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.lang.String str9 = rentalSystem0.rentVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\". not found.\". not found.\".\".\". not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\".\".\". not found. not found.\". not found. not found.", (int) (short) 100);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\". not found.\". not found.\".\".\". not found. not found." + "'", str9, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\". not found.\". not found.\".\".\". not found. not found.");
    }

    @Test
    public void test3933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3933");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.searchVehicle("Vehicle with ID  not found.");
        rentalSystem0.addVehicle("hi!", "Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID hi! not found.", (double) 0);
        java.util.List<org.example.Vehicle> vehicleList14 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList15 = rentalSystem0.getCustomers();
        java.lang.String str17 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\". not found.");
        int int18 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str22 = rentalSystem0.rentVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found. not found.\".", (int) (byte) 10);
        java.lang.String str24 = rentalSystem0.returnVehicle("Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.");
        java.lang.String str28 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\".\". not found. not found.\".", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\". not found.\". not found. not found. not found. not found.", (-1));
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\".\". not found.\". not found.\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\". not found.\". not found. not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\". not found.\". not found.\".\". not found. not found.", (double) 0L);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "No vehicles match the keyword \"Vehicle with ID  not found.\"." + "'", str8, "No vehicles match the keyword \"Vehicle with ID  not found.\".");
        org.junit.Assert.assertNotNull(vehicleList14);
        org.junit.Assert.assertNotNull(customerList15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\". not found.\"." + "'", str17, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\". not found.\".");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found." + "'", str22, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found.");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found." + "'", str24, "Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\".\". not found. not found.\". not found." + "'", str28, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\".\". not found. not found.\". not found.");
    }

    @Test
    public void test3934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3934");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.returnVehicle("");
        int int9 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str13 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found.", (int) (short) 0);
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\". not found.", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found. not found. not found.", "Vehicle with ID No vehicles match the keyword \"\". not found.", (double) ' ');
        rentalSystem0.addCustomer("Vehicle with ID No vehicles match the keyword \"\". not found.", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\". not found.\". not found.\".");
        java.lang.String str23 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\". not found. not found. not found. not found.\". not found. not found.");
        java.util.List<org.example.Vehicle> vehicleList24 = rentalSystem0.getVehicles();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID  not found." + "'", str8, "Vehicle with ID  not found.");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str13, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\". not found. not found. not found. not found.\". not found. not found. not found." + "'", str23, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\". not found. not found. not found. not found.\". not found. not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList24);
    }

    @Test
    public void test3935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3935");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList7 = rentalSystem0.getVehicles();
        java.lang.String str11 = rentalSystem0.rentVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.\". not found.", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\". not found.\".", (int) (byte) 1);
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".\".", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".");
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found. not found.", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\".\". not found.", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found.\".\". not found.", 1.0d);
        int int20 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found. not found. not found.\". not found.\". not found. not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found. not found. not found. not found. not found. not found. not found.\". not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"\".\". not found. not found.", (double) 100.0f);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertNotNull(vehicleList7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.\". not found. not found." + "'", str11, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.\". not found. not found.");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
    }

    @Test
    public void test3936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3936");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        int int2 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Vehicle> vehicleList3 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".");
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID  not found.\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".", 100.0d);
        java.util.List<org.example.Vehicle> vehicleList11 = rentalSystem0.getVehicles();
        java.lang.String str13 = rentalSystem0.returnVehicle("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found. not found. not found. not found.\".\".\".");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(vehicleList3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\". not found." + "'", str5, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found. not found. not found. not found.\".\".\". not found." + "'", str13, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found. not found. not found. not found.\".\".\". not found.");
    }

    @Test
    public void test3937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3937");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID  not found.", 100);
        java.lang.String str12 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID  not found.\".", "Vehicle with ID Vehicle with ID hi! not found. not found.", (int) (short) -1);
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.", "ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n", "Vehicle with ID Vehicle with ID hi! not found. not found.", 100.0d);
        java.util.List<org.example.Vehicle> vehicleList18 = rentalSystem0.getVehicles();
        java.lang.String str20 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".");
        java.util.List<org.example.Vehicle> vehicleList21 = rentalSystem0.getVehicles();
        java.lang.Class<?> wildcardClass22 = rentalSystem0.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found." + "'", str12, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\"." + "'", str20, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".");
        org.junit.Assert.assertNotNull(vehicleList21);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test3938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3938");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        int int7 = rentalSystem0.getAvailableVehicleCount();
        int int8 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\".", "hi!");
        java.lang.String str15 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\".", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID  not found.\".\".", (int) 'a');
        java.lang.String str17 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\".");
        java.lang.String str19 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.\". not found. not found. not found. not found.");
        java.util.List<org.example.Customer> customerList20 = rentalSystem0.getCustomers();
        java.lang.String str22 = rentalSystem0.returnVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.\". not found.\".\".");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found." + "'", str15, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\".\"." + "'", str17, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\".\".");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.\". not found. not found. not found. not found. not found." + "'", str19, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.\". not found. not found. not found. not found. not found.");
        org.junit.Assert.assertNotNull(customerList20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.\". not found.\".\". not found." + "'", str22, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.\". not found.\".\". not found.");
    }

    @Test
    public void test3939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3939");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.searchVehicle("Vehicle with ID  not found.");
        rentalSystem0.addVehicle("hi!", "Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID hi! not found.", (double) 0);
        java.util.List<org.example.Vehicle> vehicleList14 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList15 = rentalSystem0.getCustomers();
        int int16 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.");
        java.lang.Class<?> wildcardClass20 = rentalSystem0.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "No vehicles match the keyword \"Vehicle with ID  not found.\"." + "'", str8, "No vehicles match the keyword \"Vehicle with ID  not found.\".");
        org.junit.Assert.assertNotNull(vehicleList14);
        org.junit.Assert.assertNotNull(customerList15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test3940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3940");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.");
        rentalSystem0.addCustomer("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\".");
        int int13 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList14 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList15 = rentalSystem0.getCustomers();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(customerList14);
        org.junit.Assert.assertNotNull(customerList15);
    }

    @Test
    public void test3941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3941");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList7 = rentalSystem0.getVehicles();
        java.lang.String str11 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID hi! not found.\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.", (int) (byte) 100);
        int int12 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Vehicle> vehicleList13 = rentalSystem0.getVehicles();
        java.lang.String str15 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\".");
        int int16 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str18 = rentalSystem0.searchVehicle("");
        java.lang.String str22 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\".\". not found. not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found.\". not found.", (int) '#');
        java.util.List<org.example.Vehicle> vehicleList23 = rentalSystem0.getVehicles();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertNotNull(vehicleList7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found." + "'", str11, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(vehicleList13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found." + "'", str15, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "No vehicles match the keyword \"\"." + "'", str18, "No vehicles match the keyword \"\".");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\".\". not found. not found. not found." + "'", str22, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\".\". not found. not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList23);
    }

    @Test
    public void test3942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3942");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID  not found.", 100);
        java.lang.String str12 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID  not found.\".", "Vehicle with ID Vehicle with ID hi! not found. not found.", (int) (short) -1);
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.", "ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n", "Vehicle with ID Vehicle with ID hi! not found. not found.", 100.0d);
        java.util.List<org.example.Vehicle> vehicleList18 = rentalSystem0.getVehicles();
        java.lang.String str22 = rentalSystem0.rentVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found. not found.\".\".", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found.\".\".", (int) (byte) 10);
        java.util.List<org.example.Customer> customerList23 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList24 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList25 = rentalSystem0.getCustomers();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found." + "'", str12, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList18);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found. not found.\".\". not found." + "'", str22, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found. not found.\".\". not found.");
        org.junit.Assert.assertNotNull(customerList23);
        org.junit.Assert.assertNotNull(customerList24);
        org.junit.Assert.assertNotNull(customerList25);
    }

    @Test
    public void test3943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3943");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("hi!");
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        int int5 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str9 = rentalSystem0.rentVehicle("No vehicles match the keyword \"\".", "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.", (int) (short) 10);
        java.lang.String str13 = rentalSystem0.rentVehicle("No vehicles match the keyword \"\".", "", (-1));
        int int14 = rentalSystem0.getAvailableVehicleCount();
        int int15 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str17 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\".");
        java.lang.String str19 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found. not found. not found.", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\".\". not found.");
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found. not found.\".", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found. not found.\".\". not found.");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID hi! not found." + "'", str3, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Vehicle with ID No vehicles match the keyword \"\". not found." + "'", str9, "Vehicle with ID No vehicles match the keyword \"\". not found.");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID No vehicles match the keyword \"\". not found." + "'", str13, "Vehicle with ID No vehicles match the keyword \"\". not found.");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\".\"." + "'", str17, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\".\".");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found." + "'", str19, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.");
    }

    @Test
    public void test3944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3944");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.lang.String str9 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.", (int) (byte) 1);
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\".", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found. not found. not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\". not found. not found.", (double) (short) 1);
        java.util.List<org.example.Customer> customerList15 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\". not found. not found.\". not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\". not found.\". not found. not found.\".");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found." + "'", str9, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.");
        org.junit.Assert.assertNotNull(customerList15);
    }

    @Test
    public void test3945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3945");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("");
        int int4 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Vehicle> vehicleList5 = rentalSystem0.getVehicles();
        java.lang.String str7 = rentalSystem0.searchVehicle("hi!");
        rentalSystem0.addVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".", "ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\".", (double) 10L);
        java.lang.String str16 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\".\".\". not found. not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found.", (int) ' ');
        java.lang.String str18 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n\".\".\".\".\". not found. not found.");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID  not found." + "'", str3, "Vehicle with ID  not found.");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(vehicleList5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "No vehicles match the keyword \"hi!\"." + "'", str7, "No vehicles match the keyword \"hi!\".");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\".\".\". not found. not found. not found." + "'", str16, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\".\".\". not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n\".\".\".\".\". not found. not found. not found." + "'", str18, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n\".\".\".\".\". not found. not found. not found.");
    }

    @Test
    public void test3946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3946");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList4 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID  not found. not found.", "hi!");
        java.lang.String str11 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID hi! not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".", (int) '4');
        java.lang.String str13 = rentalSystem0.returnVehicle("");
        int int14 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Vehicle> vehicleList15 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\".\". not found. not found.", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found. not found. not found.");
        java.lang.String str20 = rentalSystem0.returnVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found. not found.\". not found.\".\".");
        java.util.List<org.example.Customer> customerList21 = rentalSystem0.getCustomers();
        java.lang.Class<?> wildcardClass22 = customerList21.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(vehicleList4);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found." + "'", str11, "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID  not found." + "'", str13, "Vehicle with ID  not found.");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(vehicleList15);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found. not found.\". not found.\".\". not found." + "'", str20, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found. not found.\". not found.\".\". not found.");
        org.junit.Assert.assertNotNull(customerList21);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test3947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3947");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("hi!");
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("Vehicle with ID hi! not found.", "Vehicle with ID Vehicle with ID  not found. not found.");
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found. not found.", "Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.\".", (double) 0.0f);
        int int13 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str17 = rentalSystem0.rentVehicle("hi!", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\". not found.", (int) (byte) 1);
        java.util.List<org.example.Vehicle> vehicleList18 = rentalSystem0.getVehicles();
        java.lang.Class<?> wildcardClass19 = vehicleList18.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID hi! not found." + "'", str3, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Vehicle with ID hi! not found." + "'", str17, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertNotNull(vehicleList18);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test3948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3948");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        int int2 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        int int4 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addVehicle("Vehicle with ID  not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.", (double) (byte) 100);
        java.lang.String str11 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".");
        java.util.List<org.example.Customer> customerList12 = rentalSystem0.getCustomers();
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found. not found. not found.", "No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".", (double) 10);
        int int18 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str22 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID  not found.\".\".\". not found.\". not found. not found.", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".\". not found.\".", (-1));
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\". not found." + "'", str11, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\". not found.");
        org.junit.Assert.assertNotNull(customerList12);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2 + "'", int18 == 2);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID  not found.\".\".\". not found.\". not found. not found. not found." + "'", str22, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID  not found.\".\".\". not found.\". not found. not found. not found.");
    }

    @Test
    public void test3949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3949");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID  not found. not found.", "No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        java.lang.String str8 = rentalSystem0.rentVehicle("hi!", "No vehicles match the keyword \"Vehicle with ID  not found.\".", 100);
        int int9 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str11 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found.");
        java.lang.String str13 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found. not found. not found.\".");
        // The following exception was thrown during execution in test generation
        try {
            rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID hi! not found. not found.", "");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Customer ID cannot be null or empty");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID hi! not found." + "'", str8, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found. not found." + "'", str11, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found. not found. not found.\".\"." + "'", str13, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found. not found. not found.\".\".");
    }

    @Test
    public void test3950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3950");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID  not found.", 100);
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\". not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\". not found.", "No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".", (double) (byte) 1);
        java.lang.String str17 = rentalSystem0.rentVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found.\".\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\".", 100);
        // The following exception was thrown during execution in test generation
        try {
            rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.\". not found. not found.\". not found. not found. not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found. not found. not found.\".", "", (double) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Type cannot be null or empty");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found.\".\". not found." + "'", str17, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found.\".\". not found.");
    }

    @Test
    public void test3951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3951");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList7 = rentalSystem0.getVehicles();
        java.lang.String str11 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.", "Vehicle with ID hi! not found.", (int) '#');
        java.lang.String str15 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\". not found. not found.", "", (int) (byte) 0);
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\". not found.");
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".\". not found. not found. not found.\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\".\". not found. not found.\". not found.");
        java.util.List<org.example.Customer> customerList22 = rentalSystem0.getCustomers();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertNotNull(vehicleList7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found." + "'", str11, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\". not found. not found. not found." + "'", str15, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\". not found. not found. not found.");
        org.junit.Assert.assertNotNull(customerList22);
    }

    @Test
    public void test3952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3952");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList5 = rentalSystem0.getVehicles();
        java.lang.String str9 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".", "No vehicles match the keyword \"Vehicle with ID  not found.\".", (int) ' ');
        java.lang.String str13 = rentalSystem0.rentVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.", 0);
        java.util.List<org.example.Vehicle> vehicleList14 = rentalSystem0.getVehicles();
        java.lang.String str16 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\". not found. not found. not found. not found. not found.");
        java.lang.Class<?> wildcardClass17 = rentalSystem0.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertNotNull(vehicleList5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found." + "'", str9, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found." + "'", str13, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\". not found. not found. not found. not found. not found. not found." + "'", str16, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\". not found. not found. not found. not found. not found. not found.");
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test3953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3953");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.lang.String str7 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\". not found.\". not found.");
        java.lang.String str9 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found.\".\".\". not found. not found.");
        rentalSystem0.addVehicle("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\".\".", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\".\".\". not found.", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found. not found.\".\". not found.\".", (double) 100L);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\". not found.\". not found. not found." + "'", str7, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\". not found.\". not found. not found.");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found.\".\".\". not found. not found. not found." + "'", str9, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found.\".\".\". not found. not found. not found.");
    }

    @Test
    public void test3954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3954");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID  not found.", 100);
        java.lang.String str12 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID  not found.\".", "Vehicle with ID Vehicle with ID hi! not found. not found.", (int) (short) -1);
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.", "ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n", "Vehicle with ID Vehicle with ID hi! not found. not found.", 100.0d);
        java.util.List<org.example.Vehicle> vehicleList18 = rentalSystem0.getVehicles();
        java.lang.String str20 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.");
        java.util.List<org.example.Vehicle> vehicleList21 = rentalSystem0.getVehicles();
        java.lang.String str23 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found. not found.\".");
        java.util.List<org.example.Vehicle> vehicleList24 = rentalSystem0.getVehicles();
        java.lang.String str26 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.\". not found.\".");
        java.lang.String str28 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\". not found. not found.\".");
        java.lang.String str30 = rentalSystem0.searchVehicle("");
        java.lang.Class<?> wildcardClass31 = rentalSystem0.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found." + "'", str12, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found." + "'", str20, "Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found. not found.\". not found." + "'", str23, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found. not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.\". not found.\". not found." + "'", str26, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.\". not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\". not found. not found.\". not found." + "'", str28, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\". not found. not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "ID: Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found., Model: ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n, Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $100.0, Status: Available\n" + "'", str30, "ID: Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found., Model: ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n, Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $100.0, Status: Available\n");
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test3955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3955");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.searchVehicle("Vehicle with ID  not found.");
        rentalSystem0.addVehicle("hi!", "Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID hi! not found.", (double) 0);
        rentalSystem0.addCustomer("ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\".");
        java.lang.String str18 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found. not found. not found.\".");
        java.util.List<org.example.Vehicle> vehicleList19 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList20 = rentalSystem0.getCustomers();
        java.lang.Class<?> wildcardClass21 = customerList20.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "No vehicles match the keyword \"Vehicle with ID  not found.\"." + "'", str8, "No vehicles match the keyword \"Vehicle with ID  not found.\".");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found. not found. not found.\".\"." + "'", str18, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found. not found. not found.\".\".");
        org.junit.Assert.assertNotNull(vehicleList19);
        org.junit.Assert.assertNotNull(customerList20);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test3956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3956");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID hi! not found.\".", "Vehicle with ID Vehicle with ID  not found. not found.");
        java.lang.String str10 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\". not found.\".", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found. not found.\".\".", 0);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\". not found.\". not found." + "'", str10, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\". not found.\". not found.");
    }

    @Test
    public void test3957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3957");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID  not found. not found.", "No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        java.util.List<org.example.Customer> customerList5 = rentalSystem0.getCustomers();
        java.lang.String str7 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.");
        java.lang.String str9 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found.\".");
        java.lang.String str13 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\".\". not found. not found. not found. not found.", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\".\". not found.", (-1));
        rentalSystem0.addVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\".", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\". not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.\".", (double) 0);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(customerList5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found. not found." + "'", str7, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found.\".\"." + "'", str9, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found.\".\".");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\".\". not found. not found. not found. not found. not found." + "'", str13, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\".\". not found. not found. not found. not found. not found.");
    }

    @Test
    public void test3958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3958");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.lang.String str7 = rentalSystem0.rentVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found. not found.\".\". not found. not found.\". not found.", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found. not found.\".\".\".\".", (int) (short) 1);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found. not found.\".\". not found. not found.\". not found. not found." + "'", str7, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found. not found.\".\". not found. not found.\". not found. not found.");
    }

    @Test
    public void test3959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3959");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.searchVehicle("No vehicles match the keyword \"hi!\".");
        java.lang.String str10 = rentalSystem0.returnVehicle("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".\".");
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found. not found.\". not found. not found.", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\". not found.\".\".\".");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\"." + "'", str8, "No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".\". not found." + "'", str10, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".\". not found.");
    }

    @Test
    public void test3960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3960");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.searchVehicle("Vehicle with ID  not found.");
        rentalSystem0.addVehicle("hi!", "Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID hi! not found.", (double) 0);
        rentalSystem0.addCustomer("Vehicle with ID hi! not found.", "hi!");
        java.util.List<org.example.Vehicle> vehicleList17 = rentalSystem0.getVehicles();
        int int18 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList19 = rentalSystem0.getCustomers();
        java.lang.String str21 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found.");
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.\". not found.\".", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found.");
        java.lang.String str26 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\".\".\".\". not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "No vehicles match the keyword \"Vehicle with ID  not found.\"." + "'", str8, "No vehicles match the keyword \"Vehicle with ID  not found.\".");
        org.junit.Assert.assertNotNull(vehicleList17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(customerList19);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found.\"." + "'", str21, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found.\".");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\".\".\".\". not found. not found. not found." + "'", str26, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\".\".\".\". not found. not found. not found.");
    }

    @Test
    public void test3961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3961");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList7 = rentalSystem0.getVehicles();
        java.lang.String str11 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID hi! not found.\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.", (int) (byte) 100);
        java.lang.String str13 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".");
        java.util.List<org.example.Customer> customerList14 = rentalSystem0.getCustomers();
        rentalSystem0.addVehicle("Vehicle with ID  not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\".\". not found.", 10.0d);
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\". not found. not found. not found.\".", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found. not found. not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found. not found.\".", (double) 100L);
        java.lang.String str26 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.\". not found.\".");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertNotNull(vehicleList7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found." + "'", str11, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\"." + "'", str13, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\".");
        org.junit.Assert.assertNotNull(customerList14);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.\". not found.\". not found." + "'", str26, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.\". not found.\". not found.");
    }

    @Test
    public void test3962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3962");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("hi!");
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        int int5 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList7 = rentalSystem0.getCustomers();
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\". not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found. not found.\".\".", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.\". not found.\".\".\".\". not found.", (double) 10);
        java.lang.String str14 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n\".\".\". not found.");
        java.util.List<org.example.Customer> customerList15 = rentalSystem0.getCustomers();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID hi! not found." + "'", str3, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertNotNull(customerList7);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n\".\".\". not found. not found." + "'", str14, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n\".\".\". not found. not found.");
        org.junit.Assert.assertNotNull(customerList15);
    }

    @Test
    public void test3963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3963");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        int int2 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Vehicle> vehicleList3 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".");
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID  not found.\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".", 100.0d);
        java.util.List<org.example.Vehicle> vehicleList11 = rentalSystem0.getVehicles();
        int int12 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str16 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\". not found.\". not found. not found.\".", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found.\".\".\".", (int) ' ');
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(vehicleList3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\". not found." + "'", str5, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\". not found.\". not found. not found.\". not found." + "'", str16, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\". not found.\". not found. not found.\". not found.");
    }

    @Test
    public void test3964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3964");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        int int2 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        int int4 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addVehicle("Vehicle with ID  not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.", (double) (byte) 100);
        java.lang.String str11 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.\".");
        java.lang.String str15 = rentalSystem0.rentVehicle("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID  not found.\".\".\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found. not found.", (int) '#');
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found. not found. not found.\". not found. not found.", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found.");
        java.util.List<org.example.Customer> customerList19 = rentalSystem0.getCustomers();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.\". not found." + "'", str11, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID  not found.\".\".\". not found." + "'", str15, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID  not found.\".\".\". not found.");
        org.junit.Assert.assertNotNull(customerList19);
    }

    @Test
    public void test3965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3965");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.lang.String str5 = rentalSystem0.returnVehicle("Vehicle with ID  not found.");
        java.lang.String str7 = rentalSystem0.searchVehicle("Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.");
        java.lang.String str9 = rentalSystem0.searchVehicle("hi!");
        java.lang.String str13 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found. not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\". not found. not found.", (int) '#');
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\". not found.\". not found. not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\". not found.\". not found.");
        int int17 = rentalSystem0.getAvailableVehicleCount();
        int int18 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Vehicle> vehicleList19 = rentalSystem0.getVehicles();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID Vehicle with ID  not found. not found." + "'", str5, "Vehicle with ID Vehicle with ID  not found. not found.");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\"." + "'", str7, "No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "No vehicles match the keyword \"hi!\"." + "'", str9, "No vehicles match the keyword \"hi!\".");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found. not found. not found." + "'", str13, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found. not found. not found.");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(vehicleList19);
    }

    @Test
    public void test3966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3966");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.returnVehicle("Vehicle with ID  not found.");
        java.lang.String str10 = rentalSystem0.returnVehicle("hi!");
        java.lang.String str12 = rentalSystem0.searchVehicle("");
        rentalSystem0.addCustomer("Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".");
        java.lang.String str17 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".");
        java.lang.String str19 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.");
        java.lang.String str21 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\". not found.\". not found. not found.\". not found.\".");
        rentalSystem0.addCustomer("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.\". not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found. not found. not found.\".\".");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID  not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID  not found. not found.");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID hi! not found." + "'", str10, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "No vehicles match the keyword \"\"." + "'", str12, "No vehicles match the keyword \"\".");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\". not found." + "'", str17, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\"." + "'", str19, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\". not found.\". not found. not found.\". not found.\".\"." + "'", str21, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\". not found.\". not found. not found.\". not found.\".\".");
    }

    @Test
    public void test3967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3967");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("hi!");
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\".\". not found. not found.", "Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.");
        java.util.List<org.example.Vehicle> vehicleList7 = rentalSystem0.getVehicles();
        java.lang.String str9 = rentalSystem0.searchVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found. not found.\". not found. not found.\".\".");
        java.util.List<org.example.Customer> customerList10 = rentalSystem0.getCustomers();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID hi! not found." + "'", str3, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertNotNull(vehicleList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found. not found.\". not found. not found.\".\".\"." + "'", str9, "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found. not found.\". not found. not found.\".\".\".");
        org.junit.Assert.assertNotNull(customerList10);
    }

    @Test
    public void test3968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3968");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.lang.String str4 = rentalSystem0.searchVehicle("hi!");
        java.util.List<org.example.Customer> customerList5 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found. not found.\".");
        java.lang.String str12 = rentalSystem0.rentVehicle("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\".\".", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\".\".", 0);
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\". not found.\".", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\".\".");
        java.lang.String str17 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\". not found.");
        java.util.List<org.example.Customer> customerList18 = rentalSystem0.getCustomers();
        java.lang.String str20 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.\". not found. not found. not found. not found. not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "No vehicles match the keyword \"hi!\"." + "'", str4, "No vehicles match the keyword \"hi!\".");
        org.junit.Assert.assertNotNull(customerList5);
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found. not found.\".\"." + "'", str8, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found. not found.\".\".");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\".\". not found." + "'", str12, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\".\". not found.");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\". not found.\"." + "'", str17, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\". not found.\".");
        org.junit.Assert.assertNotNull(customerList18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.\". not found. not found. not found. not found. not found.\". not found.\"." + "'", str20, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.\". not found. not found. not found. not found. not found.\". not found.\".");
    }

    @Test
    public void test3969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3969");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.returnVehicle("");
        java.lang.String str10 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.");
        java.util.List<org.example.Customer> customerList11 = rentalSystem0.getCustomers();
        java.lang.String str13 = rentalSystem0.searchVehicle("hi!");
        int int14 = rentalSystem0.getAvailableVehicleCount();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID  not found." + "'", str8, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\"." + "'", str10, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\".");
        org.junit.Assert.assertNotNull(customerList11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "No vehicles match the keyword \"hi!\"." + "'", str13, "No vehicles match the keyword \"hi!\".");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
    }

    @Test
    public void test3970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3970");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.returnVehicle("Vehicle with ID  not found.");
        java.lang.String str12 = rentalSystem0.rentVehicle("Vehicle with ID hi! not found.", "Vehicle with ID Vehicle with ID  not found. not found.", (int) (byte) 10);
        java.lang.String str14 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        java.util.List<org.example.Vehicle> vehicleList15 = rentalSystem0.getVehicles();
        java.lang.String str17 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\". not found. not found. not found.");
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found. not found. not found. not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\". not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found. not found. not found.\". not found.", (double) 'a');
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\". not found. not found. not found.\". not found. not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found.\".");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID  not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID  not found. not found.");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID Vehicle with ID hi! not found. not found." + "'", str12, "Vehicle with ID Vehicle with ID hi! not found. not found.");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found." + "'", str14, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\". not found. not found. not found. not found." + "'", str17, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\". not found. not found. not found. not found.");
    }

    @Test
    public void test3971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3971");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.returnVehicle("");
        java.util.List<org.example.Customer> customerList9 = rentalSystem0.getCustomers();
        java.lang.String str11 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.");
        java.lang.String str15 = rentalSystem0.rentVehicle("Vehicle with ID No vehicles match the keyword \"\". not found.", "ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n", (int) (short) -1);
        java.util.List<org.example.Customer> customerList16 = rentalSystem0.getCustomers();
        java.lang.String str20 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.", "Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found.", (int) (short) 10);
        java.util.List<org.example.Vehicle> vehicleList21 = rentalSystem0.getVehicles();
        java.lang.Class<?> wildcardClass22 = rentalSystem0.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID  not found." + "'", str8, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList9);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found." + "'", str11, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found.");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found." + "'", str15, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found.");
        org.junit.Assert.assertNotNull(customerList16);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found." + "'", str20, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList21);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test3972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3972");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList5 = rentalSystem0.getVehicles();
        java.lang.String str9 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".", "No vehicles match the keyword \"Vehicle with ID  not found.\".", (int) ' ');
        java.lang.String str13 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID  not found. not found.", "", (int) (byte) -1);
        int int14 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addCustomer("Vehicle with ID  not found.", "Vehicle with ID No vehicles match the keyword \"hi!\". not found.");
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.");
        java.lang.String str24 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\".", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\". not found.\".", (int) (byte) -1);
        java.lang.String str28 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\". not found. not found. not found. not found. not found.\".", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\". not found. not found.\".\". not found. not found. not found.", 2);
        int int29 = rentalSystem0.getAvailableVehicleCount();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertNotNull(vehicleList5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found." + "'", str9, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str13, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\". not found." + "'", str24, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\". not found. not found. not found. not found. not found.\". not found." + "'", str28, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\". not found. not found. not found. not found. not found.\". not found.");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
    }

    @Test
    public void test3973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3973");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\". not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.", 1.0d);
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\". not found.\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\". not found.", (double) 'a');
        java.lang.String str18 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found. not found.");
        int int19 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str21 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\".\". not found.");
        int int22 = rentalSystem0.getAvailableVehicleCount();
        java.lang.Class<?> wildcardClass23 = rentalSystem0.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found. not found. not found." + "'", str18, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found. not found. not found.");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2 + "'", int19 == 2);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\".\". not found. not found." + "'", str21, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\".\". not found. not found.");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 2 + "'", int22 == 2);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test3974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3974");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("hi!");
        rentalSystem0.addCustomer("ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n", "No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".");
        java.lang.String str8 = rentalSystem0.returnVehicle("");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID hi! not found." + "'", str3, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID  not found." + "'", str8, "Vehicle with ID  not found.");
    }

    @Test
    public void test3975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3975");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.returnVehicle("");
        int int9 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addCustomer("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found.", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found. not found.");
        java.util.List<org.example.Customer> customerList13 = rentalSystem0.getCustomers();
        java.lang.String str17 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\". not found. not found.\".", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found. not found. not found. not found.", 100);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID  not found." + "'", str8, "Vehicle with ID  not found.");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(customerList13);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\". not found. not found.\". not found." + "'", str17, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\". not found. not found.\". not found.");
    }

    @Test
    public void test3976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3976");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList7 = rentalSystem0.getVehicles();
        java.lang.String str11 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID hi! not found.\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.", (int) (byte) 100);
        java.util.List<org.example.Customer> customerList12 = rentalSystem0.getCustomers();
        int int13 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Vehicle> vehicleList14 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList15 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList16 = rentalSystem0.getCustomers();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertNotNull(vehicleList7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found." + "'", str11, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.");
        org.junit.Assert.assertNotNull(customerList12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(vehicleList14);
        org.junit.Assert.assertNotNull(customerList15);
        org.junit.Assert.assertNotNull(customerList16);
    }

    @Test
    public void test3977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3977");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        int int7 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addCustomer("hi!", "Vehicle with ID Vehicle with ID  not found. not found.");
        java.util.List<org.example.Customer> customerList11 = rentalSystem0.getCustomers();
        java.lang.String str13 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found.");
        java.util.List<org.example.Customer> customerList14 = rentalSystem0.getCustomers();
        java.lang.String str16 = rentalSystem0.searchVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found. not found.\". not found. not found.\".\".");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(customerList11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found.\"." + "'", str13, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found.\".");
        org.junit.Assert.assertNotNull(customerList14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found. not found.\". not found. not found.\".\".\"." + "'", str16, "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found. not found.\". not found. not found.\".\".\".");
    }

    @Test
    public void test3978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3978");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID  not found. not found.", "No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        java.lang.String str8 = rentalSystem0.rentVehicle("hi!", "No vehicles match the keyword \"Vehicle with ID  not found.\".", 100);
        java.lang.String str10 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID hi! not found. not found.");
        rentalSystem0.addVehicle("ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.", "No vehicles match the keyword \"\".", (double) (byte) 10);
        java.lang.String str17 = rentalSystem0.returnVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".");
        rentalSystem0.addVehicle("Vehicle with ID ID: Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found., Model: Vehicle with ID Vehicle with ID hi! not found. not found., Type: No vehicles match the keyword \"hi!\"., Daily Rate: $1.0, Status: Available\nID: Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.\". not found., Model: No vehicles match the keyword \"\"., Type: No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found.\"., Daily Rate: $100.0, Status: Available\n not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found.\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found. not found. not found.\".", (double) (byte) 1);
        rentalSystem0.addCustomer("Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found.", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found.");
        java.lang.String str27 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\". not found. not found.");
        // The following exception was thrown during execution in test generation
        try {
            rentalSystem0.addCustomer("", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\".\". not found. not found. not found. not found. not found.");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Name cannot be null or empty");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID hi! not found." + "'", str8, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found." + "'", str10, "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found." + "'", str17, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\". not found. not found.\"." + "'", str27, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\". not found. not found.\".");
    }

    @Test
    public void test3979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3979");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList4 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID  not found. not found.", "hi!");
        java.lang.String str11 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID hi! not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".", (int) '4');
        java.lang.String str13 = rentalSystem0.returnVehicle("");
        rentalSystem0.addVehicle("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\".\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\".", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID  not found.\".\".", 1.0d);
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\". not found. not found. not found.", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.");
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\". not found. not found. not found.", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\".\".\". not found.");
        int int25 = rentalSystem0.getAvailableVehicleCount();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(vehicleList4);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found." + "'", str11, "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID  not found." + "'", str13, "Vehicle with ID  not found.");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
    }

    @Test
    public void test3980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3980");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        rentalSystem0.addCustomer("hi!", "Vehicle with ID Vehicle with ID  not found. not found.");
        java.util.List<org.example.Vehicle> vehicleList9 = rentalSystem0.getVehicles();
        java.lang.String str13 = rentalSystem0.rentVehicle("hi!", "No vehicles match the keyword \"Vehicle with ID  not found.\".", (int) '4');
        java.util.List<org.example.Customer> customerList14 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList15 = rentalSystem0.getVehicles();
        int int16 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.", (double) 100L);
        java.util.List<org.example.Vehicle> vehicleList22 = rentalSystem0.getVehicles();
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found.\".\". not found.\".", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.\". not found.\".", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found.\".\".\".", (double) (byte) 10);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList9);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID hi! not found." + "'", str13, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertNotNull(customerList14);
        org.junit.Assert.assertNotNull(vehicleList15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(vehicleList22);
    }

    @Test
    public void test3981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3981");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID  not found.\".", "hi!");
        rentalSystem0.addCustomer("No vehicles match the keyword \"hi!\".", "hi!");
        java.lang.String str14 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        java.util.List<org.example.Vehicle> vehicleList15 = rentalSystem0.getVehicles();
        java.lang.String str17 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.");
        int int18 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found. not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\". not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.\". not found.", (double) 1.0f);
        java.lang.String str25 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found. not found.");
        java.lang.String str27 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\". not found. not found.");
        java.util.List<org.example.Vehicle> vehicleList28 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList29 = rentalSystem0.getCustomers();
        int int30 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList31 = rentalSystem0.getCustomers();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found." + "'", str14, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found." + "'", str17, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found. not found.\"." + "'", str25, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found. not found.\".");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\". not found. not found. not found." + "'", str27, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\". not found. not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList28);
        org.junit.Assert.assertNotNull(customerList29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertNotNull(customerList31);
    }

    @Test
    public void test3982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3982");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("");
        java.util.List<org.example.Vehicle> vehicleList4 = rentalSystem0.getVehicles();
        java.lang.String str6 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID  not found. not found.");
        java.util.List<org.example.Customer> customerList7 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.\".");
        java.util.List<org.example.Vehicle> vehicleList11 = rentalSystem0.getVehicles();
        java.lang.String str13 = rentalSystem0.searchVehicle("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\". not found. not found. not found. not found.\".\".\".\".");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID  not found." + "'", str3, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str6, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertNotNull(customerList7);
        org.junit.Assert.assertNotNull(vehicleList11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\". not found. not found. not found. not found.\".\".\".\".\"." + "'", str13, "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\". not found. not found. not found. not found.\".\".\".\".\".");
    }

    @Test
    public void test3983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3983");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.searchVehicle("Vehicle with ID  not found.");
        rentalSystem0.addVehicle("hi!", "Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID hi! not found.", (double) 0);
        rentalSystem0.addCustomer("Vehicle with ID hi! not found.", "hi!");
        java.lang.String str18 = rentalSystem0.returnVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".");
        java.lang.String str20 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found.");
        java.lang.String str24 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found. not found. not found.", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.\".", (int) '4');
        java.lang.String str28 = rentalSystem0.rentVehicle("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found.\".\".\".", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID  not found.\".\".", (int) (byte) 10);
        java.util.List<org.example.Vehicle> vehicleList29 = rentalSystem0.getVehicles();
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\". not found.\". not found.", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found.\".\". not found. not found. not found.", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\". not found. not found. not found.", (double) 100L);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "No vehicles match the keyword \"Vehicle with ID  not found.\"." + "'", str8, "No vehicles match the keyword \"Vehicle with ID  not found.\".");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found." + "'", str18, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found.\"." + "'", str20, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found.\".");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found. not found. not found. not found." + "'", str24, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found. not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found.\".\".\". not found." + "'", str28, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found.\".\".\". not found.");
        org.junit.Assert.assertNotNull(vehicleList29);
    }

    @Test
    public void test3984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3984");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        rentalSystem0.addCustomer("hi!", "Vehicle with ID Vehicle with ID  not found. not found.");
        java.util.List<org.example.Vehicle> vehicleList9 = rentalSystem0.getVehicles();
        java.lang.String str11 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID  not found. not found.");
        java.lang.String str15 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\". not found.\". not found. not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found. not found.\".", 2);
        int int16 = rentalSystem0.getAvailableVehicleCount();
        java.lang.Class<?> wildcardClass17 = rentalSystem0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList9);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"." + "'", str11, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\". not found.\". not found. not found. not found. not found." + "'", str15, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\". not found.\". not found. not found. not found. not found.");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test3985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3985");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        int int2 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Vehicle> vehicleList3 = rentalSystem0.getVehicles();
        int int4 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str6 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.");
        java.lang.String str10 = rentalSystem0.rentVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found. not found.", (int) (short) 0);
        java.util.List<org.example.Customer> customerList11 = rentalSystem0.getCustomers();
        java.lang.String str15 = rentalSystem0.rentVehicle("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\".\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found. not found.\".", (int) (byte) 10);
        java.lang.String str19 = rentalSystem0.rentVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\".\".", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\".", (int) 'a');
        java.lang.String str23 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\". not found. not found. not found. not found.\". not found.\". not found. not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.\".\".", (int) '4');
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(vehicleList3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found." + "'", str6, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\". not found." + "'", str10, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\". not found.");
        org.junit.Assert.assertNotNull(customerList11);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\".\". not found." + "'", str15, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\".\". not found.");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\".\". not found." + "'", str19, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\".\". not found.");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\". not found. not found. not found. not found.\". not found.\". not found. not found. not found." + "'", str23, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\". not found. not found. not found. not found.\". not found.\". not found. not found. not found.");
    }

    @Test
    public void test3986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3986");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.returnVehicle("Vehicle with ID  not found.");
        java.util.List<org.example.Vehicle> vehicleList9 = rentalSystem0.getVehicles();
        int int10 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle is already available. not found.", "No vehicles match the keyword \"No vehicles match the keyword \"ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n\".\".");
        java.lang.String str15 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found. not found.\". not found. not found.");
        java.lang.String str17 = rentalSystem0.searchVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\". not found. not found.\".\".");
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.\".", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\".\".\".\".");
        rentalSystem0.addCustomer("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found.\".\". not found.", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.\".\". not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID  not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID  not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found. not found.\". not found. not found.\"." + "'", str15, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found. not found.\". not found. not found.\".");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\". not found. not found.\".\".\"." + "'", str17, "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\". not found. not found.\".\".\".");
    }

    @Test
    public void test3987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3987");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.returnVehicle("");
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".", "No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".");
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".\".", "ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n");
        java.lang.String str16 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.");
        java.lang.String str18 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.");
        java.lang.String str22 = rentalSystem0.rentVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\". not found. not found. not found. not found.\".\".\".\". not found.", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID  not found.\".\".\".\".", (int) (short) 1);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID  not found." + "'", str8, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found." + "'", str16, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found. not found." + "'", str18, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\". not found. not found. not found. not found.\".\".\".\". not found. not found." + "'", str22, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\". not found. not found. not found. not found.\".\".\".\". not found. not found.");
    }

    @Test
    public void test3988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3988");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.");
        java.lang.String str10 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".");
        java.util.List<org.example.Vehicle> vehicleList11 = rentalSystem0.getVehicles();
        java.lang.String str13 = rentalSystem0.searchVehicle("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.\". not found.\".\".\".");
        java.lang.Class<?> wildcardClass14 = rentalSystem0.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\"." + "'", str8, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".\"." + "'", str10, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".\".");
        org.junit.Assert.assertNotNull(vehicleList11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.\". not found.\".\".\".\"." + "'", str13, "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.\". not found.\".\".\".\".");
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test3989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3989");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.returnVehicle("Vehicle with ID  not found.");
        int int9 = rentalSystem0.getAvailableVehicleCount();
        int int10 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str12 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found.\".");
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\".\".\".\".", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found.\".\".");
        java.util.List<org.example.Vehicle> vehicleList16 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList17 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList18 = rentalSystem0.getVehicles();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID  not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID  not found. not found.");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found.\". not found." + "'", str12, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList16);
        org.junit.Assert.assertNotNull(vehicleList17);
        org.junit.Assert.assertNotNull(vehicleList18);
    }

    @Test
    public void test3990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3990");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList7 = rentalSystem0.getVehicles();
        java.lang.String str11 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID hi! not found.\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.", (int) (byte) 100);
        java.util.List<org.example.Customer> customerList12 = rentalSystem0.getCustomers();
        int int13 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.\". not found.", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID  not found.\".\".\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\". not found.\". not found.", (double) (byte) 0);
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".");
        java.util.List<org.example.Vehicle> vehicleList22 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found.\".\".\". not found. not found. not found. not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found.\".\". not found. not found.");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertNotNull(vehicleList7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found." + "'", str11, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.");
        org.junit.Assert.assertNotNull(customerList12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(vehicleList22);
    }

    @Test
    public void test3991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3991");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("hi!");
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        int int5 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str9 = rentalSystem0.rentVehicle("No vehicles match the keyword \"\".", "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.", (int) (short) 10);
        java.lang.String str13 = rentalSystem0.rentVehicle("No vehicles match the keyword \"\".", "", (-1));
        int int14 = rentalSystem0.getAvailableVehicleCount();
        int int15 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found. not found.\". not found.", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.", (double) 10);
        rentalSystem0.addVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\". not found. not found.", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\". not found.\". not found. not found. not found. not found.", (double) 3);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID hi! not found." + "'", str3, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Vehicle with ID No vehicles match the keyword \"\". not found." + "'", str9, "Vehicle with ID No vehicles match the keyword \"\". not found.");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID No vehicles match the keyword \"\". not found." + "'", str13, "Vehicle with ID No vehicles match the keyword \"\". not found.");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
    }

    @Test
    public void test3992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3992");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("");
        java.util.List<org.example.Vehicle> vehicleList4 = rentalSystem0.getVehicles();
        java.lang.String str6 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID  not found. not found.");
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\". not found. not found.");
        java.lang.Class<?> wildcardClass10 = rentalSystem0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID  not found." + "'", str3, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str6, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test3993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3993");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID  not found.", 100);
        java.lang.String str12 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID  not found.\".", "Vehicle with ID Vehicle with ID hi! not found. not found.", (int) (short) -1);
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\". not found.", "No vehicles match the keyword \"Vehicle with ID  not found.\".", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.\".", (double) (short) 1);
        java.lang.String str19 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found.");
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"\". not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\". not found.\". not found.", 10.0d);
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\".\". not found. not found.", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\". not found.\".");
        java.util.List<org.example.Customer> customerList28 = rentalSystem0.getCustomers();
        java.lang.String str30 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found." + "'", str12, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found.\"." + "'", str19, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found.\".");
        org.junit.Assert.assertNotNull(customerList28);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found.\"." + "'", str30, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found.\".");
    }

    @Test
    public void test3994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3994");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.returnVehicle("");
        java.lang.String str10 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.");
        java.lang.String str14 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".\".", 0);
        java.lang.String str18 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\".\".\". not found. not found. not found.", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found.\".\".\". not found. not found. not found.", 0);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID  not found." + "'", str8, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\"." + "'", str10, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\".");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found. not found." + "'", str14, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\".\".\". not found. not found. not found. not found." + "'", str18, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\".\".\". not found. not found. not found. not found.");
    }

    @Test
    public void test3995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3995");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        rentalSystem0.addCustomer("hi!", "Vehicle with ID Vehicle with ID  not found. not found.");
        java.util.List<org.example.Vehicle> vehicleList9 = rentalSystem0.getVehicles();
        java.lang.String str13 = rentalSystem0.rentVehicle("hi!", "No vehicles match the keyword \"Vehicle with ID  not found.\".", (int) '4');
        java.lang.String str15 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found.");
        java.util.List<org.example.Vehicle> vehicleList16 = rentalSystem0.getVehicles();
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\".\".\". not found.", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\". not found.\".", (double) (byte) 1);
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found. not found. not found. not found. not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found. not found.\".\".");
        int int25 = rentalSystem0.getAvailableVehicleCount();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList9);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID hi! not found." + "'", str13, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found." + "'", str15, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList16);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
    }

    @Test
    public void test3996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3996");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n", "Vehicle with ID No vehicles match the keyword \"hi!\". not found.", (int) (short) 0);
        rentalSystem0.addCustomer("Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.", "Vehicle with ID hi! not found.");
        rentalSystem0.addVehicle("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\".\".\".\".", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\". not found. not found. not found. not found. not found. not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\".\".\". not found. not found.\". not found.", 0.0d);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found." + "'", str5, "Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.");
    }

    @Test
    public void test3997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3997");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.lang.String str5 = rentalSystem0.returnVehicle("Vehicle with ID  not found.");
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID  not found.\".", "No vehicles match the keyword \"\".");
        java.util.List<org.example.Customer> customerList9 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found. not found.\". not found. not found.\".\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found.\". not found.");
        java.lang.String str14 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found.\".");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID Vehicle with ID  not found. not found." + "'", str5, "Vehicle with ID Vehicle with ID  not found. not found.");
        org.junit.Assert.assertNotNull(customerList9);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found.\".\"." + "'", str14, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found.\".\".");
    }

    @Test
    public void test3998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3998");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("hi!");
        java.lang.String str5 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\".", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".\".");
        java.lang.String str12 = rentalSystem0.rentVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\".\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\".", 1);
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found. not found.\". not found. not found.\".\".", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found. not found. not found.");
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found. not found. not found.", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found. not found. not found. not found.");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID hi! not found." + "'", str3, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found." + "'", str5, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\".\". not found." + "'", str12, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\".\". not found.");
    }

    @Test
    public void test3999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3999");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID  not found.\".", "hi!");
        int int10 = rentalSystem0.getAvailableVehicleCount();
        int int11 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str13 = rentalSystem0.searchVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\".\".");
        java.lang.String str15 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.\".");
        java.lang.String str17 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found.\". not found. not found. not found. not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\".\".\"." + "'", str13, "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\".\".\".");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.\". not found." + "'", str15, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found.\". not found. not found. not found. not found. not found. not found." + "'", str17, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found.\". not found. not found. not found. not found. not found. not found.");
    }

    @Test
    public void test4000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test4000");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("hi!");
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        int int5 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str9 = rentalSystem0.rentVehicle("No vehicles match the keyword \"\".", "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.", (int) (short) 10);
        java.lang.String str13 = rentalSystem0.rentVehicle("No vehicles match the keyword \"\".", "", (-1));
        int int14 = rentalSystem0.getAvailableVehicleCount();
        int int15 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str17 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found.");
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\". not found. not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\". not found.");
        java.lang.String str22 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found.");
        java.lang.String str24 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID hi! not found. not found.");
        java.lang.String str26 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\".\".\". not found. not found. not found.\".\". not found.");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID hi! not found." + "'", str3, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Vehicle with ID No vehicles match the keyword \"\". not found." + "'", str9, "Vehicle with ID No vehicles match the keyword \"\". not found.");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID No vehicles match the keyword \"\". not found." + "'", str13, "Vehicle with ID No vehicles match the keyword \"\". not found.");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found." + "'", str17, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found.\"." + "'", str22, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found.\".");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found." + "'", str24, "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\".\".\". not found. not found. not found.\".\". not found.\"." + "'", str26, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\".\".\". not found. not found. not found.\".\". not found.\".");
    }
}

