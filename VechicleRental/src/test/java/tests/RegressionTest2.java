import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest2 {

    public static boolean debug = false;

    public void assertBooleanArrayEquals(boolean[] expectedArray, boolean[] actualArray) {
        if (expectedArray.length != actualArray.length) {
            throw new AssertionError("Array lengths differ: " + expectedArray.length + " != " + actualArray.length);
        }
        for (int i = 0; i < expectedArray.length; i++) {
            if (expectedArray[i] != actualArray[i]) {
                throw new AssertionError("Arrays differ at index " + i + ": " + expectedArray[i] + " != " + actualArray[i]);
            }
        }
    }

    @Test
    public void test1001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1001");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.lang.String str5 = rentalSystem0.returnVehicle("Vehicle with ID  not found.");
        java.lang.String str7 = rentalSystem0.searchVehicle("Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.");
        java.lang.String str9 = rentalSystem0.searchVehicle("hi!");
        rentalSystem0.addCustomer("hi!", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\". not found.");
        rentalSystem0.addCustomer("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found. not found. not found.\". not found.", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\". not found. not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID Vehicle with ID  not found. not found." + "'", str5, "Vehicle with ID Vehicle with ID  not found. not found.");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\"." + "'", str7, "No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "No vehicles match the keyword \"hi!\"." + "'", str9, "No vehicles match the keyword \"hi!\".");
    }

    @Test
    public void test1002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1002");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("hi!");
        java.lang.String str5 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\".", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".\".");
        // The following exception was thrown during execution in test generation
        try {
            rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found. not found.\". not found.", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found. not found.\".\". not found.", "", 10.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Type cannot be null or empty");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID hi! not found." + "'", str3, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found." + "'", str5, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.");
    }

    @Test
    public void test1003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1003");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.");
        java.lang.String str10 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".");
        java.util.List<org.example.Vehicle> vehicleList11 = rentalSystem0.getVehicles();
        java.lang.String str13 = rentalSystem0.searchVehicle("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.\". not found.\".\".\".");
        java.lang.String str15 = rentalSystem0.searchVehicle("");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\"." + "'", str8, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".\"." + "'", str10, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".\".");
        org.junit.Assert.assertNotNull(vehicleList11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.\". not found.\".\".\".\"." + "'", str13, "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.\". not found.\".\".\".\".");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "No vehicles match the keyword \"\"." + "'", str15, "No vehicles match the keyword \"\".");
    }

    @Test
    public void test1004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1004");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.searchVehicle("Vehicle with ID  not found.");
        java.lang.String str10 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".");
        int int11 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.\".");
        java.util.List<org.example.Customer> customerList15 = rentalSystem0.getCustomers();
        int int16 = rentalSystem0.getAvailableVehicleCount();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "No vehicles match the keyword \"Vehicle with ID  not found.\"." + "'", str8, "No vehicles match the keyword \"Vehicle with ID  not found.\".");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\"." + "'", str10, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\".");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(customerList15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
    }

    @Test
    public void test1005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1005");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("");
        java.util.List<org.example.Vehicle> vehicleList4 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.rentVehicle("", "Vehicle with ID hi! not found.", (int) (short) 100);
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.", "No vehicles match the keyword \"Vehicle with ID  not found.\".", "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.", (double) 10);
        java.util.List<org.example.Vehicle> vehicleList14 = rentalSystem0.getVehicles();
        java.lang.String str16 = rentalSystem0.returnVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID  not found." + "'", str3, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID  not found." + "'", str8, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\". not found." + "'", str16, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\". not found.");
    }

    @Test
    public void test1006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1006");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID  not found.\".", "hi!");
        int int10 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str12 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.");
        java.lang.String str14 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\". not found.");
        rentalSystem0.addCustomer("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found. not found.\". not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\".\".");
        java.lang.Class<?> wildcardClass18 = rentalSystem0.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\"." + "'", str12, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\".");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\". not found. not found." + "'", str14, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\". not found. not found.");
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test1007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1007");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.");
        rentalSystem0.addCustomer("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\".");
        int int13 = rentalSystem0.getAvailableVehicleCount();
        java.lang.Class<?> wildcardClass14 = rentalSystem0.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test1008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1008");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID  not found. not found.", "No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        java.lang.String str8 = rentalSystem0.rentVehicle("hi!", "No vehicles match the keyword \"Vehicle with ID  not found.\".", 100);
        java.lang.String str10 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID hi! not found. not found.");
        java.lang.String str12 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.");
        java.lang.String str14 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\".\".", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found. not found.");
        java.lang.String str19 = rentalSystem0.returnVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found. not found.\".\".");
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found. not found.", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.\".\". not found.");
        int int23 = rentalSystem0.getAvailableVehicleCount();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID hi! not found." + "'", str8, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found." + "'", str10, "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found." + "'", str12, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.\"." + "'", str14, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.\".");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found. not found.\".\". not found." + "'", str19, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found. not found.\".\". not found.");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
    }

    @Test
    public void test1009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1009");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList5 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\".");
        java.lang.String str11 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n\".\". not found. not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertNotNull(vehicleList5);
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n\".\". not found. not found. not found. not found." + "'", str11, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n\".\". not found. not found. not found. not found.");
    }

    @Test
    public void test1010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1010");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList7 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found.", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".");
        java.lang.String str12 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.\".");
        java.util.List<org.example.Vehicle> vehicleList13 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList14 = rentalSystem0.getVehicles();
        java.lang.Class<?> wildcardClass15 = rentalSystem0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertNotNull(vehicleList7);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.\". not found." + "'", str12, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList13);
        org.junit.Assert.assertNotNull(vehicleList14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test1011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1011");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.searchVehicle("Vehicle with ID  not found.");
        rentalSystem0.addVehicle("hi!", "Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID hi! not found.", (double) 0);
        rentalSystem0.addCustomer("Vehicle with ID hi! not found.", "hi!");
        java.lang.String str18 = rentalSystem0.returnVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".");
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID hi! not found.\".", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.", (double) (byte) 10);
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found.", 1.0d);
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found. not found.\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".");
        java.lang.String str33 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\". not found. not found. not found.\".");
        // The following exception was thrown during execution in test generation
        try {
            rentalSystem0.addVehicle("", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\". not found.\".", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found. not found. not found. not found. not found.", (double) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Vehicle ID cannot be null or empty");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "No vehicles match the keyword \"Vehicle with ID  not found.\"." + "'", str8, "No vehicles match the keyword \"Vehicle with ID  not found.\".");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found." + "'", str18, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\". not found. not found. not found.\". not found." + "'", str33, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\". not found. not found. not found.\". not found.");
    }

    @Test
    public void test1012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1012");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.searchVehicle("Vehicle with ID  not found.");
        rentalSystem0.addVehicle("hi!", "Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID hi! not found.", (double) 0);
        java.lang.String str15 = rentalSystem0.returnVehicle("Vehicle with ID  not found.");
        int int16 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.\".", "No vehicles match the keyword \"hi!\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".", 0.0d);
        java.util.List<org.example.Customer> customerList22 = rentalSystem0.getCustomers();
        java.lang.String str24 = rentalSystem0.returnVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\".");
        java.lang.Class<?> wildcardClass25 = rentalSystem0.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "No vehicles match the keyword \"Vehicle with ID  not found.\"." + "'", str8, "No vehicles match the keyword \"Vehicle with ID  not found.\".");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Vehicle with ID Vehicle with ID  not found. not found." + "'", str15, "Vehicle with ID Vehicle with ID  not found. not found.");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(customerList22);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\". not found." + "'", str24, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\". not found.");
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test1013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1013");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("");
        rentalSystem0.addVehicle("Vehicle with ID  not found.", "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.", "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.", (double) (short) 0);
        java.lang.String str10 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"hi!\". not found.");
        int int11 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str13 = rentalSystem0.returnVehicle("Vehicle with ID  not found.");
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.\". not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found. not found.\".", (double) 1.0f);
        rentalSystem0.addVehicle("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\".\".\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found.\".", "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.", (double) 10L);
        java.lang.String str25 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.");
        java.lang.Class<?> wildcardClass26 = rentalSystem0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID  not found." + "'", str3, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found." + "'", str10, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle is already available." + "'", str13, "Vehicle is already available.");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\"." + "'", str25, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".");
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test1014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1014");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("hi!");
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        int int5 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str9 = rentalSystem0.rentVehicle("No vehicles match the keyword \"\".", "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.", (int) (short) 10);
        java.lang.String str13 = rentalSystem0.rentVehicle("No vehicles match the keyword \"\".", "", (-1));
        int int14 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str16 = rentalSystem0.returnVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\".");
        java.util.List<org.example.Vehicle> vehicleList17 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList18 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList19 = rentalSystem0.getCustomers();
        java.lang.String str23 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\". not found.\". not found. not found.", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.\". not found.\".\".\".\". not found.", (int) (byte) 1);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID hi! not found." + "'", str3, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Vehicle with ID No vehicles match the keyword \"\". not found." + "'", str9, "Vehicle with ID No vehicles match the keyword \"\". not found.");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID No vehicles match the keyword \"\". not found." + "'", str13, "Vehicle with ID No vehicles match the keyword \"\". not found.");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found." + "'", str16, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found.");
        org.junit.Assert.assertNotNull(vehicleList17);
        org.junit.Assert.assertNotNull(customerList18);
        org.junit.Assert.assertNotNull(customerList19);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\". not found.\". not found. not found. not found." + "'", str23, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\". not found.\". not found. not found. not found.");
    }

    @Test
    public void test1015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1015");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.rentVehicle("", "No vehicles match the keyword \"Vehicle with ID hi! not found.\".", (int) (byte) 100);
        java.lang.String str10 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.");
        int int11 = rentalSystem0.getAvailableVehicleCount();
        int int12 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str14 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\".");
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID  not found.\".\".\".", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found.\".");
        java.lang.String str19 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\". not found.");
        int int20 = rentalSystem0.getAvailableVehicleCount();
        java.lang.Class<?> wildcardClass21 = rentalSystem0.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID  not found." + "'", str8, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found." + "'", str10, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\".\"." + "'", str14, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\".\".");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\". not found. not found." + "'", str19, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\". not found. not found.");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test1016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1016");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList7 = rentalSystem0.getVehicles();
        java.lang.String str11 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.", "Vehicle with ID hi! not found.", (int) '#');
        java.util.List<org.example.Customer> customerList12 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\". not found.", "hi!");
        java.lang.Class<?> wildcardClass16 = rentalSystem0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertNotNull(vehicleList7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found." + "'", str11, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.");
        org.junit.Assert.assertNotNull(customerList12);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test1017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1017");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.");
        java.lang.String str10 = rentalSystem0.searchVehicle("No vehicles match the keyword \"hi!\".");
        java.lang.String str12 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.\". not found. not found.");
        java.lang.String str14 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\".\". not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\"." + "'", str8, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\"." + "'", str10, "No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.\". not found. not found. not found." + "'", str12, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.\". not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\".\". not found. not found.\"." + "'", str14, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\".\". not found. not found.\".");
    }

    @Test
    public void test1018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1018");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("hi!");
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        int int5 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str9 = rentalSystem0.rentVehicle("No vehicles match the keyword \"\".", "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.", (int) (short) 10);
        java.lang.String str13 = rentalSystem0.rentVehicle("No vehicles match the keyword \"\".", "", (-1));
        java.lang.String str15 = rentalSystem0.returnVehicle("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\".");
        int int16 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str18 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.\".\".\". not found.");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID hi! not found." + "'", str3, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Vehicle with ID No vehicles match the keyword \"\". not found." + "'", str9, "Vehicle with ID No vehicles match the keyword \"\". not found.");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID No vehicles match the keyword \"\". not found." + "'", str13, "Vehicle with ID No vehicles match the keyword \"\". not found.");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\". not found." + "'", str15, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\". not found.");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.\".\".\". not found.\"." + "'", str18, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.\".\".\". not found.\".");
    }

    @Test
    public void test1019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1019");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("");
        rentalSystem0.addVehicle("Vehicle with ID  not found.", "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.", "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.", (double) (short) 0);
        java.util.List<org.example.Customer> customerList9 = rentalSystem0.getCustomers();
        java.lang.String str13 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\". not found. not found. not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\". not found.", (int) '#');
        java.lang.String str15 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\". not found.");
        // The following exception was thrown during execution in test generation
        try {
            rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\".\".", "");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Customer ID cannot be null or empty");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID  not found." + "'", str3, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList9);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\". not found. not found. not found. not found." + "'", str13, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\". not found. not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\". not found. not found." + "'", str15, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\". not found. not found.");
    }

    @Test
    public void test1020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1020");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("");
        int int4 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Vehicle> vehicleList5 = rentalSystem0.getVehicles();
        java.lang.String str7 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.");
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".", "Vehicle with ID hi! not found.");
        int int11 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\". not found. not found. not found.");
        rentalSystem0.addCustomer("Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found.\". not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found.");
        java.lang.Class<?> wildcardClass18 = rentalSystem0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID  not found." + "'", str3, "Vehicle with ID  not found.");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(vehicleList5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.\"." + "'", str7, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.\".");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test1021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1021");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID  not found.\".", "hi!");
        rentalSystem0.addCustomer("No vehicles match the keyword \"hi!\".", "hi!");
        java.lang.String str14 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        java.util.List<org.example.Vehicle> vehicleList15 = rentalSystem0.getVehicles();
        java.lang.String str17 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.");
        int int18 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found. not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\". not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.\". not found.", (double) 1.0f);
        java.lang.String str27 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found. not found. not found.", "No vehicles match the keyword \"ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n\".", 3);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found." + "'", str14, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found." + "'", str17, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found. not found. not found. not found." + "'", str27, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found. not found. not found. not found.");
    }

    @Test
    public void test1022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1022");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("hi!");
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList5 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList7 = rentalSystem0.getCustomers();
        java.lang.Class<?> wildcardClass8 = rentalSystem0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID hi! not found." + "'", str3, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertNotNull(customerList5);
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertNotNull(customerList7);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test1023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1023");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID  not found. not found.", "No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        java.lang.String str8 = rentalSystem0.rentVehicle("hi!", "No vehicles match the keyword \"Vehicle with ID  not found.\".", 100);
        int int9 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str11 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found.");
        java.util.List<org.example.Vehicle> vehicleList12 = rentalSystem0.getVehicles();
        java.lang.String str14 = rentalSystem0.returnVehicle("");
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found. not found. not found.", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found.");
        int int18 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str20 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\".");
        java.util.List<org.example.Vehicle> vehicleList21 = rentalSystem0.getVehicles();
        java.lang.String str23 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.\". not found. not found.\".");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID hi! not found." + "'", str8, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found.\"." + "'", str11, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found.\".");
        org.junit.Assert.assertNotNull(vehicleList12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID  not found." + "'", str14, "Vehicle with ID  not found.");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found." + "'", str20, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.\". not found. not found.\".\"." + "'", str23, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.\". not found. not found.\".\".");
    }

    @Test
    public void test1024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1024");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("");
        java.util.List<org.example.Vehicle> vehicleList4 = rentalSystem0.getVehicles();
        java.lang.String str6 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID  not found. not found.");
        java.util.List<org.example.Customer> customerList7 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.\".");
        rentalSystem0.addCustomer("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found.\".");
        java.util.List<org.example.Customer> customerList14 = rentalSystem0.getCustomers();
        java.lang.Class<?> wildcardClass15 = rentalSystem0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID  not found." + "'", str3, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str6, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertNotNull(customerList7);
        org.junit.Assert.assertNotNull(customerList14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test1025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1025");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList7 = rentalSystem0.getCustomers();
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found.\". not found.", "Vehicle with ID ID: Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found., Model: Vehicle with ID Vehicle with ID hi! not found. not found., Type: No vehicles match the keyword \"hi!\"., Daily Rate: $1.0, Status: Available\nID: Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.\". not found., Model: No vehicles match the keyword \"\"., Type: No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found.\"., Daily Rate: $100.0, Status: Available\n not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found. not found. not found.\". not found. not found.", (double) 1.0f);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertNotNull(customerList7);
    }

    @Test
    public void test1026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1026");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("hi!");
        java.lang.String str5 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\".", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".\".");
        java.lang.String str12 = rentalSystem0.rentVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\".\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\".", 1);
        java.lang.String str14 = rentalSystem0.returnVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\".\".");
        int int15 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList16 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList17 = rentalSystem0.getCustomers();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID hi! not found." + "'", str3, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found." + "'", str5, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\".\". not found." + "'", str12, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\".\". not found.");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\".\". not found." + "'", str14, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\".\". not found.");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(customerList16);
        org.junit.Assert.assertNotNull(customerList17);
    }

    @Test
    public void test1027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1027");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.returnVehicle("");
        int int9 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str13 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found.", (int) (short) 0);
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\". not found.", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found. not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.\". not found. not found.", (double) 100L);
        java.util.List<org.example.Customer> customerList19 = rentalSystem0.getCustomers();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID  not found." + "'", str8, "Vehicle with ID  not found.");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str13, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertNotNull(customerList19);
    }

    @Test
    public void test1028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1028");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        int int2 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        int int4 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".", "No vehicles match the keyword \"Vehicle with ID  not found.\".");
        int int8 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str10 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\".");
        java.util.List<org.example.Vehicle> vehicleList11 = rentalSystem0.getVehicles();
        rentalSystem0.addVehicle("No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\". not found.", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.\".", (double) '#');
        rentalSystem0.addCustomer("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found.");
        int int20 = rentalSystem0.getAvailableVehicleCount();
        // The following exception was thrown during execution in test generation
        try {
            rentalSystem0.addCustomer("", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\".\". not found. not found. not found.");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Name cannot be null or empty");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found." + "'", str10, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList11);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
    }

    @Test
    public void test1029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1029");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList4 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID  not found. not found.", "hi!");
        java.lang.String str11 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID hi! not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".", (int) '4');
        java.lang.String str13 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.");
        int int14 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str16 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\". not found.\".");
        java.lang.String str18 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found. not found.");
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\". not found.\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found. not found.\".");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(vehicleList4);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found." + "'", str11, "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found. not found." + "'", str13, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found. not found.");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\". not found.\". not found." + "'", str16, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\". not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found. not found. not found." + "'", str18, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found. not found. not found.");
    }

    @Test
    public void test1030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1030");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.lang.String str4 = rentalSystem0.searchVehicle("hi!");
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID  not found.\".", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\".", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\".", 100.0d);
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.\". not found.");
        java.util.List<org.example.Customer> customerList13 = rentalSystem0.getCustomers();
        java.lang.String str15 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found. not found. not found.\". not found.");
        // The following exception was thrown during execution in test generation
        try {
            rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\".\".\". not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.\".", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\". not found. not found. not found.", (-1.0d));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Daily rate cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "No vehicles match the keyword \"hi!\"." + "'", str4, "No vehicles match the keyword \"hi!\".");
        org.junit.Assert.assertNotNull(customerList13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found. not found. not found.\". not found. not found." + "'", str15, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found. not found. not found.\". not found. not found.");
    }

    @Test
    public void test1031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1031");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("");
        rentalSystem0.addVehicle("Vehicle with ID  not found.", "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.", "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.", (double) (short) 0);
        java.lang.String str10 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"hi!\". not found.");
        java.util.List<org.example.Vehicle> vehicleList11 = rentalSystem0.getVehicles();
        java.lang.Class<?> wildcardClass12 = vehicleList11.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID  not found." + "'", str3, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found." + "'", str10, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList11);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test1032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1032");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        int int2 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        int int4 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addVehicle("Vehicle with ID  not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.", (double) (byte) 100);
        java.lang.String str11 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".");
        java.util.List<org.example.Customer> customerList12 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList13 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\". not found. not found.", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\". not found. not found. not found. not found.");
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.\".\". not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found.", "Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found.", 1.0d);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\". not found." + "'", str11, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\". not found.");
        org.junit.Assert.assertNotNull(customerList12);
        org.junit.Assert.assertNotNull(vehicleList13);
    }

    @Test
    public void test1033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1033");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("hi!");
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        int int5 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str9 = rentalSystem0.rentVehicle("No vehicles match the keyword \"\".", "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.", (int) (short) 10);
        java.lang.String str13 = rentalSystem0.rentVehicle("No vehicles match the keyword \"\".", "", (-1));
        int int14 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str16 = rentalSystem0.returnVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\".");
        java.util.List<org.example.Customer> customerList17 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList18 = rentalSystem0.getVehicles();
        java.lang.String str20 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID hi! not found." + "'", str3, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Vehicle with ID No vehicles match the keyword \"\". not found." + "'", str9, "Vehicle with ID No vehicles match the keyword \"\". not found.");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID No vehicles match the keyword \"\". not found." + "'", str13, "Vehicle with ID No vehicles match the keyword \"\". not found.");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found." + "'", str16, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found.");
        org.junit.Assert.assertNotNull(customerList17);
        org.junit.Assert.assertNotNull(vehicleList18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\"." + "'", str20, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".");
    }

    @Test
    public void test1034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1034");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID  not found.", 100);
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID  not found.\".", "Vehicle with ID Vehicle with ID  not found. not found.");
        rentalSystem0.addCustomer("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".");
        java.lang.String str16 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\". not found." + "'", str16, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\". not found.");
    }

    @Test
    public void test1035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1035");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.returnVehicle("Vehicle with ID  not found.");
        java.lang.String str12 = rentalSystem0.rentVehicle("Vehicle with ID hi! not found.", "Vehicle with ID Vehicle with ID  not found. not found.", (int) (byte) 10);
        java.lang.String str14 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        java.util.List<org.example.Vehicle> vehicleList15 = rentalSystem0.getVehicles();
        java.lang.String str19 = rentalSystem0.rentVehicle("", "Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.", (int) (byte) 100);
        java.util.List<org.example.Customer> customerList20 = rentalSystem0.getCustomers();
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\". not found.\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found. not found.\".", 0.0d);
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\". not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found. not found. not found.\".");
        java.util.List<org.example.Vehicle> vehicleList29 = rentalSystem0.getVehicles();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID  not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID  not found. not found.");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID Vehicle with ID hi! not found. not found." + "'", str12, "Vehicle with ID Vehicle with ID hi! not found. not found.");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found." + "'", str14, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList15);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Vehicle with ID  not found." + "'", str19, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList20);
        org.junit.Assert.assertNotNull(vehicleList29);
    }

    @Test
    public void test1036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1036");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.searchVehicle("Vehicle with ID  not found.");
        rentalSystem0.addVehicle("hi!", "Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID hi! not found.", (double) 0);
        java.util.List<org.example.Customer> customerList14 = rentalSystem0.getCustomers();
        java.lang.String str18 = rentalSystem0.rentVehicle("Vehicle with ID No vehicles match the keyword \"hi!\". not found.", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found. not found.", (int) (short) -1);
        java.util.List<org.example.Vehicle> vehicleList19 = rentalSystem0.getVehicles();
        java.lang.String str21 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.");
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\".", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".");
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID  not found.\".", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID hi! not found.\".\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.", (double) 100);
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\".\".\". not found. not found. not found. not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\".\". not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found.\".\". not found. not found.\".", (double) (short) 10);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "No vehicles match the keyword \"Vehicle with ID  not found.\"." + "'", str8, "No vehicles match the keyword \"Vehicle with ID  not found.\".");
        org.junit.Assert.assertNotNull(customerList14);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found." + "'", str18, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList19);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\"." + "'", str21, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\".");
    }

    @Test
    public void test1037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1037");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("");
        java.util.List<org.example.Vehicle> vehicleList4 = rentalSystem0.getVehicles();
        java.lang.String str6 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID  not found. not found.");
        java.util.List<org.example.Customer> customerList7 = rentalSystem0.getCustomers();
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID  not found.\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.", (double) ' ');
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found. not found.", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found. not found. not found.", "Vehicle with ID Vehicle with ID hi! not found. not found.", (double) '#');
        int int18 = rentalSystem0.getAvailableVehicleCount();
        int int19 = rentalSystem0.getAvailableVehicleCount();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID  not found." + "'", str3, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str6, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertNotNull(customerList7);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2 + "'", int18 == 2);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2 + "'", int19 == 2);
    }

    @Test
    public void test1038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1038");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        int int7 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str9 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID  not found.\".");
        int int10 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Vehicle> vehicleList11 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\". not found.\".", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\".\". not found. not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found." + "'", str9, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(vehicleList11);
    }

    @Test
    public void test1039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1039");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID  not found.\".", "hi!");
        rentalSystem0.addCustomer("No vehicles match the keyword \"hi!\".", "hi!");
        java.lang.String str14 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        int int15 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList16 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList17 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found. not found. not found.", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\". not found.\".");
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found.\". not found.\".", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\". not found.\".\".");
        java.lang.String str25 = rentalSystem0.searchVehicle("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID  not found.\".\".\".");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found." + "'", str14, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(customerList16);
        org.junit.Assert.assertNotNull(customerList17);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID  not found.\".\".\".\"." + "'", str25, "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID  not found.\".\".\".\".");
    }

    @Test
    public void test1040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1040");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.searchVehicle("Vehicle with ID  not found.");
        int int9 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str11 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\". not found. not found. not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.");
        int int15 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str17 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found.");
        int int18 = rentalSystem0.getAvailableVehicleCount();
        java.lang.Class<?> wildcardClass19 = rentalSystem0.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "No vehicles match the keyword \"Vehicle with ID  not found.\"." + "'", str8, "No vehicles match the keyword \"Vehicle with ID  not found.\".");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID hi! not found.\".\"." + "'", str11, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID hi! not found.\".\".");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found.\"." + "'", str17, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found.\".");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test1041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1041");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList5 = rentalSystem0.getVehicles();
        java.lang.String str9 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".", "No vehicles match the keyword \"Vehicle with ID  not found.\".", (int) ' ');
        int int10 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Vehicle> vehicleList11 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found.\".", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found.\".\".\".");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertNotNull(vehicleList5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found." + "'", str9, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(vehicleList11);
    }

    @Test
    public void test1042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1042");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.lang.String str4 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found.");
        java.lang.String str6 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found.\".");
        java.lang.String str10 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\".\".\". not found. not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\".\".", (int) (short) 100);
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found. not found.\".", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\".\". not found.");
        java.lang.String str17 = rentalSystem0.rentVehicle("ID: No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\".\"., Model: No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.\"., Type: Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found., Daily Rate: $10.0, Status: Available\n", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\".\". not found. not found.", 100);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found." + "'", str4, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found.");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found.\".\"." + "'", str6, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found.\".\".");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\".\".\". not found. not found. not found." + "'", str10, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\".\".\". not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Vehicle with ID ID: No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\".\"., Model: No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.\"., Type: Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found., Daily Rate: $10.0, Status: Available\n not found." + "'", str17, "Vehicle with ID ID: No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\".\"., Model: No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.\"., Type: Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found., Daily Rate: $10.0, Status: Available\n not found.");
    }

    @Test
    public void test1043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1043");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.searchVehicle("No vehicles match the keyword \"hi!\".");
        int int9 = rentalSystem0.getAvailableVehicleCount();
        java.lang.Class<?> wildcardClass10 = rentalSystem0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\"." + "'", str8, "No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test1044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1044");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID  not found. not found.", "No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        java.util.List<org.example.Vehicle> vehicleList5 = rentalSystem0.getVehicles();
        java.lang.String str7 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.");
        int int8 = rentalSystem0.getAvailableVehicleCount();
        int int9 = rentalSystem0.getAvailableVehicleCount();
        int int10 = rentalSystem0.getAvailableVehicleCount();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found." + "'", str7, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
    }

    @Test
    public void test1045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1045");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.searchVehicle("Vehicle with ID  not found.");
        rentalSystem0.addVehicle("hi!", "Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID hi! not found.", (double) 0);
        java.util.List<org.example.Customer> customerList14 = rentalSystem0.getCustomers();
        java.lang.String str18 = rentalSystem0.rentVehicle("Vehicle with ID No vehicles match the keyword \"hi!\". not found.", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found. not found.", (int) (short) -1);
        java.lang.String str20 = rentalSystem0.searchVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".");
        java.lang.String str22 = rentalSystem0.returnVehicle("Vehicle with ID hi! not found.");
        java.lang.Class<?> wildcardClass23 = rentalSystem0.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "No vehicles match the keyword \"Vehicle with ID  not found.\"." + "'", str8, "No vehicles match the keyword \"Vehicle with ID  not found.\".");
        org.junit.Assert.assertNotNull(customerList14);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found." + "'", str18, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\"." + "'", str20, "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\".");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Vehicle with ID Vehicle with ID hi! not found. not found." + "'", str22, "Vehicle with ID Vehicle with ID hi! not found. not found.");
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test1046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1046");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        int int2 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        int int4 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList5 = rentalSystem0.getCustomers();
        java.lang.String str7 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.");
        java.lang.String str9 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found. not found. not found.\".");
        java.lang.String str11 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\". not found. not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(customerList5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found. not found." + "'", str7, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found. not found.");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found. not found. not found.\". not found." + "'", str9, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found. not found. not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\". not found. not found. not found. not found." + "'", str11, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\". not found. not found. not found. not found.");
    }

    @Test
    public void test1047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1047");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("hi!");
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("Vehicle with ID hi! not found.", "Vehicle with ID Vehicle with ID  not found. not found.");
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found. not found.", "Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.\".", (double) 0.0f);
        int int13 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str15 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.");
        java.lang.Class<?> wildcardClass16 = rentalSystem0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID hi! not found." + "'", str3, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.\"." + "'", str15, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.\".");
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test1048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1048");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.searchVehicle("Vehicle with ID  not found.");
        rentalSystem0.addVehicle("hi!", "Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID hi! not found.", (double) 0);
        java.util.List<org.example.Vehicle> vehicleList14 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList15 = rentalSystem0.getCustomers();
        int int16 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Vehicle> vehicleList17 = rentalSystem0.getVehicles();
        java.lang.String str19 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\". not found. not found. not found.\".");
        java.util.List<org.example.Customer> customerList20 = rentalSystem0.getCustomers();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "No vehicles match the keyword \"Vehicle with ID  not found.\"." + "'", str8, "No vehicles match the keyword \"Vehicle with ID  not found.\".");
        org.junit.Assert.assertNotNull(vehicleList14);
        org.junit.Assert.assertNotNull(customerList15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(vehicleList17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\". not found. not found. not found.\".\"." + "'", str19, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\". not found. not found. not found.\".\".");
        org.junit.Assert.assertNotNull(customerList20);
    }

    @Test
    public void test1049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1049");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("");
        int int4 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str8 = rentalSystem0.rentVehicle("", "", (int) '#');
        java.lang.Class<?> wildcardClass9 = rentalSystem0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID  not found." + "'", str3, "Vehicle with ID  not found.");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID  not found." + "'", str8, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test1050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1050");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.searchVehicle("Vehicle with ID  not found.");
        java.util.List<org.example.Vehicle> vehicleList9 = rentalSystem0.getVehicles();
        java.lang.Class<?> wildcardClass10 = vehicleList9.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "No vehicles match the keyword \"Vehicle with ID  not found.\"." + "'", str8, "No vehicles match the keyword \"Vehicle with ID  not found.\".");
        org.junit.Assert.assertNotNull(vehicleList9);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test1051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1051");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("");
        java.util.List<org.example.Vehicle> vehicleList4 = rentalSystem0.getVehicles();
        java.lang.String str6 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID  not found. not found.");
        java.util.List<org.example.Customer> customerList7 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.\".");
        rentalSystem0.addCustomer("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found.\".");
        java.util.List<org.example.Customer> customerList14 = rentalSystem0.getCustomers();
        int int15 = rentalSystem0.getAvailableVehicleCount();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID  not found." + "'", str3, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str6, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertNotNull(customerList7);
        org.junit.Assert.assertNotNull(customerList14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
    }

    @Test
    public void test1052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1052");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.lang.String str7 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".");
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID  not found.");
        int int11 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Vehicle> vehicleList12 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList13 = rentalSystem0.getVehicles();
        java.lang.String str15 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\". not found.\". not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\"." + "'", str7, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(vehicleList12);
        org.junit.Assert.assertNotNull(vehicleList13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\". not found.\". not found. not found.\"." + "'", str15, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\". not found.\". not found. not found.\".");
    }

    @Test
    public void test1053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1053");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID  not found.", 100);
        java.lang.String str12 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID  not found.\".", "Vehicle with ID Vehicle with ID hi! not found. not found.", (int) (short) -1);
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\". not found.", "No vehicles match the keyword \"Vehicle with ID  not found.\".", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.\".", (double) (short) 1);
        int int18 = rentalSystem0.getAvailableVehicleCount();
        int int19 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str23 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found. not found.\".", "No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".", (int) (byte) 100);
        int int24 = rentalSystem0.getAvailableVehicleCount();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found." + "'", str12, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found. not found.\". not found." + "'", str23, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found. not found.\". not found.");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
    }

    @Test
    public void test1054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1054");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("");
        int int4 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Vehicle> vehicleList5 = rentalSystem0.getVehicles();
        java.lang.String str7 = rentalSystem0.searchVehicle("hi!");
        java.lang.String str11 = rentalSystem0.rentVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found.", "", (int) (byte) 0);
        java.lang.String str13 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\". not found.");
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found. not found. not found.", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.");
        // The following exception was thrown during execution in test generation
        try {
            rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n\".\".\".\".\".", "");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Customer ID cannot be null or empty");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID  not found." + "'", str3, "Vehicle with ID  not found.");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(vehicleList5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "No vehicles match the keyword \"hi!\"." + "'", str7, "No vehicles match the keyword \"hi!\".");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found." + "'", str11, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found.");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\". not found.\"." + "'", str13, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\". not found.\".");
    }

    @Test
    public void test1055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1055");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.returnVehicle("");
        int int9 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList10 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList11 = rentalSystem0.getCustomers();
        rentalSystem0.addVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found. not found.\". not found.\".\".", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found.\".\". not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.\". not found. not found.", (double) 1L);
        int int17 = rentalSystem0.getAvailableVehicleCount();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID  not found." + "'", str8, "Vehicle with ID  not found.");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(customerList10);
        org.junit.Assert.assertNotNull(customerList11);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
    }

    @Test
    public void test1056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1056");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID  not found.", 100);
        java.lang.String str12 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID  not found.\".", "Vehicle with ID Vehicle with ID hi! not found. not found.", (int) (short) -1);
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.");
        java.util.List<org.example.Customer> customerList16 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList17 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList18 = rentalSystem0.getCustomers();
        java.lang.String str20 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.\".\". not found.");
        java.lang.Class<?> wildcardClass21 = rentalSystem0.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found." + "'", str12, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.");
        org.junit.Assert.assertNotNull(customerList16);
        org.junit.Assert.assertNotNull(vehicleList17);
        org.junit.Assert.assertNotNull(customerList18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.\".\". not found.\"." + "'", str20, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.\".\". not found.\".");
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test1057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1057");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("");
        rentalSystem0.addVehicle("Vehicle with ID  not found.", "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.", "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.", (double) (short) 0);
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.", "Vehicle with ID hi! not found.", "ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n", (double) 2);
        rentalSystem0.addCustomer("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found.", "Vehicle with ID No vehicles match the keyword \"hi!\". not found.");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID  not found." + "'", str3, "Vehicle with ID  not found.");
    }

    @Test
    public void test1058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1058");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.searchVehicle("Vehicle with ID  not found.");
        rentalSystem0.addVehicle("hi!", "Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID hi! not found.", (double) 0);
        rentalSystem0.addCustomer("Vehicle with ID hi! not found.", "hi!");
        java.lang.String str18 = rentalSystem0.returnVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".");
        int int19 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\". not found. not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\".\".");
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\". not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found.\".");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "No vehicles match the keyword \"Vehicle with ID  not found.\"." + "'", str8, "No vehicles match the keyword \"Vehicle with ID  not found.\".");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found." + "'", str18, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
    }

    @Test
    public void test1059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1059");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList5 = rentalSystem0.getVehicles();
        java.lang.String str9 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".", "No vehicles match the keyword \"Vehicle with ID  not found.\".", (int) ' ');
        rentalSystem0.addVehicle("Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.", "No vehicles match the keyword \"\".", "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.", (double) 1L);
        java.lang.String str16 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found.");
        java.util.List<org.example.Vehicle> vehicleList17 = rentalSystem0.getVehicles();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertNotNull(vehicleList5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found." + "'", str9, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found.\"." + "'", str16, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found.\".");
        org.junit.Assert.assertNotNull(vehicleList17);
    }

    @Test
    public void test1060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1060");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        int int7 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str9 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID  not found.\".");
        java.lang.String str11 = rentalSystem0.returnVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\".");
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID  not found.\".\".\". not found.\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found. not found.\".");
        java.util.List<org.example.Customer> customerList15 = rentalSystem0.getCustomers();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found." + "'", str9, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\". not found." + "'", str11, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\". not found.");
        org.junit.Assert.assertNotNull(customerList15);
    }

    @Test
    public void test1061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1061");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList4 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID  not found. not found.", "hi!");
        java.lang.String str11 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID hi! not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".", (int) '4');
        java.lang.String str13 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.");
        int int14 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str16 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\". not found.");
        java.lang.Class<?> wildcardClass17 = rentalSystem0.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(vehicleList4);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found." + "'", str11, "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found. not found." + "'", str13, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found. not found.");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\". not found. not found." + "'", str16, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\". not found. not found.");
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test1062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1062");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.returnVehicle("Vehicle with ID  not found.");
        int int9 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str13 = rentalSystem0.rentVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".", "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.", (int) (short) 10);
        java.util.List<org.example.Vehicle> vehicleList14 = rentalSystem0.getVehicles();
        // The following exception was thrown during execution in test generation
        try {
            rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\". not found. not found.\". not found.", "No vehicles match the keyword \"No vehicles match the keyword \"\".\".", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n\".\".\". not found. not found. not found.", (double) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Daily rate cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID  not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID  not found. not found.");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found." + "'", str13, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.");
        org.junit.Assert.assertNotNull(vehicleList14);
    }

    @Test
    public void test1063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1063");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.", "hi!", (int) (short) 100);
        java.lang.String str10 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".");
        java.lang.String str12 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.");
        java.util.List<org.example.Customer> customerList13 = rentalSystem0.getCustomers();
        java.lang.String str15 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\". not found.\". not found.\".");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\"." + "'", str10, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\".");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\"." + "'", str12, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\".");
        org.junit.Assert.assertNotNull(customerList13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\". not found.\". not found.\".\"." + "'", str15, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\". not found.\". not found.\".\".");
    }

    @Test
    public void test1064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1064");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID  not found.", 100);
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID  not found.\".", "Vehicle with ID Vehicle with ID  not found. not found.");
        java.util.List<org.example.Vehicle> vehicleList12 = rentalSystem0.getVehicles();
        // The following exception was thrown during execution in test generation
        try {
            rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found. not found. not found.", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found. not found. not found.\".\". not found.", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found.\".", (double) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Daily rate cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList12);
    }

    @Test
    public void test1065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1065");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList7 = rentalSystem0.getVehicles();
        java.lang.String str11 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID hi! not found.\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.", (int) (byte) 100);
        java.util.List<org.example.Customer> customerList12 = rentalSystem0.getCustomers();
        int int13 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.\". not found.", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID  not found.\".\".\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\". not found.\". not found.", (double) (byte) 0);
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".");
        rentalSystem0.addVehicle("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\".\".", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\".\". not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.\".\".", 0.0d);
        java.lang.String str30 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found.\". not found.\".", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n\".\". not found.", 2);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertNotNull(vehicleList7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found." + "'", str11, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.");
        org.junit.Assert.assertNotNull(customerList12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found.\". not found.\". not found." + "'", str30, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found.\". not found.\". not found.");
    }

    @Test
    public void test1066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1066");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList4 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID  not found. not found.", "hi!");
        int int8 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str10 = rentalSystem0.searchVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\".\".");
        // The following exception was thrown during execution in test generation
        try {
            rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found. not found.", "", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found.\". not found.", (double) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Model cannot be null or empty");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(vehicleList4);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\".\".\"." + "'", str10, "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\".\".\".");
    }

    @Test
    public void test1067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1067");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.returnVehicle("Vehicle with ID  not found.");
        int int9 = rentalSystem0.getAvailableVehicleCount();
        int int10 = rentalSystem0.getAvailableVehicleCount();
        int int11 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Vehicle> vehicleList12 = rentalSystem0.getVehicles();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID  not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID  not found. not found.");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(vehicleList12);
    }

    @Test
    public void test1068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1068");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.searchVehicle("No vehicles match the keyword \"hi!\".");
        int int9 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str11 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found. not found. not found.\". not found.");
        // The following exception was thrown during execution in test generation
        try {
            rentalSystem0.addCustomer("", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\".\". not found.");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Name cannot be null or empty");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\"." + "'", str8, "No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found. not found. not found.\". not found.\"." + "'", str11, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found. not found. not found.\". not found.\".");
    }

    @Test
    public void test1069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1069");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.lang.String str9 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.", (int) (byte) 1);
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID  not found. not found.", "No vehicles match the keyword \"\".", "Vehicle with ID  not found.", (double) 1L);
        java.lang.String str16 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\". not found.");
        java.lang.String str18 = rentalSystem0.returnVehicle("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\".");
        rentalSystem0.addVehicle("hi!", "No vehicles match the keyword \"ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n\".", "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.", (double) 3);
        java.lang.String str27 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\".", (int) (byte) 100);
        java.util.List<org.example.Customer> customerList28 = rentalSystem0.getCustomers();
        java.lang.String str30 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found. not found.\". not found.\".");
        int int31 = rentalSystem0.getAvailableVehicleCount();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found." + "'", str9, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\". not found.\"." + "'", str16, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\". not found.\".");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\". not found." + "'", str18, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\". not found.");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found." + "'", str27, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.");
        org.junit.Assert.assertNotNull(customerList28);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found. not found.\". not found.\".\"." + "'", str30, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found. not found.\". not found.\".\".");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2 + "'", int31 == 2);
    }

    @Test
    public void test1070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1070");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.returnVehicle("Vehicle with ID  not found.");
        int int9 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str13 = rentalSystem0.rentVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".", "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.", (int) (short) 10);
        java.lang.String str17 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".", (int) (byte) 100);
        java.util.List<org.example.Customer> customerList18 = rentalSystem0.getCustomers();
        java.lang.String str20 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\". not found.");
        java.lang.String str24 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\". not found. not found.", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found.", 10);
        java.lang.String str28 = rentalSystem0.rentVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found. not found.\". not found. not found.\".\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\". not found. not found.", 2);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID  not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID  not found. not found.");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found." + "'", str13, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found." + "'", str17, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.");
        org.junit.Assert.assertNotNull(customerList18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\". not found. not found." + "'", str20, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\". not found. not found.");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\". not found. not found. not found." + "'", str24, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\". not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found. not found.\". not found. not found.\".\". not found." + "'", str28, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found. not found.\". not found. not found.\".\". not found.");
    }

    @Test
    public void test1071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1071");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID  not found.", 100);
        java.lang.String str12 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID  not found.\".", "Vehicle with ID Vehicle with ID hi! not found. not found.", (int) (short) -1);
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.");
        java.util.List<org.example.Vehicle> vehicleList16 = rentalSystem0.getVehicles();
        java.lang.String str20 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found.\". not found. not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found. not found. not found.\". not found.", 10);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found." + "'", str12, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList16);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found.\". not found. not found. not found." + "'", str20, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found.\". not found. not found. not found.");
    }

    @Test
    public void test1072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1072");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.lang.String str9 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.", (int) (byte) 1);
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID hi! not found.\".", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\".");
        int int13 = rentalSystem0.getAvailableVehicleCount();
        int int14 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Vehicle> vehicleList15 = rentalSystem0.getVehicles();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found." + "'", str9, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(vehicleList15);
    }

    @Test
    public void test1073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1073");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        int int7 = rentalSystem0.getAvailableVehicleCount();
        int int8 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\".", "hi!");
        java.lang.String str15 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\".", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID  not found.\".\".", (int) 'a');
        java.lang.String str17 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found. not found.");
        java.lang.String str19 = rentalSystem0.returnVehicle("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.\". not found.\".\".\".");
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\". not found. not found. not found.", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.\".\".\".");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found." + "'", str15, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found. not found.\"." + "'", str17, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found. not found.\".");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.\". not found.\".\".\". not found." + "'", str19, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.\". not found.\".\".\". not found.");
    }

    @Test
    public void test1074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1074");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("");
        int int4 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Vehicle> vehicleList5 = rentalSystem0.getVehicles();
        java.lang.String str7 = rentalSystem0.searchVehicle("hi!");
        java.lang.String str11 = rentalSystem0.rentVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found.", "", (int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            rentalSystem0.addCustomer("", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found.\".");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Name cannot be null or empty");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID  not found." + "'", str3, "Vehicle with ID  not found.");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(vehicleList5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "No vehicles match the keyword \"hi!\"." + "'", str7, "No vehicles match the keyword \"hi!\".");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found." + "'", str11, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found.");
    }

    @Test
    public void test1075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1075");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.lang.String str5 = rentalSystem0.returnVehicle("Vehicle with ID  not found.");
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.");
        // The following exception was thrown during execution in test generation
        try {
            rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found.\". not found.\". not found. not found.", "Vehicle with ID No vehicles match the keyword \"\". not found.", "", 0.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Type cannot be null or empty");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID Vehicle with ID  not found. not found." + "'", str5, "Vehicle with ID Vehicle with ID  not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
    }

    @Test
    public void test1076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1076");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.", "hi!", (int) (short) 100);
        java.util.List<org.example.Vehicle> vehicleList9 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found.", "No vehicles match the keyword \"\".");
        int int13 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addCustomer("ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".\". not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList9);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
    }

    @Test
    public void test1077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1077");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList5 = rentalSystem0.getVehicles();
        java.lang.String str9 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".", "No vehicles match the keyword \"Vehicle with ID  not found.\".", (int) ' ');
        java.lang.String str13 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID  not found. not found.", "", (int) (byte) -1);
        int int14 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addCustomer("Vehicle with ID  not found.", "Vehicle with ID No vehicles match the keyword \"hi!\". not found.");
        int int18 = rentalSystem0.getAvailableVehicleCount();
        java.lang.Class<?> wildcardClass19 = rentalSystem0.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertNotNull(vehicleList5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found." + "'", str9, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str13, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test1078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1078");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.searchVehicle("Vehicle with ID  not found.");
        rentalSystem0.addVehicle("hi!", "Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID hi! not found.", (double) 0);
        rentalSystem0.addCustomer("Vehicle with ID hi! not found.", "hi!");
        java.lang.String str18 = rentalSystem0.returnVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".");
        int int19 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID hi! not found.\".", "ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n");
        java.util.List<org.example.Customer> customerList23 = rentalSystem0.getCustomers();
        java.lang.Class<?> wildcardClass24 = rentalSystem0.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "No vehicles match the keyword \"Vehicle with ID  not found.\"." + "'", str8, "No vehicles match the keyword \"Vehicle with ID  not found.\".");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found." + "'", str18, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(customerList23);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test1079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1079");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList7 = rentalSystem0.getVehicles();
        rentalSystem0.addVehicle("Vehicle with ID  not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".", 1.0d);
        java.lang.String str14 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.");
        java.util.List<org.example.Customer> customerList15 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList16 = rentalSystem0.getCustomers();
        java.lang.Class<?> wildcardClass17 = rentalSystem0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertNotNull(vehicleList7);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n" + "'", str14, "ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n");
        org.junit.Assert.assertNotNull(customerList15);
        org.junit.Assert.assertNotNull(customerList16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test1080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1080");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList4 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID  not found. not found.", "hi!");
        java.lang.String str11 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID hi! not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".", (int) '4');
        java.lang.String str13 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.");
        int int14 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str16 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\". not found. not found.");
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found. not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found.", 10.0d);
        java.lang.String str23 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".");
        java.lang.Class<?> wildcardClass24 = rentalSystem0.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(vehicleList4);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found." + "'", str11, "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found." + "'", str13, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\". not found. not found. not found." + "'", str16, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\". not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\". not found." + "'", str23, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\". not found.");
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test1081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1081");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.searchVehicle("Vehicle with ID  not found.");
        rentalSystem0.addVehicle("hi!", "Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID hi! not found.", (double) 0);
        java.lang.String str15 = rentalSystem0.returnVehicle("Vehicle with ID  not found.");
        java.util.List<org.example.Customer> customerList16 = rentalSystem0.getCustomers();
        java.lang.String str18 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.");
        java.util.List<org.example.Customer> customerList19 = rentalSystem0.getCustomers();
        java.lang.String str23 = rentalSystem0.rentVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\". not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.\". not found. not found.", (int) (short) 100);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "No vehicles match the keyword \"Vehicle with ID  not found.\"." + "'", str8, "No vehicles match the keyword \"Vehicle with ID  not found.\".");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Vehicle with ID Vehicle with ID  not found. not found." + "'", str15, "Vehicle with ID Vehicle with ID  not found. not found.");
        org.junit.Assert.assertNotNull(customerList16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\"." + "'", str18, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".");
        org.junit.Assert.assertNotNull(customerList19);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\". not found. not found." + "'", str23, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\". not found. not found.");
    }

    @Test
    public void test1082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1082");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.returnVehicle("Vehicle with ID  not found.");
        java.lang.String str10 = rentalSystem0.returnVehicle("hi!");
        java.lang.String str12 = rentalSystem0.searchVehicle("");
        rentalSystem0.addCustomer("Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".");
        java.lang.String str17 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".");
        java.lang.String str19 = rentalSystem0.searchVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\". not found.\". not found.\".\".");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID  not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID  not found. not found.");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID hi! not found." + "'", str10, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "No vehicles match the keyword \"\"." + "'", str12, "No vehicles match the keyword \"\".");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\". not found." + "'", str17, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\". not found.\". not found.\".\".\"." + "'", str19, "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\". not found.\". not found.\".\".\".");
    }

    @Test
    public void test1083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1083");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID  not found.\".", "hi!");
        rentalSystem0.addCustomer("No vehicles match the keyword \"hi!\".", "hi!");
        java.lang.String str16 = rentalSystem0.rentVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found. not found.\". not found.", "No vehicles match the keyword \"Vehicle with ID hi! not found.\".", (int) (short) -1);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found. not found.\". not found. not found." + "'", str16, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found. not found.\". not found. not found.");
    }

    @Test
    public void test1084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1084");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID  not found.\".", "hi!");
        java.lang.String str11 = rentalSystem0.returnVehicle("Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.");
        // The following exception was thrown during execution in test generation
        try {
            rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\". not found.\". not found.\".\". not found. not found.", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\". not found. not found. not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found. not found. not found.\".", (double) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Daily rate cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found." + "'", str11, "Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.");
    }

    @Test
    public void test1085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1085");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID  not found. not found.", "No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        java.lang.String str8 = rentalSystem0.rentVehicle("hi!", "No vehicles match the keyword \"Vehicle with ID  not found.\".", 100);
        java.lang.String str10 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID hi! not found. not found.");
        java.util.List<org.example.Vehicle> vehicleList11 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found. not found. not found.\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found.\".");
        java.util.List<org.example.Customer> customerList15 = rentalSystem0.getCustomers();
        java.lang.String str17 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found. not found. not found.\". not found.");
        java.util.List<org.example.Customer> customerList18 = rentalSystem0.getCustomers();
        java.lang.Class<?> wildcardClass19 = customerList18.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID hi! not found." + "'", str8, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found." + "'", str10, "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList11);
        org.junit.Assert.assertNotNull(customerList15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found. not found. not found.\". not found.\"." + "'", str17, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found. not found. not found.\". not found.\".");
        org.junit.Assert.assertNotNull(customerList18);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test1086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1086");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID  not found. not found.", "No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        java.lang.String str8 = rentalSystem0.rentVehicle("hi!", "No vehicles match the keyword \"Vehicle with ID  not found.\".", 100);
        java.lang.String str10 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID hi! not found. not found.");
        java.lang.String str12 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.");
        int int13 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList14 = rentalSystem0.getCustomers();
        java.lang.Class<?> wildcardClass15 = rentalSystem0.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID hi! not found." + "'", str8, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found." + "'", str10, "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found." + "'", str12, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(customerList14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test1087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1087");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.returnVehicle("Vehicle with ID  not found.");
        java.lang.String str12 = rentalSystem0.rentVehicle("Vehicle with ID hi! not found.", "Vehicle with ID Vehicle with ID  not found. not found.", (int) (byte) 10);
        java.lang.String str14 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        java.util.List<org.example.Vehicle> vehicleList15 = rentalSystem0.getVehicles();
        java.lang.String str19 = rentalSystem0.rentVehicle("", "Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.", (int) (byte) 100);
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found. not found.\". not found.", "ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found. not found.\". not found. not found.", 0.0d);
        int int25 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str27 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found. not found.\".");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID  not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID  not found. not found.");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID Vehicle with ID hi! not found. not found." + "'", str12, "Vehicle with ID Vehicle with ID hi! not found. not found.");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found." + "'", str14, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList15);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Vehicle with ID  not found." + "'", str19, "Vehicle with ID  not found.");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found. not found.\". not found." + "'", str27, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found. not found.\". not found.");
    }

    @Test
    public void test1088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1088");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("hi!");
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        int int5 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str9 = rentalSystem0.rentVehicle("No vehicles match the keyword \"\".", "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.", (int) (short) 10);
        java.lang.String str11 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".");
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\".", "Vehicle with ID Vehicle with ID hi! not found. not found.");
        java.lang.String str16 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".");
        java.lang.String str18 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\". not found.\".");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID hi! not found." + "'", str3, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Vehicle with ID No vehicles match the keyword \"\". not found." + "'", str9, "Vehicle with ID No vehicles match the keyword \"\". not found.");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\". not found." + "'", str11, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found." + "'", str16, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\". not found.\".\"." + "'", str18, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\". not found.\".\".");
    }

    @Test
    public void test1089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1089");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        int int7 = rentalSystem0.getAvailableVehicleCount();
        int int8 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList9 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList10 = rentalSystem0.getCustomers();
        java.lang.String str14 = rentalSystem0.rentVehicle("Vehicle with ID hi! not found.", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\". not found.", (int) '4');
        java.util.List<org.example.Customer> customerList15 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList16 = rentalSystem0.getCustomers();
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\". not found.\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\". not found. not found. not found.\".", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\".\". not found.", (double) 0.0f);
        java.lang.String str23 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.\".\".\". not found. not found.");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(customerList9);
        org.junit.Assert.assertNotNull(customerList10);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID Vehicle with ID hi! not found. not found." + "'", str14, "Vehicle with ID Vehicle with ID hi! not found. not found.");
        org.junit.Assert.assertNotNull(customerList15);
        org.junit.Assert.assertNotNull(customerList16);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.\".\".\". not found. not found. not found." + "'", str23, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.\".\".\". not found. not found. not found.");
    }

    @Test
    public void test1090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1090");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID  not found. not found.", "No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        java.lang.String str8 = rentalSystem0.rentVehicle("hi!", "No vehicles match the keyword \"Vehicle with ID  not found.\".", 100);
        java.lang.String str10 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID hi! not found. not found.");
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found. not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.", (double) ' ');
        java.util.List<org.example.Vehicle> vehicleList16 = rentalSystem0.getVehicles();
        java.lang.String str18 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\". not found. not found.");
        java.util.List<org.example.Vehicle> vehicleList19 = rentalSystem0.getVehicles();
        java.lang.String str21 = rentalSystem0.searchVehicle("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n\".\".\".\".");
        int int22 = rentalSystem0.getAvailableVehicleCount();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID hi! not found." + "'", str8, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found." + "'", str10, "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\". not found. not found. not found." + "'", str18, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\". not found. not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList19);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n\".\".\".\".\"." + "'", str21, "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n\".\".\".\".\".");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
    }

    @Test
    public void test1091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1091");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID  not found.\".", "hi!");
        rentalSystem0.addCustomer("No vehicles match the keyword \"hi!\".", "hi!");
        java.lang.String str14 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        java.util.List<org.example.Vehicle> vehicleList15 = rentalSystem0.getVehicles();
        java.lang.String str17 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.");
        int int18 = rentalSystem0.getAvailableVehicleCount();
        int int19 = rentalSystem0.getAvailableVehicleCount();
        int int20 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str24 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\". not found.\".", "No vehicles match the keyword \"Vehicle with ID hi! not found.\".", (int) ' ');
        java.lang.String str26 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.\". not found. not found.");
        java.util.List<org.example.Customer> customerList27 = rentalSystem0.getCustomers();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found." + "'", str14, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found." + "'", str17, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\". not found.\". not found." + "'", str24, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\". not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.\". not found. not found.\"." + "'", str26, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.\". not found. not found.\".");
        org.junit.Assert.assertNotNull(customerList27);
    }

    @Test
    public void test1092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1092");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.searchVehicle("Vehicle with ID  not found.");
        int int9 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str11 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        int int12 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str14 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found. not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "No vehicles match the keyword \"Vehicle with ID  not found.\"." + "'", str8, "No vehicles match the keyword \"Vehicle with ID  not found.\".");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID hi! not found.\".\"." + "'", str11, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID hi! not found.\".\".");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found. not found. not found. not found." + "'", str14, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found. not found. not found. not found.");
    }

    @Test
    public void test1093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1093");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.returnVehicle("");
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".", "No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".");
        java.lang.String str15 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\".", "No vehicles match the keyword \"Vehicle with ID  not found.\".", (int) (short) 100);
        java.lang.String str19 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found.", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".\".\".", 0);
        int int20 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList21 = rentalSystem0.getCustomers();
        java.lang.String str23 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\". not found. not found. not found. not found.");
        int int24 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList25 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList26 = rentalSystem0.getCustomers();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID  not found." + "'", str8, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found." + "'", str15, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found. not found." + "'", str19, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found. not found.");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(customerList21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\". not found. not found. not found. not found.\"." + "'", str23, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\". not found. not found. not found. not found.\".");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(customerList25);
        org.junit.Assert.assertNotNull(customerList26);
    }

    @Test
    public void test1094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1094");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.returnVehicle("");
        java.util.List<org.example.Customer> customerList9 = rentalSystem0.getCustomers();
        java.lang.String str11 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.");
        java.lang.String str15 = rentalSystem0.rentVehicle("Vehicle with ID No vehicles match the keyword \"\". not found.", "ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n", (int) (short) -1);
        java.util.List<org.example.Vehicle> vehicleList16 = rentalSystem0.getVehicles();
        java.lang.String str18 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.");
        java.lang.String str20 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found. not found. not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID  not found." + "'", str8, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList9);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found." + "'", str11, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found.");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found." + "'", str15, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found. not found." + "'", str18, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found. not found.");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found. not found. not found.\". not found.\"." + "'", str20, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found. not found. not found.\". not found.\".");
    }

    @Test
    public void test1095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1095");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.returnVehicle("Vehicle with ID  not found.");
        int int9 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str13 = rentalSystem0.rentVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".", "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.", (int) (short) 10);
        java.lang.String str17 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".", (int) (byte) 100);
        java.util.List<org.example.Vehicle> vehicleList18 = rentalSystem0.getVehicles();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID  not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID  not found. not found.");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found." + "'", str13, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found." + "'", str17, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList18);
    }

    @Test
    public void test1096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1096");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList7 = rentalSystem0.getVehicles();
        java.lang.String str11 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.", "Vehicle with ID hi! not found.", (int) '#');
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found. not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\".", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found. not found.", 0.0d);
        java.util.List<org.example.Vehicle> vehicleList17 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList18 = rentalSystem0.getVehicles();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertNotNull(vehicleList7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found." + "'", str11, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList17);
        org.junit.Assert.assertNotNull(vehicleList18);
    }

    @Test
    public void test1097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1097");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.searchVehicle("Vehicle with ID  not found.");
        rentalSystem0.addVehicle("hi!", "Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID hi! not found.", (double) 0);
        java.util.List<org.example.Customer> customerList14 = rentalSystem0.getCustomers();
        java.lang.String str18 = rentalSystem0.rentVehicle("Vehicle with ID No vehicles match the keyword \"hi!\". not found.", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found. not found.", (int) (short) -1);
        java.util.List<org.example.Vehicle> vehicleList19 = rentalSystem0.getVehicles();
        java.lang.String str21 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.");
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\".", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".");
        java.util.List<org.example.Customer> customerList25 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.", "Vehicle with ID hi! not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "No vehicles match the keyword \"Vehicle with ID  not found.\"." + "'", str8, "No vehicles match the keyword \"Vehicle with ID  not found.\".");
        org.junit.Assert.assertNotNull(customerList14);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found." + "'", str18, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList19);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\"." + "'", str21, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\".");
        org.junit.Assert.assertNotNull(customerList25);
    }

    @Test
    public void test1098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1098");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList7 = rentalSystem0.getVehicles();
        java.lang.String str11 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID hi! not found.\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.", (int) (byte) 100);
        java.lang.String str13 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".");
        int int14 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList15 = rentalSystem0.getCustomers();
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found.", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.", (double) '4');
        int int21 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str23 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\".\". not found. not found.");
        java.util.List<org.example.Customer> customerList24 = rentalSystem0.getCustomers();
        int int25 = rentalSystem0.getAvailableVehicleCount();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertNotNull(vehicleList7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found." + "'", str11, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\"." + "'", str13, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\".");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(customerList15);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\".\". not found. not found. not found." + "'", str23, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\".\". not found. not found. not found.");
        org.junit.Assert.assertNotNull(customerList24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
    }

    @Test
    public void test1099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1099");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.returnVehicle("Vehicle with ID  not found.");
        int int9 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str13 = rentalSystem0.rentVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".", "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.", (int) (short) 10);
        java.lang.String str17 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".", (int) (byte) 100);
        int int18 = rentalSystem0.getAvailableVehicleCount();
        int int19 = rentalSystem0.getAvailableVehicleCount();
        // The following exception was thrown during execution in test generation
        try {
            rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.\". not found. not found.\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found. not found. not found.\". not found. not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\".", (-1.0d));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Daily rate cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID  not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID  not found. not found.");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found." + "'", str13, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found." + "'", str17, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
    }

    @Test
    public void test1100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1100");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.searchVehicle("Vehicle with ID  not found.");
        rentalSystem0.addVehicle("hi!", "Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID hi! not found.", (double) 0);
        java.util.List<org.example.Customer> customerList14 = rentalSystem0.getCustomers();
        java.lang.String str18 = rentalSystem0.rentVehicle("Vehicle with ID No vehicles match the keyword \"hi!\". not found.", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found. not found.", (int) (short) -1);
        java.util.List<org.example.Vehicle> vehicleList19 = rentalSystem0.getVehicles();
        java.lang.String str21 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.");
        java.util.List<org.example.Customer> customerList22 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList23 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList24 = rentalSystem0.getCustomers();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "No vehicles match the keyword \"Vehicle with ID  not found.\"." + "'", str8, "No vehicles match the keyword \"Vehicle with ID  not found.\".");
        org.junit.Assert.assertNotNull(customerList14);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found." + "'", str18, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList19);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\"." + "'", str21, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\".");
        org.junit.Assert.assertNotNull(customerList22);
        org.junit.Assert.assertNotNull(customerList23);
        org.junit.Assert.assertNotNull(customerList24);
    }

    @Test
    public void test1101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1101");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("hi!");
        java.lang.String str5 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\".", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".\".");
        java.util.List<org.example.Customer> customerList9 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList10 = rentalSystem0.getVehicles();
        java.lang.Class<?> wildcardClass11 = vehicleList10.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID hi! not found." + "'", str3, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found." + "'", str5, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.");
        org.junit.Assert.assertNotNull(customerList9);
        org.junit.Assert.assertNotNull(vehicleList10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test1102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1102");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.returnVehicle("Vehicle with ID  not found.");
        java.lang.String str10 = rentalSystem0.returnVehicle("hi!");
        java.lang.String str14 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID hi! not found. not found.", "ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n", (int) (short) -1);
        rentalSystem0.addCustomer("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.");
        int int18 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found. not found. not found.", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.", (double) 100.0f);
        java.lang.String str25 = rentalSystem0.returnVehicle("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\".\".");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID  not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID  not found. not found.");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID hi! not found." + "'", str10, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found." + "'", str14, "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\".\". not found." + "'", str25, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\".\". not found.");
    }

    @Test
    public void test1103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1103");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        int int2 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        int int4 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".", "No vehicles match the keyword \"Vehicle with ID  not found.\".");
        int int8 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str10 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\".");
        rentalSystem0.addCustomer("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\".\". not found.", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".\".");
        rentalSystem0.addCustomer("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.\".\".");
        java.lang.String str20 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found. not found. not found.", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.\".\".\". not found.\".", (int) ' ');
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found." + "'", str10, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found. not found. not found. not found." + "'", str20, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found. not found. not found. not found.");
    }

    @Test
    public void test1104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1104");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID  not found.\".", "hi!");
        rentalSystem0.addCustomer("No vehicles match the keyword \"hi!\".", "hi!");
        java.lang.String str14 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        java.util.List<org.example.Vehicle> vehicleList15 = rentalSystem0.getVehicles();
        java.lang.String str17 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.");
        int int18 = rentalSystem0.getAvailableVehicleCount();
        int int19 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList20 = rentalSystem0.getCustomers();
        java.lang.Class<?> wildcardClass21 = rentalSystem0.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found." + "'", str14, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found." + "'", str17, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(customerList20);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test1105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1105");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.searchVehicle("Vehicle with ID  not found.");
        rentalSystem0.addVehicle("hi!", "Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID hi! not found.", (double) 0);
        java.util.List<org.example.Vehicle> vehicleList14 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.\". not found.");
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\". not found. not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.\".\".", (double) 10.0f);
        java.lang.Class<?> wildcardClass23 = rentalSystem0.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "No vehicles match the keyword \"Vehicle with ID  not found.\"." + "'", str8, "No vehicles match the keyword \"Vehicle with ID  not found.\".");
        org.junit.Assert.assertNotNull(vehicleList14);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test1106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1106");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID  not found. not found.", "No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        java.lang.String str8 = rentalSystem0.rentVehicle("hi!", "No vehicles match the keyword \"Vehicle with ID  not found.\".", 100);
        java.lang.String str10 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID hi! not found. not found.");
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found. not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.", (double) ' ');
        java.util.List<org.example.Vehicle> vehicleList16 = rentalSystem0.getVehicles();
        java.lang.String str18 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\". not found.\".");
        java.lang.String str20 = rentalSystem0.searchVehicle("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\".\".");
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\".\".\". not found. not found.", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.\". not found. not found. not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID hi! not found." + "'", str8, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found." + "'", str10, "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\". not found.\". not found." + "'", str18, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\". not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\".\".\"." + "'", str20, "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\".\".\".");
    }

    @Test
    public void test1107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1107");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        int int7 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str9 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID  not found.\".");
        int int10 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str12 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found.\".\". not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found." + "'", str9, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found.\".\". not found.\". not found.\"." + "'", str12, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found.\".\". not found.\". not found.\".");
    }

    @Test
    public void test1108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1108");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID  not found.", 100);
        java.lang.String str12 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID  not found.\".", "Vehicle with ID Vehicle with ID hi! not found. not found.", (int) (short) -1);
        java.lang.String str14 = rentalSystem0.searchVehicle("hi!");
        java.util.List<org.example.Vehicle> vehicleList15 = rentalSystem0.getVehicles();
        java.lang.String str17 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.");
        java.util.List<org.example.Customer> customerList18 = rentalSystem0.getCustomers();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found." + "'", str12, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "No vehicles match the keyword \"hi!\"." + "'", str14, "No vehicles match the keyword \"hi!\".");
        org.junit.Assert.assertNotNull(vehicleList15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\"." + "'", str17, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".");
        org.junit.Assert.assertNotNull(customerList18);
    }

    @Test
    public void test1109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1109");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("");
        java.util.List<org.example.Vehicle> vehicleList4 = rentalSystem0.getVehicles();
        java.lang.String str6 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID  not found. not found.");
        java.util.List<org.example.Customer> customerList7 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.\".");
        int int11 = rentalSystem0.getAvailableVehicleCount();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID  not found." + "'", str3, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str6, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertNotNull(customerList7);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
    }

    @Test
    public void test1110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1110");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.returnVehicle("");
        java.lang.String str10 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\". not found.");
        java.util.List<org.example.Customer> customerList11 = rentalSystem0.getCustomers();
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.\".\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\". not found. not found.", (double) (byte) 1);
        int int17 = rentalSystem0.getAvailableVehicleCount();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID  not found." + "'", str8, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\". not found.\"." + "'", str10, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\". not found.\".");
        org.junit.Assert.assertNotNull(customerList11);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
    }

    @Test
    public void test1111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1111");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID  not found.", 100);
        java.lang.String str12 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID  not found.\".", "Vehicle with ID Vehicle with ID hi! not found. not found.", (int) (short) -1);
        java.lang.String str14 = rentalSystem0.searchVehicle("hi!");
        java.util.List<org.example.Vehicle> vehicleList15 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList16 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\". not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\". not found.\".\".");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found." + "'", str12, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "No vehicles match the keyword \"hi!\"." + "'", str14, "No vehicles match the keyword \"hi!\".");
        org.junit.Assert.assertNotNull(vehicleList15);
        org.junit.Assert.assertNotNull(vehicleList16);
    }

    @Test
    public void test1112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1112");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("");
        int int4 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Vehicle> vehicleList5 = rentalSystem0.getVehicles();
        java.lang.String str7 = rentalSystem0.searchVehicle("hi!");
        java.util.List<org.example.Vehicle> vehicleList8 = rentalSystem0.getVehicles();
        java.lang.String str10 = rentalSystem0.returnVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found.\".\".");
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found. not found. not found. not found.", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\".\".\".\".", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\". not found.\".\".", 0.0d);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID  not found." + "'", str3, "Vehicle with ID  not found.");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(vehicleList5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "No vehicles match the keyword \"hi!\"." + "'", str7, "No vehicles match the keyword \"hi!\".");
        org.junit.Assert.assertNotNull(vehicleList8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found.\".\". not found." + "'", str10, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found.\".\". not found.");
    }

    @Test
    public void test1113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1113");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList7 = rentalSystem0.getVehicles();
        java.lang.Class<?> wildcardClass8 = vehicleList7.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertNotNull(vehicleList7);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test1114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1114");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.lang.String str5 = rentalSystem0.returnVehicle("Vehicle with ID  not found.");
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID  not found.\".", "No vehicles match the keyword \"\".");
        java.util.List<org.example.Customer> customerList9 = rentalSystem0.getCustomers();
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\". not found.", "ID: No vehicles match the keyword \"Vehicle with ID  not found.\"., Model: No vehicles match the keyword \"Vehicle with ID  not found.\"., Type: Vehicle with ID  not found., Daily Rate: $10.0, Status: Available\n", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\". not found. not found. not found. not found.", (double) 2);
        java.util.List<org.example.Customer> customerList15 = rentalSystem0.getCustomers();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID Vehicle with ID  not found. not found." + "'", str5, "Vehicle with ID Vehicle with ID  not found. not found.");
        org.junit.Assert.assertNotNull(customerList9);
        org.junit.Assert.assertNotNull(customerList15);
    }

    @Test
    public void test1115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1115");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID  not found.", 100);
        java.lang.String str12 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID  not found.\".", "Vehicle with ID Vehicle with ID hi! not found. not found.", (int) (short) -1);
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.", "ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n", "Vehicle with ID Vehicle with ID hi! not found. not found.", 100.0d);
        java.util.List<org.example.Vehicle> vehicleList18 = rentalSystem0.getVehicles();
        java.lang.String str20 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.");
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.\". not found.\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\". not found. not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\".\".\". not found. not found.", (double) 0);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found." + "'", str12, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found." + "'", str20, "Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found.");
    }

    @Test
    public void test1116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1116");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.returnVehicle("");
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".", "No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".");
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".\".", "ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n");
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found.\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found.", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\".\".\". not found.", 0.0d);
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\". not found. not found.", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found. not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found.", (double) (short) 100);
        java.lang.String str28 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\". not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.\".", 3);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID  not found." + "'", str8, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\". not found. not found. not found." + "'", str28, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\". not found. not found. not found.");
    }

    @Test
    public void test1117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1117");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("");
        rentalSystem0.addVehicle("Vehicle with ID  not found.", "Vehicle with ID hi! not found.", "Vehicle with ID Vehicle with ID hi! not found. not found.", (double) '4');
        java.lang.String str10 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".");
        int int11 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str13 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found. not found.");
        java.util.List<org.example.Vehicle> vehicleList14 = rentalSystem0.getVehicles();
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found. not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found. not found. not found.\". not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.\". not found.\".\".", (double) (byte) 0);
        java.lang.String str21 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.\".\".\". not found.");
        java.lang.String str23 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found.\". not found. not found. not found.");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID  not found." + "'", str3, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\". not found." + "'", str10, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\". not found.");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found. not found. not found." + "'", str13, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found. not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList14);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.\".\".\". not found. not found." + "'", str21, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.\".\".\". not found. not found.");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found.\". not found. not found. not found. not found." + "'", str23, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found.\". not found. not found. not found. not found.");
    }

    @Test
    public void test1118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1118");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID  not found.", 100);
        java.lang.String str12 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID  not found.\".", "Vehicle with ID Vehicle with ID hi! not found. not found.", (int) (short) -1);
        java.lang.String str14 = rentalSystem0.searchVehicle("hi!");
        java.util.List<org.example.Vehicle> vehicleList15 = rentalSystem0.getVehicles();
        java.lang.String str17 = rentalSystem0.searchVehicle("");
        java.util.List<org.example.Customer> customerList18 = rentalSystem0.getCustomers();
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.\". not found. not found.\". not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\".\".\". not found. not found.", (double) 'a');
        java.lang.Class<?> wildcardClass24 = rentalSystem0.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found." + "'", str12, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "No vehicles match the keyword \"hi!\"." + "'", str14, "No vehicles match the keyword \"hi!\".");
        org.junit.Assert.assertNotNull(vehicleList15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "No vehicles match the keyword \"\"." + "'", str17, "No vehicles match the keyword \"\".");
        org.junit.Assert.assertNotNull(customerList18);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test1119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1119");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("");
        java.util.List<org.example.Vehicle> vehicleList4 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.rentVehicle("", "Vehicle with ID hi! not found.", (int) (short) 100);
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.", "No vehicles match the keyword \"Vehicle with ID  not found.\".", "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.", (double) 10);
        java.util.List<org.example.Vehicle> vehicleList14 = rentalSystem0.getVehicles();
        java.lang.String str18 = rentalSystem0.rentVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found.\". not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found. not found.", (int) (short) 1);
        java.lang.Class<?> wildcardClass19 = rentalSystem0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID  not found." + "'", str3, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID  not found." + "'", str8, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList14);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found.\". not found. not found." + "'", str18, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found.\". not found. not found.");
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test1120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1120");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID  not found.\".", "hi!");
        int int10 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList11 = rentalSystem0.getCustomers();
        int int12 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str14 = rentalSystem0.searchVehicle("No vehicles match the keyword \"hi!\".");
        java.util.List<org.example.Customer> customerList15 = rentalSystem0.getCustomers();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(customerList11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\"." + "'", str14, "No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".");
        org.junit.Assert.assertNotNull(customerList15);
    }

    @Test
    public void test1121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1121");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        int int2 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Vehicle> vehicleList3 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.");
        rentalSystem0.addCustomer("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found.", "Vehicle with ID Vehicle with ID hi! not found. not found.");
        java.lang.String str10 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".");
        java.lang.Class<?> wildcardClass11 = rentalSystem0.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(vehicleList3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\"." + "'", str5, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\"." + "'", str10, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\".");
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test1122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1122");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID  not found.", 100);
        java.lang.String str12 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID  not found.\".", "Vehicle with ID Vehicle with ID hi! not found. not found.", (int) (short) -1);
        java.lang.String str14 = rentalSystem0.searchVehicle("hi!");
        java.util.List<org.example.Vehicle> vehicleList15 = rentalSystem0.getVehicles();
        java.lang.String str17 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID hi! not found. not found.");
        java.lang.String str19 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.");
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\". not found.\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found. not found.\". not found.");
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\". not found.\".", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\".\".");
        java.util.List<org.example.Vehicle> vehicleList26 = rentalSystem0.getVehicles();
        java.lang.Class<?> wildcardClass27 = rentalSystem0.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found." + "'", str12, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "No vehicles match the keyword \"hi!\"." + "'", str14, "No vehicles match the keyword \"hi!\".");
        org.junit.Assert.assertNotNull(vehicleList15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\"." + "'", str17, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\".");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.\"." + "'", str19, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.\".");
        org.junit.Assert.assertNotNull(vehicleList26);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test1123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1123");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList5 = rentalSystem0.getVehicles();
        java.lang.String str9 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".", "No vehicles match the keyword \"Vehicle with ID  not found.\".", (int) ' ');
        java.lang.String str11 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\".", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\".\".");
        java.lang.Class<?> wildcardClass15 = rentalSystem0.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertNotNull(vehicleList5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found." + "'", str9, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found." + "'", str11, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.");
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test1124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1124");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("hi!");
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList5 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList7 = rentalSystem0.getCustomers();
        int int8 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList9 = rentalSystem0.getCustomers();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID hi! not found." + "'", str3, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertNotNull(customerList5);
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertNotNull(customerList7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(customerList9);
    }

    @Test
    public void test1125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1125");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("");
        java.util.List<org.example.Vehicle> vehicleList4 = rentalSystem0.getVehicles();
        java.lang.String str6 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID  not found. not found.");
        java.util.List<org.example.Customer> customerList7 = rentalSystem0.getCustomers();
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID  not found.\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.", (double) ' ');
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found. not found.", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found. not found. not found.", "Vehicle with ID Vehicle with ID hi! not found. not found.", (double) '#');
        int int18 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList19 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList20 = rentalSystem0.getCustomers();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID  not found." + "'", str3, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str6, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertNotNull(customerList7);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2 + "'", int18 == 2);
        org.junit.Assert.assertNotNull(customerList19);
        org.junit.Assert.assertNotNull(customerList20);
    }

    @Test
    public void test1126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1126");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.rentVehicle("", "No vehicles match the keyword \"Vehicle with ID hi! not found.\".", (int) (byte) 100);
        java.util.List<org.example.Vehicle> vehicleList9 = rentalSystem0.getVehicles();
        java.lang.String str11 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.");
        java.util.List<org.example.Vehicle> vehicleList12 = rentalSystem0.getVehicles();
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found. not found. not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID  not found.\".\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found.\".", (double) 1);
        java.lang.String str21 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\". not found. not found. not found.", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".", (int) (short) 1);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID  not found." + "'", str8, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList9);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found." + "'", str11, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList12);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\". not found. not found. not found. not found." + "'", str21, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\". not found. not found. not found. not found.");
    }

    @Test
    public void test1127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1127");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        int int2 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Vehicle> vehicleList3 = rentalSystem0.getVehicles();
        int int4 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str6 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.");
        java.lang.String str10 = rentalSystem0.rentVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found. not found.", (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            rentalSystem0.addVehicle("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\".\".\".\".", "", "Vehicle with ID Vehicle with ID  not found. not found.", 0.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Model cannot be null or empty");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(vehicleList3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found." + "'", str6, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\". not found." + "'", str10, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\". not found.");
    }

    @Test
    public void test1128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1128");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.lang.String str5 = rentalSystem0.returnVehicle("Vehicle with ID  not found.");
        java.lang.String str7 = rentalSystem0.searchVehicle("Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.");
        java.lang.String str9 = rentalSystem0.searchVehicle("hi!");
        rentalSystem0.addCustomer("hi!", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\". not found.");
        java.lang.String str16 = rentalSystem0.rentVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\".", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\".\".", (int) (short) 10);
        java.lang.String str18 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found.");
        java.lang.Class<?> wildcardClass19 = rentalSystem0.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID Vehicle with ID  not found. not found." + "'", str5, "Vehicle with ID Vehicle with ID  not found. not found.");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\"." + "'", str7, "No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "No vehicles match the keyword \"hi!\"." + "'", str9, "No vehicles match the keyword \"hi!\".");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\". not found." + "'", str16, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\". not found.");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found." + "'", str18, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found.");
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test1129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1129");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID  not found.\".", "hi!");
        java.lang.String str11 = rentalSystem0.returnVehicle("Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.");
        java.util.List<org.example.Vehicle> vehicleList12 = rentalSystem0.getVehicles();
        java.lang.String str14 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found.");
        java.lang.String str16 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found.");
        java.lang.String str18 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.\".");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found." + "'", str11, "Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found. not found." + "'", str14, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found. not found." + "'", str16, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.\".\"." + "'", str18, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.\".\".");
    }

    @Test
    public void test1130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1130");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID  not found.\".", "hi!");
        rentalSystem0.addCustomer("No vehicles match the keyword \"hi!\".", "hi!");
        rentalSystem0.addCustomer("Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.", "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        java.lang.String str17 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found. not found.\"." + "'", str17, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found. not found.\".");
    }

    @Test
    public void test1131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1131");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("");
        int int4 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Vehicle> vehicleList5 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        int int7 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str11 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\". not found. not found. not found. not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found. not found.\".\". not found. not found.", (int) (byte) 0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID  not found." + "'", str3, "Vehicle with ID  not found.");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(vehicleList5);
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\". not found. not found. not found. not found. not found." + "'", str11, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\". not found. not found. not found. not found. not found.");
    }

    @Test
    public void test1132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1132");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID  not found.\".", "hi!");
        rentalSystem0.addCustomer("No vehicles match the keyword \"hi!\".", "hi!");
        java.util.List<org.example.Vehicle> vehicleList13 = rentalSystem0.getVehicles();
        java.lang.Class<?> wildcardClass14 = vehicleList13.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertNotNull(vehicleList13);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test1133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1133");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID  not found.\".", "hi!");
        rentalSystem0.addCustomer("No vehicles match the keyword \"hi!\".", "hi!");
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found. not found.\". not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\". not found.", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\".", (double) 10);
        java.lang.String str19 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "ID: Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found. not found.\". not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\". not found., Type: No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\"., Daily Rate: $10.0, Status: Available\n" + "'", str19, "ID: Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found. not found.\". not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\". not found., Type: No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\"., Daily Rate: $10.0, Status: Available\n");
    }

    @Test
    public void test1134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1134");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID  not found. not found.", "No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        java.lang.String str8 = rentalSystem0.rentVehicle("hi!", "No vehicles match the keyword \"Vehicle with ID  not found.\".", 100);
        java.lang.String str10 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID hi! not found. not found.");
        rentalSystem0.addVehicle("ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.", "No vehicles match the keyword \"\".", (double) (byte) 10);
        java.lang.String str17 = rentalSystem0.returnVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".");
        java.util.List<org.example.Customer> customerList18 = rentalSystem0.getCustomers();
        java.lang.String str20 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found. not found.");
        int int21 = rentalSystem0.getAvailableVehicleCount();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID hi! not found." + "'", str8, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found." + "'", str10, "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found." + "'", str17, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.");
        org.junit.Assert.assertNotNull(customerList18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found. not found.\"." + "'", str20, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found. not found.\".");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
    }

    @Test
    public void test1135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1135");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.returnVehicle("");
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".", "No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".");
        java.lang.String str15 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\".", "No vehicles match the keyword \"Vehicle with ID  not found.\".", (int) (short) 100);
        java.util.List<org.example.Customer> customerList16 = rentalSystem0.getCustomers();
        int int17 = rentalSystem0.getAvailableVehicleCount();
        java.lang.Class<?> wildcardClass18 = rentalSystem0.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID  not found." + "'", str8, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found." + "'", str15, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found.");
        org.junit.Assert.assertNotNull(customerList16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test1136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1136");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.lang.String str4 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found.");
        java.util.List<org.example.Vehicle> vehicleList5 = rentalSystem0.getVehicles();
        int int6 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str10 = rentalSystem0.rentVehicle("No vehicles match the keyword \"No vehicles match the keyword \"ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n\".\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found. not found.", 0);
        java.lang.String str12 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\". not found. not found. not found. not found.");
        java.util.List<org.example.Vehicle> vehicleList13 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList14 = rentalSystem0.getVehicles();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found." + "'", str4, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n\".\". not found." + "'", str10, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n\".\". not found.");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\". not found. not found. not found. not found.\"." + "'", str12, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\". not found. not found. not found. not found.\".");
        org.junit.Assert.assertNotNull(vehicleList13);
        org.junit.Assert.assertNotNull(vehicleList14);
    }

    @Test
    public void test1137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1137");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList7 = rentalSystem0.getVehicles();
        java.lang.String str11 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID hi! not found.\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.", (int) (byte) 100);
        java.lang.String str13 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".");
        java.util.List<org.example.Customer> customerList14 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList15 = rentalSystem0.getCustomers();
        java.lang.String str19 = rentalSystem0.rentVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found.\".\".", "Vehicle is already available.", (int) '#');
        java.lang.Class<?> wildcardClass20 = rentalSystem0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertNotNull(vehicleList7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found." + "'", str11, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\"." + "'", str13, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\".");
        org.junit.Assert.assertNotNull(customerList14);
        org.junit.Assert.assertNotNull(customerList15);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found.\".\". not found." + "'", str19, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found.\".\". not found.");
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test1138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1138");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList7 = rentalSystem0.getVehicles();
        java.lang.String str11 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID hi! not found.\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.", (int) (byte) 100);
        java.lang.String str13 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".");
        java.lang.String str15 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".");
        java.lang.String str19 = rentalSystem0.rentVehicle("ID: Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found., Model: No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\"., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found. not found. not found.\"., Daily Rate: $100.0, Status: Available\n", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.\". not found. not found.\".", (int) (short) 100);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertNotNull(vehicleList7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found." + "'", str11, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\"." + "'", str13, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\".");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\". not found." + "'", str15, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Vehicle with ID ID: Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found., Model: No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\"., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found. not found. not found.\"., Daily Rate: $100.0, Status: Available\n not found." + "'", str19, "Vehicle with ID ID: Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found., Model: No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\"., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found. not found. not found.\"., Daily Rate: $100.0, Status: Available\n not found.");
    }

    @Test
    public void test1139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1139");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("");
        rentalSystem0.addVehicle("Vehicle with ID  not found.", "Vehicle with ID hi! not found.", "Vehicle with ID Vehicle with ID hi! not found. not found.", (double) '4');
        int int9 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\".", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.\".\".");
        java.lang.String str14 = rentalSystem0.searchVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found. not found.\".\".");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID  not found." + "'", str3, "Vehicle with ID  not found.");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found. not found.\".\".\"." + "'", str14, "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found. not found.\".\".\".");
    }

    @Test
    public void test1140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1140");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList7 = rentalSystem0.getVehicles();
        java.lang.String str11 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID hi! not found.\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.", (int) (byte) 100);
        java.lang.String str13 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".");
        int int14 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList15 = rentalSystem0.getCustomers();
        java.lang.String str19 = rentalSystem0.rentVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.\". not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID  not found.\".\".", (int) (short) 100);
        java.util.List<org.example.Vehicle> vehicleList20 = rentalSystem0.getVehicles();
        java.lang.String str22 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\". not found.");
        // The following exception was thrown during execution in test generation
        try {
            rentalSystem0.addVehicle("", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found. not found. not found.\". not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found. not found. not found.\".\". not found. not found.", (double) 0L);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Vehicle ID cannot be null or empty");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertNotNull(vehicleList7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found." + "'", str11, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\"." + "'", str13, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\".");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(customerList15);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.\". not found. not found." + "'", str19, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.\". not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\". not found. not found." + "'", str22, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\". not found. not found.");
    }

    @Test
    public void test1141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1141");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        int int7 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str9 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID  not found.\".");
        java.lang.String str11 = rentalSystem0.returnVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\".");
        java.lang.String str13 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.");
        java.lang.String str17 = rentalSystem0.rentVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found.\".\".", (int) (short) 10);
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.\". not found. not found. not found.", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\". not found.", (double) (short) 10);
        java.util.List<org.example.Vehicle> vehicleList23 = rentalSystem0.getVehicles();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found." + "'", str9, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\". not found." + "'", str11, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\". not found.");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\"." + "'", str13, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found. not found." + "'", str17, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList23);
    }

    @Test
    public void test1142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1142");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("");
        int int4 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Vehicle> vehicleList5 = rentalSystem0.getVehicles();
        java.lang.String str7 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found.");
        java.lang.String str9 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID  not found." + "'", str3, "Vehicle with ID  not found.");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(vehicleList5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found." + "'", str7, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.\"." + "'", str9, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.\".");
    }

    @Test
    public void test1143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1143");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("hi!");
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        rentalSystem0.addVehicle("Vehicle with ID  not found.", "Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID hi! not found.", 1.0d);
        java.lang.String str13 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\".", (int) (short) 100);
        rentalSystem0.addCustomer("Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found.", "No vehicles match the keyword \"\".");
        java.lang.String str18 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\". not found.");
        java.util.List<org.example.Vehicle> vehicleList19 = rentalSystem0.getVehicles();
        java.lang.String str21 = rentalSystem0.searchVehicle("");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID hi! not found." + "'", str3, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found." + "'", str13, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\". not found. not found." + "'", str18, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\". not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList19);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "ID: Vehicle with ID  not found., Model: Vehicle with ID Vehicle with ID  not found. not found., Type: Vehicle with ID hi! not found., Daily Rate: $1.0, Status: Available\n" + "'", str21, "ID: Vehicle with ID  not found., Model: Vehicle with ID Vehicle with ID  not found. not found., Type: Vehicle with ID hi! not found., Daily Rate: $1.0, Status: Available\n");
    }

    @Test
    public void test1144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1144");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList7 = rentalSystem0.getVehicles();
        int int8 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList9 = rentalSystem0.getCustomers();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertNotNull(vehicleList7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(customerList9);
    }

    @Test
    public void test1145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1145");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\". not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.", 1.0d);
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\". not found.\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\". not found.", (double) 'a');
        // The following exception was thrown during execution in test generation
        try {
            rentalSystem0.addVehicle("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\".\".\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\".\".\". not found. not found.", "", (double) 100L);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Type cannot be null or empty");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
    }

    @Test
    public void test1146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1146");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList7 = rentalSystem0.getVehicles();
        java.lang.String str11 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID hi! not found.\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.", (int) (byte) 100);
        java.util.List<org.example.Customer> customerList12 = rentalSystem0.getCustomers();
        int int13 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.\". not found.", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID  not found.\".\".\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\". not found.\". not found.", (double) (byte) 0);
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".");
        rentalSystem0.addVehicle("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\".\".", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\".\". not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.\".\".", 0.0d);
        java.util.List<org.example.Customer> customerList27 = rentalSystem0.getCustomers();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertNotNull(vehicleList7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found." + "'", str11, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.");
        org.junit.Assert.assertNotNull(customerList12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(customerList27);
    }

    @Test
    public void test1147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1147");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        int int2 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        int int4 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".", "No vehicles match the keyword \"Vehicle with ID  not found.\".");
        int int8 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str10 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\".");
        java.util.List<org.example.Vehicle> vehicleList11 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList12 = rentalSystem0.getVehicles();
        java.lang.Class<?> wildcardClass13 = rentalSystem0.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found." + "'", str10, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList11);
        org.junit.Assert.assertNotNull(vehicleList12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test1148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1148");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID  not found.\".", "hi!");
        int int10 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList11 = rentalSystem0.getCustomers();
        java.lang.String str13 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.");
        java.lang.String str15 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".");
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.\". not found. not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\".\".", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\". not found.\".", (double) (byte) 100);
        java.util.List<org.example.Customer> customerList21 = rentalSystem0.getCustomers();
        java.lang.String str23 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID  not found.\".");
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found.\". not found. not found.", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\". not found.\".");
        java.lang.String str30 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found. not found. not found.\".", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\". not found. not found. not found. not found. not found.", (int) (byte) -1);
        rentalSystem0.addCustomer("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\".\".\". not found.", "Vehicle with ID No vehicles match the keyword \"ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n\". not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(customerList11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\"." + "'", str13, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found." + "'", str15, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found.");
        org.junit.Assert.assertNotNull(customerList21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found." + "'", str23, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found. not found. not found.\". not found." + "'", str30, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found. not found. not found.\". not found.");
    }

    @Test
    public void test1149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1149");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID  not found.\".", "hi!");
        rentalSystem0.addCustomer("No vehicles match the keyword \"hi!\".", "hi!");
        java.lang.String str14 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        java.lang.String str16 = rentalSystem0.searchVehicle("");
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found. not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found.\".\".");
        java.util.List<org.example.Vehicle> vehicleList20 = rentalSystem0.getVehicles();
        int int21 = rentalSystem0.getAvailableVehicleCount();
        java.lang.Class<?> wildcardClass22 = rentalSystem0.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found." + "'", str14, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "No vehicles match the keyword \"\"." + "'", str16, "No vehicles match the keyword \"\".");
        org.junit.Assert.assertNotNull(vehicleList20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test1150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1150");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        rentalSystem0.addCustomer("hi!", "Vehicle with ID Vehicle with ID  not found. not found.");
        java.util.List<org.example.Vehicle> vehicleList9 = rentalSystem0.getVehicles();
        int int10 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList11 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\". not found.", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.");
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.", "No vehicles match the keyword \"Vehicle with ID hi! not found.\".", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found.", (double) '4');
        java.lang.Class<?> wildcardClass20 = rentalSystem0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(customerList11);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test1151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1151");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.returnVehicle("");
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".", "No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".");
        java.lang.String str15 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\".", "No vehicles match the keyword \"Vehicle with ID  not found.\".", (int) (short) 100);
        java.lang.String str19 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found.", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".\".\".", 0);
        java.lang.String str23 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found. not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".\".", (int) (byte) 100);
        int int24 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str26 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found.");
        java.lang.Class<?> wildcardClass27 = rentalSystem0.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID  not found." + "'", str8, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found." + "'", str15, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found. not found." + "'", str19, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found. not found. not found." + "'", str23, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found. not found. not found.");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found. not found." + "'", str26, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found. not found.");
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test1152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1152");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("");
        int int4 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Vehicle> vehicleList5 = rentalSystem0.getVehicles();
        java.lang.String str7 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found.");
        java.lang.String str9 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found.");
        java.lang.String str13 = rentalSystem0.rentVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\".", "Vehicle with ID Vehicle with ID hi! not found. not found.", 100);
        java.util.List<org.example.Vehicle> vehicleList14 = rentalSystem0.getVehicles();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID  not found." + "'", str3, "Vehicle with ID  not found.");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(vehicleList5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found." + "'", str7, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found.\"." + "'", str9, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found.\".");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\". not found." + "'", str13, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\". not found.");
        org.junit.Assert.assertNotNull(vehicleList14);
    }

    @Test
    public void test1153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1153");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID  not found.", 100);
        java.lang.String str12 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID  not found.\".", "Vehicle with ID Vehicle with ID hi! not found. not found.", (int) (short) -1);
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.");
        java.util.List<org.example.Vehicle> vehicleList16 = rentalSystem0.getVehicles();
        java.lang.String str20 = rentalSystem0.rentVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\". not found.", "", (int) ' ');
        java.lang.String str22 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".");
        rentalSystem0.addCustomer("Vehicle with ID Vehicle is already available. not found.", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\". not found.\".");
        // The following exception was thrown during execution in test generation
        try {
            rentalSystem0.addVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found.\". not found.\".\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\". not found.", (-1.0d));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Daily rate cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found." + "'", str12, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList16);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\". not found. not found." + "'", str20, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\". not found. not found.");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\"." + "'", str22, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\".");
    }

    @Test
    public void test1154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1154");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        int int7 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList8 = rentalSystem0.getCustomers();
        java.lang.String str12 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\". not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found. not found.\".", (int) 'a');
        java.lang.String str16 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\". not found.\". not found. not found.", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\".\".\".\".", (int) (short) 0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(customerList8);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\". not found. not found. not found." + "'", str12, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\". not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\". not found.\". not found. not found. not found." + "'", str16, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\". not found.\". not found. not found. not found.");
    }

    @Test
    public void test1155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1155");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList5 = rentalSystem0.getVehicles();
        java.lang.String str9 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".", "No vehicles match the keyword \"Vehicle with ID  not found.\".", (int) ' ');
        rentalSystem0.addVehicle("Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.", "No vehicles match the keyword \"\".", "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.", (double) 1L);
        java.util.List<org.example.Vehicle> vehicleList15 = rentalSystem0.getVehicles();
        java.lang.Class<?> wildcardClass16 = rentalSystem0.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertNotNull(vehicleList5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found." + "'", str9, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList15);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test1156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1156");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID  not found.", 100);
        java.lang.String str12 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID  not found.\".", "Vehicle with ID Vehicle with ID hi! not found. not found.", (int) (short) -1);
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.", "ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n", "Vehicle with ID Vehicle with ID hi! not found. not found.", 100.0d);
        java.util.List<org.example.Vehicle> vehicleList18 = rentalSystem0.getVehicles();
        java.lang.String str20 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.");
        java.util.List<org.example.Vehicle> vehicleList21 = rentalSystem0.getVehicles();
        java.lang.String str23 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found. not found.\".");
        java.util.List<org.example.Vehicle> vehicleList24 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.\".\". not found.\".", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found." + "'", str12, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found." + "'", str20, "Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found. not found.\". not found." + "'", str23, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found. not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList24);
    }

    @Test
    public void test1157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1157");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.lang.String str7 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".");
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID  not found.");
        int int11 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str13 = rentalSystem0.returnVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".");
        rentalSystem0.addVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\".", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\".\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\".\". not found. not found.", (double) (short) 10);
        java.util.List<org.example.Customer> customerList19 = rentalSystem0.getCustomers();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\"." + "'", str7, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\". not found." + "'", str13, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\". not found.");
        org.junit.Assert.assertNotNull(customerList19);
    }

    @Test
    public void test1158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1158");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        int int7 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\".\".", "Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.", "ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n", 1.0d);
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.\". not found. not found.", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found. not found. not found.\".\".", 0.0d);
        rentalSystem0.addVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found. not found. not found.\".\".", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\". not found. not found. not found. not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found.", (double) 2);
        java.lang.String str24 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found.");
        java.lang.Class<?> wildcardClass25 = rentalSystem0.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found.\"." + "'", str24, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found.\".");
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test1159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1159");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID  not found.", 100);
        java.lang.String str12 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID  not found.\".", "Vehicle with ID Vehicle with ID hi! not found. not found.", (int) (short) -1);
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.");
        java.util.List<org.example.Vehicle> vehicleList16 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList17 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList18 = rentalSystem0.getCustomers();
        java.lang.String str20 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found. not found.");
        java.lang.String str22 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\". not found.\".");
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\". not found. not found. not found. not found.\".", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\". not found. not found. not found.", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\".", (double) (short) 0);
        java.lang.String str29 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\". not found.\".");
        // The following exception was thrown during execution in test generation
        try {
            rentalSystem0.addCustomer("ID: No vehicles match the keyword \"Vehicle with ID  not found.\"., Model: No vehicles match the keyword \"Vehicle with ID  not found.\"., Type: Vehicle with ID  not found., Daily Rate: $10.0, Status: Available\n", "");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Customer ID cannot be null or empty");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found." + "'", str12, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList16);
        org.junit.Assert.assertNotNull(vehicleList17);
        org.junit.Assert.assertNotNull(customerList18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found. not found. not found." + "'", str20, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\". not found.\". not found." + "'", str22, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\". not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\". not found.\". not found." + "'", str29, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\". not found.\". not found.");
    }

    @Test
    public void test1160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1160");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        rentalSystem0.addCustomer("hi!", "Vehicle with ID Vehicle with ID  not found. not found.");
        java.util.List<org.example.Vehicle> vehicleList9 = rentalSystem0.getVehicles();
        java.lang.String str13 = rentalSystem0.rentVehicle("hi!", "No vehicles match the keyword \"Vehicle with ID  not found.\".", (int) '4');
        java.util.List<org.example.Customer> customerList14 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList15 = rentalSystem0.getVehicles();
        int int16 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList17 = rentalSystem0.getCustomers();
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\".\".\". not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found.\". not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\". not found.\". not found.", (double) 3);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList9);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID hi! not found." + "'", str13, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertNotNull(customerList14);
        org.junit.Assert.assertNotNull(vehicleList15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(customerList17);
    }

    @Test
    public void test1161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1161");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("hi!");
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList5 = rentalSystem0.getVehicles();
        java.lang.Class<?> wildcardClass6 = vehicleList5.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID hi! not found." + "'", str3, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertNotNull(vehicleList5);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test1162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1162");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID  not found. not found.", "No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        java.lang.String str8 = rentalSystem0.rentVehicle("hi!", "No vehicles match the keyword \"Vehicle with ID  not found.\".", 100);
        java.lang.String str10 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID hi! not found. not found.");
        java.lang.String str12 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.");
        java.lang.String str14 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        int int15 = rentalSystem0.getAvailableVehicleCount();
        java.lang.Class<?> wildcardClass16 = rentalSystem0.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID hi! not found." + "'", str8, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found." + "'", str10, "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found." + "'", str12, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.\"." + "'", str14, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.\".");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test1163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1163");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID  not found.\".", "hi!");
        int int10 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList11 = rentalSystem0.getCustomers();
        java.lang.String str13 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.");
        int int14 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str16 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.\".");
        java.lang.String str18 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\". not found.\".");
        java.lang.String str22 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found. not found. not found. not found.", "", (-1));
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(customerList11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\"." + "'", str13, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.\". not found." + "'", str16, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\". not found.\".\"." + "'", str18, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\". not found.\".\".");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found. not found. not found. not found. not found." + "'", str22, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found. not found. not found. not found. not found.");
    }

    @Test
    public void test1164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1164");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID  not found.", 100);
        java.lang.String str12 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID  not found.\".", "Vehicle with ID Vehicle with ID hi! not found. not found.", (int) (short) -1);
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.", "ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n", "Vehicle with ID Vehicle with ID hi! not found. not found.", 100.0d);
        java.lang.String str19 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\". not found.\". not found. not found.");
        java.lang.String str21 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID  not found.\".\". not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found." + "'", str12, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\". not found.\". not found. not found.\"." + "'", str19, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\". not found.\". not found. not found.\".");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID  not found.\".\". not found. not found." + "'", str21, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID  not found.\".\". not found. not found.");
    }

    @Test
    public void test1165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1165");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("");
        java.util.List<org.example.Vehicle> vehicleList4 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.rentVehicle("", "Vehicle with ID hi! not found.", (int) (short) 100);
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.", "No vehicles match the keyword \"Vehicle with ID  not found.\".", "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.", (double) 10);
        java.util.List<org.example.Vehicle> vehicleList14 = rentalSystem0.getVehicles();
        java.lang.String str16 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.\". not found.");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID  not found." + "'", str3, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID  not found." + "'", str8, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.\". not found. not found." + "'", str16, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.\". not found. not found.");
    }

    @Test
    public void test1166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1166");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        rentalSystem0.addCustomer("hi!", "Vehicle with ID Vehicle with ID  not found. not found.");
        int int9 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList10 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\".", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found. not found. not found.\".\".");
        rentalSystem0.addCustomer("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found. not found.\".\". not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found. not found.\". not found.");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(customerList10);
    }

    @Test
    public void test1167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1167");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("");
        int int4 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Vehicle> vehicleList5 = rentalSystem0.getVehicles();
        java.lang.String str7 = rentalSystem0.searchVehicle("hi!");
        java.lang.String str11 = rentalSystem0.rentVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found.", "", (int) (byte) 0);
        java.lang.Class<?> wildcardClass12 = rentalSystem0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID  not found." + "'", str3, "Vehicle with ID  not found.");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(vehicleList5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "No vehicles match the keyword \"hi!\"." + "'", str7, "No vehicles match the keyword \"hi!\".");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found." + "'", str11, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found.");
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test1168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1168");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.searchVehicle("Vehicle with ID  not found.");
        rentalSystem0.addVehicle("hi!", "Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID hi! not found.", (double) 0);
        rentalSystem0.addCustomer("ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\".");
        java.lang.String str20 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\". not found. not found. not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found. not found.\".", 1);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "No vehicles match the keyword \"Vehicle with ID  not found.\"." + "'", str8, "No vehicles match the keyword \"Vehicle with ID  not found.\".");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\". not found. not found. not found. not found. not found." + "'", str20, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\". not found. not found. not found. not found. not found.");
    }

    @Test
    public void test1169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1169");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        int int7 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList8 = rentalSystem0.getCustomers();
        int int9 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\". not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found. not found.\".", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\".\".", (double) (short) 100);
        java.lang.String str16 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found.\".");
        java.lang.Class<?> wildcardClass17 = rentalSystem0.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(customerList8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found.\".\"." + "'", str16, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found.\".\".");
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test1170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1170");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.returnVehicle("Vehicle with ID  not found.");
        java.lang.String str12 = rentalSystem0.rentVehicle("Vehicle with ID hi! not found.", "Vehicle with ID Vehicle with ID  not found. not found.", (int) (byte) 10);
        java.lang.String str14 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        java.lang.String str16 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found.");
        java.lang.String str20 = rentalSystem0.rentVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\". not found.\". not found.\". not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".", (int) (byte) 100);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID  not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID  not found. not found.");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID Vehicle with ID hi! not found. not found." + "'", str12, "Vehicle with ID Vehicle with ID hi! not found. not found.");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found." + "'", str14, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found. not found." + "'", str16, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found. not found.");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\". not found.\". not found.\". not found. not found." + "'", str20, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\". not found.\". not found.\". not found. not found.");
    }

    @Test
    public void test1171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1171");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList7 = rentalSystem0.getVehicles();
        java.lang.String str11 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID hi! not found.\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.", (int) (byte) 100);
        int int12 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Vehicle> vehicleList13 = rentalSystem0.getVehicles();
        java.lang.String str15 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\".");
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID  not found.\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\".", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.", (double) (byte) 1);
        java.util.List<org.example.Customer> customerList21 = rentalSystem0.getCustomers();
        java.lang.String str23 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertNotNull(vehicleList7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found." + "'", str11, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(vehicleList13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found." + "'", str15, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.");
        org.junit.Assert.assertNotNull(customerList21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\"." + "'", str23, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\".");
    }

    @Test
    public void test1172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1172");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.returnVehicle("");
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".", "No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".");
        java.lang.String str15 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\".", "No vehicles match the keyword \"Vehicle with ID  not found.\".", (int) (short) 100);
        java.lang.String str19 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found.", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".\".\".", 0);
        int int20 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList21 = rentalSystem0.getCustomers();
        java.lang.String str23 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\". not found. not found. not found. not found.");
        int int24 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str26 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found. not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID  not found." + "'", str8, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found." + "'", str15, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found. not found." + "'", str19, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found. not found.");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(customerList21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\". not found. not found. not found. not found.\"." + "'", str23, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\". not found. not found. not found. not found.\".");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found. not found.\". not found. not found." + "'", str26, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found. not found.\". not found. not found.");
    }

    @Test
    public void test1173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1173");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        int int7 = rentalSystem0.getAvailableVehicleCount();
        int int8 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\".", "hi!");
        java.lang.String str15 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\".", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID  not found.\".\".", (int) 'a');
        java.lang.String str17 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found. not found.");
        java.lang.String str19 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\". not found. not found. not found.");
        java.util.List<org.example.Customer> customerList20 = rentalSystem0.getCustomers();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found." + "'", str15, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found. not found.\"." + "'", str17, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found. not found.\".");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\". not found. not found. not found. not found." + "'", str19, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\". not found. not found. not found. not found.");
        org.junit.Assert.assertNotNull(customerList20);
    }

    @Test
    public void test1174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1174");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID  not found.", 100);
        java.lang.String str12 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID  not found.\".", "Vehicle with ID Vehicle with ID hi! not found. not found.", (int) (short) -1);
        java.lang.String str14 = rentalSystem0.searchVehicle("hi!");
        java.util.List<org.example.Vehicle> vehicleList15 = rentalSystem0.getVehicles();
        java.lang.String str17 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID hi! not found. not found.");
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found. not found. not found.");
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found.", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found.", (double) 2);
        java.util.List<org.example.Customer> customerList26 = rentalSystem0.getCustomers();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found." + "'", str12, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "No vehicles match the keyword \"hi!\"." + "'", str14, "No vehicles match the keyword \"hi!\".");
        org.junit.Assert.assertNotNull(vehicleList15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\"." + "'", str17, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\".");
        org.junit.Assert.assertNotNull(customerList26);
    }

    @Test
    public void test1175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1175");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("hi!");
        java.lang.String str5 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\".", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".\".");
        java.util.List<org.example.Customer> customerList9 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList10 = rentalSystem0.getVehicles();
        int int11 = rentalSystem0.getAvailableVehicleCount();
        java.lang.Class<?> wildcardClass12 = rentalSystem0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID hi! not found." + "'", str3, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found." + "'", str5, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.");
        org.junit.Assert.assertNotNull(customerList9);
        org.junit.Assert.assertNotNull(vehicleList10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test1176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1176");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID  not found.\".", "hi!");
        java.lang.String str11 = rentalSystem0.returnVehicle("Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.");
        java.util.List<org.example.Vehicle> vehicleList12 = rentalSystem0.getVehicles();
        int int13 = rentalSystem0.getAvailableVehicleCount();
        int int14 = rentalSystem0.getAvailableVehicleCount();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found." + "'", str11, "Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
    }

    @Test
    public void test1177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1177");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.returnVehicle("");
        java.util.List<org.example.Customer> customerList9 = rentalSystem0.getCustomers();
        java.lang.String str13 = rentalSystem0.rentVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.", "Vehicle with ID Vehicle with ID hi! not found. not found.", (int) (short) 10);
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\".\". not found.", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\".\".", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".\".\".", (double) '#');
        java.util.List<org.example.Vehicle> vehicleList19 = rentalSystem0.getVehicles();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID  not found." + "'", str8, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList9);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found." + "'", str13, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList19);
    }

    @Test
    public void test1178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1178");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID  not found. not found.", "No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        int int5 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID hi! not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".", "Vehicle with ID Vehicle with ID hi! not found. not found.", (double) 100.0f);
        java.util.List<org.example.Customer> customerList11 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\".", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\".\". not found.\".");
        java.util.List<org.example.Customer> customerList15 = rentalSystem0.getCustomers();
        java.lang.String str19 = rentalSystem0.rentVehicle("", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\". not found.\".", (int) '#');
        java.util.List<org.example.Vehicle> vehicleList20 = rentalSystem0.getVehicles();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(customerList11);
        org.junit.Assert.assertNotNull(customerList15);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Vehicle with ID  not found." + "'", str19, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList20);
    }

    @Test
    public void test1179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1179");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.", "hi!", (int) (short) 100);
        java.util.List<org.example.Vehicle> vehicleList9 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found.", "No vehicles match the keyword \"\".");
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\". not found.\". not found.\". not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.\".");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList9);
    }

    @Test
    public void test1180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1180");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("");
        rentalSystem0.addVehicle("Vehicle with ID  not found.", "Vehicle with ID hi! not found.", "Vehicle with ID Vehicle with ID hi! not found. not found.", (double) '4');
        int int9 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\".", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.\".\".");
        java.util.List<org.example.Customer> customerList13 = rentalSystem0.getCustomers();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID  not found." + "'", str3, "Vehicle with ID  not found.");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(customerList13);
    }

    @Test
    public void test1181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1181");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.searchVehicle("Vehicle with ID  not found.");
        rentalSystem0.addVehicle("hi!", "Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID hi! not found.", (double) 0);
        java.util.List<org.example.Customer> customerList14 = rentalSystem0.getCustomers();
        java.lang.String str18 = rentalSystem0.rentVehicle("Vehicle with ID No vehicles match the keyword \"hi!\". not found.", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found. not found.", (int) (short) -1);
        java.util.List<org.example.Vehicle> vehicleList19 = rentalSystem0.getVehicles();
        java.lang.String str21 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.");
        java.util.List<org.example.Customer> customerList22 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList23 = rentalSystem0.getCustomers();
        java.lang.String str27 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\". not found. not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\".", (int) (short) 10);
        // The following exception was thrown during execution in test generation
        try {
            rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\". not found.\".", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\". not found.\".", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\".\".\".", (-1.0d));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Daily rate cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "No vehicles match the keyword \"Vehicle with ID  not found.\"." + "'", str8, "No vehicles match the keyword \"Vehicle with ID  not found.\".");
        org.junit.Assert.assertNotNull(customerList14);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found." + "'", str18, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList19);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\"." + "'", str21, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\".");
        org.junit.Assert.assertNotNull(customerList22);
        org.junit.Assert.assertNotNull(customerList23);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\". not found. not found. not found." + "'", str27, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\". not found. not found. not found.");
    }

    @Test
    public void test1182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1182");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("hi!");
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        int int5 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str9 = rentalSystem0.rentVehicle("No vehicles match the keyword \"\".", "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.", (int) (short) 10);
        java.lang.String str13 = rentalSystem0.rentVehicle("No vehicles match the keyword \"\".", "", (-1));
        java.lang.String str15 = rentalSystem0.returnVehicle("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\".");
        java.lang.Class<?> wildcardClass16 = rentalSystem0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID hi! not found." + "'", str3, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Vehicle with ID No vehicles match the keyword \"\". not found." + "'", str9, "Vehicle with ID No vehicles match the keyword \"\". not found.");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID No vehicles match the keyword \"\". not found." + "'", str13, "Vehicle with ID No vehicles match the keyword \"\". not found.");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\". not found." + "'", str15, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\". not found.");
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test1183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1183");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("");
        java.util.List<org.example.Vehicle> vehicleList4 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.rentVehicle("", "Vehicle with ID hi! not found.", (int) (short) 100);
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.", "No vehicles match the keyword \"Vehicle with ID  not found.\".", "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.", (double) 10);
        java.util.List<org.example.Customer> customerList14 = rentalSystem0.getCustomers();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID  not found." + "'", str3, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID  not found." + "'", str8, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList14);
    }

    @Test
    public void test1184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1184");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("hi!");
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        int int5 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str9 = rentalSystem0.rentVehicle("No vehicles match the keyword \"\".", "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.", (int) (short) 10);
        java.lang.String str11 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".");
        // The following exception was thrown during execution in test generation
        try {
            rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\". not found.\". not found. not found. not found.", "", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.", (double) 1L);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Model cannot be null or empty");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID hi! not found." + "'", str3, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Vehicle with ID No vehicles match the keyword \"\". not found." + "'", str9, "Vehicle with ID No vehicles match the keyword \"\". not found.");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\". not found." + "'", str11, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\". not found.");
    }

    @Test
    public void test1185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1185");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList7 = rentalSystem0.getVehicles();
        java.lang.String str11 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID hi! not found.\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.", (int) (byte) 100);
        int int12 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Vehicle> vehicleList13 = rentalSystem0.getVehicles();
        java.lang.Class<?> wildcardClass14 = vehicleList13.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertNotNull(vehicleList7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found." + "'", str11, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(vehicleList13);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test1186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1186");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.returnVehicle("");
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".", "No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".");
        java.lang.String str15 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\".", "No vehicles match the keyword \"Vehicle with ID  not found.\".", (int) (short) 100);
        java.lang.String str19 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found.", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".\".\".", 0);
        int int20 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList21 = rentalSystem0.getCustomers();
        java.lang.String str23 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\". not found. not found. not found. not found.");
        int int24 = rentalSystem0.getAvailableVehicleCount();
        java.lang.Class<?> wildcardClass25 = rentalSystem0.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID  not found." + "'", str8, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found." + "'", str15, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found. not found." + "'", str19, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found. not found.");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(customerList21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\". not found. not found. not found. not found.\"." + "'", str23, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\". not found. not found. not found. not found.\".");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test1187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1187");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.lang.String str4 = rentalSystem0.searchVehicle("hi!");
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID  not found.\".", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\".", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\".", 100.0d);
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.\". not found.");
        java.util.List<org.example.Customer> customerList13 = rentalSystem0.getCustomers();
        int int14 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found. not found.\".", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\". not found.\".", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found. not found.", 1.0d);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "No vehicles match the keyword \"hi!\"." + "'", str4, "No vehicles match the keyword \"hi!\".");
        org.junit.Assert.assertNotNull(customerList13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
    }

    @Test
    public void test1188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1188");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        rentalSystem0.addCustomer("hi!", "Vehicle with ID Vehicle with ID  not found. not found.");
        java.util.List<org.example.Vehicle> vehicleList9 = rentalSystem0.getVehicles();
        java.lang.String str13 = rentalSystem0.rentVehicle("hi!", "No vehicles match the keyword \"Vehicle with ID  not found.\".", (int) '4');
        java.util.List<org.example.Customer> customerList14 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList15 = rentalSystem0.getVehicles();
        int int16 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList17 = rentalSystem0.getCustomers();
        // The following exception was thrown during execution in test generation
        try {
            rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\". not found.\". not found.", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found. not found. not found. not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found. not found. not found.\". not found.", (double) (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Daily rate cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList9);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID hi! not found." + "'", str13, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertNotNull(customerList14);
        org.junit.Assert.assertNotNull(vehicleList15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(customerList17);
    }

    @Test
    public void test1189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1189");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("hi!");
        java.lang.String str5 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\".", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".\".");
        java.util.List<org.example.Customer> customerList9 = rentalSystem0.getCustomers();
        java.lang.String str11 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.");
        int int12 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str14 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.\". not found.");
        java.util.List<org.example.Vehicle> vehicleList15 = rentalSystem0.getVehicles();
        java.lang.String str19 = rentalSystem0.rentVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found.", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.\".", (int) '4');
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID hi! not found." + "'", str3, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found." + "'", str5, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.");
        org.junit.Assert.assertNotNull(customerList9);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found. not found." + "'", str11, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found. not found.");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.\". not found. not found." + "'", str14, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.\". not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList15);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found. not found." + "'", str19, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found. not found.");
    }

    @Test
    public void test1190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1190");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.lang.String str9 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.", (int) (byte) 1);
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID  not found. not found.", "No vehicles match the keyword \"\".", "Vehicle with ID  not found.", (double) 1L);
        java.lang.String str16 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\". not found.");
        java.lang.String str18 = rentalSystem0.returnVehicle("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\".");
        rentalSystem0.addVehicle("hi!", "No vehicles match the keyword \"ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n\".", "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.", (double) 3);
        java.lang.String str27 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\".", (int) (byte) 100);
        java.util.List<org.example.Customer> customerList28 = rentalSystem0.getCustomers();
        int int29 = rentalSystem0.getAvailableVehicleCount();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found." + "'", str9, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\". not found.\"." + "'", str16, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\". not found.\".");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\". not found." + "'", str18, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\". not found.");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found." + "'", str27, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.");
        org.junit.Assert.assertNotNull(customerList28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 2 + "'", int29 == 2);
    }

    @Test
    public void test1191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1191");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList5 = rentalSystem0.getVehicles();
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".", (double) 1.0f);
        java.util.List<org.example.Vehicle> vehicleList11 = rentalSystem0.getVehicles();
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\". not found. not found. not found.", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found. not found. not found.", "Vehicle with ID hi! not found.", 100.0d);
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\". not found.\". not found. not found.\". not found.", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\".\". not found.", "ID: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Model: No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\"., Type: No vehicles match the keyword \"Vehicle with ID hi! not found.\"., Daily Rate: $100.0, Status: Available\n", (double) 0.0f);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertNotNull(vehicleList5);
        org.junit.Assert.assertNotNull(vehicleList11);
    }

    @Test
    public void test1192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1192");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.returnVehicle("");
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".", "No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".");
        java.lang.String str15 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\".", "No vehicles match the keyword \"Vehicle with ID  not found.\".", (int) (short) 100);
        java.util.List<org.example.Customer> customerList16 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\". not found. not found. not found.", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.\".");
        java.lang.Class<?> wildcardClass20 = rentalSystem0.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID  not found." + "'", str8, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found." + "'", str15, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found.");
        org.junit.Assert.assertNotNull(customerList16);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test1193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1193");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList7 = rentalSystem0.getVehicles();
        java.lang.String str11 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID hi! not found.\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.", (int) (byte) 100);
        java.lang.String str13 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".");
        java.util.List<org.example.Customer> customerList14 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList15 = rentalSystem0.getCustomers();
        java.lang.String str19 = rentalSystem0.rentVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found.\".\".", "Vehicle is already available.", (int) '#');
        int int20 = rentalSystem0.getAvailableVehicleCount();
        // The following exception was thrown during execution in test generation
        try {
            rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found. not found.\". not found. not found.\".", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found.\". not found.\".\".\".", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID hi! not found.\".\". not found.", (double) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Daily rate cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertNotNull(vehicleList7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found." + "'", str11, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\"." + "'", str13, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\".");
        org.junit.Assert.assertNotNull(customerList14);
        org.junit.Assert.assertNotNull(customerList15);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found.\".\". not found." + "'", str19, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found.\".\". not found.");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
    }

    @Test
    public void test1194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1194");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList4 = rentalSystem0.getVehicles();
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.", "ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.", (double) (byte) 100);
        rentalSystem0.addVehicle("Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.", "Vehicle with ID hi! not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found.", 10.0d);
        java.lang.String str18 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found.\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found. not found. not found.\". not found.", (int) '4');
        java.lang.String str22 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.\". not found. not found. not found.", (int) (short) 0);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(vehicleList4);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found.\". not found." + "'", str18, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found." + "'", str22, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.");
    }

    @Test
    public void test1195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1195");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.returnVehicle("");
        int int9 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\".", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".\".", "hi!", (double) 1L);
        int int15 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str17 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\". not found.\". not found.");
        java.lang.String str21 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found. not found.", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\".\".\". not found.", (int) (short) 1);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID  not found." + "'", str8, "Vehicle with ID  not found.");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\". not found.\". not found. not found." + "'", str17, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\". not found.\". not found. not found.");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found. not found. not found." + "'", str21, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found. not found. not found.");
    }

    @Test
    public void test1196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1196");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList5 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        int int7 = rentalSystem0.getAvailableVehicleCount();
        java.lang.Class<?> wildcardClass8 = rentalSystem0.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertNotNull(vehicleList5);
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test1197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1197");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("");
        int int4 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Vehicle> vehicleList5 = rentalSystem0.getVehicles();
        java.lang.String str7 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found.");
        int int8 = rentalSystem0.getAvailableVehicleCount();
        int int9 = rentalSystem0.getAvailableVehicleCount();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID  not found." + "'", str3, "Vehicle with ID  not found.");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(vehicleList5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found." + "'", str7, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
    }

    @Test
    public void test1198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1198");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("");
        rentalSystem0.addVehicle("Vehicle with ID  not found.", "Vehicle with ID hi! not found.", "Vehicle with ID Vehicle with ID hi! not found. not found.", (double) '4');
        java.util.List<org.example.Customer> customerList9 = rentalSystem0.getCustomers();
        int int10 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str14 = rentalSystem0.rentVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\". not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.", 0);
        java.util.List<org.example.Customer> customerList15 = rentalSystem0.getCustomers();
        java.lang.Class<?> wildcardClass16 = rentalSystem0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID  not found." + "'", str3, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\". not found. not found." + "'", str14, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\". not found. not found.");
        org.junit.Assert.assertNotNull(customerList15);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test1199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1199");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.returnVehicle("Vehicle with ID  not found.");
        java.lang.String str12 = rentalSystem0.rentVehicle("Vehicle with ID hi! not found.", "Vehicle with ID Vehicle with ID  not found. not found.", (int) (byte) 10);
        java.lang.String str14 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        java.util.List<org.example.Vehicle> vehicleList15 = rentalSystem0.getVehicles();
        java.lang.String str17 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\". not found. not found. not found.");
        java.lang.String str21 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\". not found.\". not found.", 0);
        java.lang.Class<?> wildcardClass22 = rentalSystem0.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID  not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID  not found. not found.");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID Vehicle with ID hi! not found. not found." + "'", str12, "Vehicle with ID Vehicle with ID hi! not found. not found.");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found." + "'", str14, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\". not found. not found. not found. not found." + "'", str17, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\". not found. not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\". not found." + "'", str21, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\". not found.");
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test1200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1200");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID  not found.\".", "hi!");
        rentalSystem0.addCustomer("No vehicles match the keyword \"hi!\".", "hi!");
        java.lang.String str14 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        java.lang.String str18 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found.\".", (int) (byte) 100);
        java.lang.String str22 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\". not found. not found.", 0);
        java.lang.String str26 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found. not found. not found. not found.\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found. not found. not found.\".", (int) (short) -1);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found." + "'", str14, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found. not found." + "'", str18, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found." + "'", str22, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found. not found. not found. not found.\". not found." + "'", str26, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found. not found. not found. not found.\". not found.");
    }

    @Test
    public void test1201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1201");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        int int7 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str9 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".");
        java.lang.String str11 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\". not found.");
        java.util.List<org.example.Customer> customerList12 = rentalSystem0.getCustomers();
        int int13 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList14 = rentalSystem0.getCustomers();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\". not found." + "'", str9, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\". not found.\"." + "'", str11, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\". not found.\".");
        org.junit.Assert.assertNotNull(customerList12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(customerList14);
    }

    @Test
    public void test1202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1202");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID  not found. not found.", "No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        java.util.List<org.example.Vehicle> vehicleList5 = rentalSystem0.getVehicles();
        java.lang.String str7 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.");
        int int8 = rentalSystem0.getAvailableVehicleCount();
        int int9 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str11 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\". not found. not found. not found.");
        java.util.List<org.example.Customer> customerList12 = rentalSystem0.getCustomers();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found." + "'", str7, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\". not found. not found. not found.\"." + "'", str11, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\". not found. not found. not found.\".");
        org.junit.Assert.assertNotNull(customerList12);
    }

    @Test
    public void test1203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1203");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.returnVehicle("");
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".", "No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".");
        java.lang.String str15 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\".", "No vehicles match the keyword \"Vehicle with ID  not found.\".", (int) (short) 100);
        java.util.List<org.example.Customer> customerList16 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList17 = rentalSystem0.getVehicles();
        java.lang.Class<?> wildcardClass18 = vehicleList17.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID  not found." + "'", str8, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found." + "'", str15, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found.");
        org.junit.Assert.assertNotNull(customerList16);
        org.junit.Assert.assertNotNull(vehicleList17);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test1204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1204");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID  not found.", 100);
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID  not found.\".", "Vehicle with ID Vehicle with ID  not found. not found.");
        java.util.List<org.example.Vehicle> vehicleList12 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList13 = rentalSystem0.getVehicles();
        rentalSystem0.addVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID hi! not found.\".\".", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found. not found. not found.", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\". not found. not found. not found.", (double) 100.0f);
        // The following exception was thrown during execution in test generation
        try {
            rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.\". not found.\".\".", "");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Customer ID cannot be null or empty");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList12);
        org.junit.Assert.assertNotNull(vehicleList13);
    }

    @Test
    public void test1205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1205");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID  not found. not found.", "No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        int int5 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID hi! not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".", "Vehicle with ID Vehicle with ID hi! not found. not found.", (double) 100.0f);
        java.lang.String str12 = rentalSystem0.returnVehicle("No vehicles match the keyword \"ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n\".");
        java.util.List<org.example.Customer> customerList13 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList14 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList15 = rentalSystem0.getVehicles();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID No vehicles match the keyword \"ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n\". not found." + "'", str12, "Vehicle with ID No vehicles match the keyword \"ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n\". not found.");
        org.junit.Assert.assertNotNull(customerList13);
        org.junit.Assert.assertNotNull(vehicleList14);
        org.junit.Assert.assertNotNull(vehicleList15);
    }

    @Test
    public void test1206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1206");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.", "Vehicle with ID Vehicle with ID hi! not found. not found.", "No vehicles match the keyword \"hi!\".", (double) 1L);
        java.lang.String str13 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".");
        java.lang.String str17 = rentalSystem0.rentVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\". not found.\". not found. not found.\". not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\". not found.\". not found.", (int) (short) -1);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\". not found." + "'", str13, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\". not found.\". not found. not found.\". not found. not found." + "'", str17, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\". not found.\". not found. not found.\". not found. not found.");
    }

    @Test
    public void test1207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1207");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.returnVehicle("Vehicle with ID  not found.");
        java.lang.String str12 = rentalSystem0.rentVehicle("Vehicle with ID hi! not found.", "Vehicle with ID Vehicle with ID  not found. not found.", (int) (byte) 10);
        java.lang.String str14 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        java.util.List<org.example.Vehicle> vehicleList15 = rentalSystem0.getVehicles();
        java.lang.String str17 = rentalSystem0.returnVehicle("");
        java.util.List<org.example.Vehicle> vehicleList18 = rentalSystem0.getVehicles();
        java.lang.String str20 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.");
        java.lang.String str24 = rentalSystem0.rentVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found. not found.\".", 2);
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\".", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found.\".\".\". not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\". not found.\". not found. not found.", (double) 0L);
        rentalSystem0.addCustomer("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found.\". not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.\". not found. not found.\".\".");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID  not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID  not found. not found.");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID Vehicle with ID hi! not found. not found." + "'", str12, "Vehicle with ID Vehicle with ID hi! not found. not found.");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found." + "'", str14, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Vehicle with ID  not found." + "'", str17, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\"." + "'", str20, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\".");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found. not found." + "'", str24, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found. not found.");
    }

    @Test
    public void test1208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1208");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.", "Vehicle with ID Vehicle with ID hi! not found. not found.", "No vehicles match the keyword \"hi!\".", (double) 1L);
        java.lang.String str13 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"hi!\". not found.");
        java.lang.String str17 = rentalSystem0.rentVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found.", (int) '4');
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.\". not found.", "No vehicles match the keyword \"\".", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found.\".", (double) 100.0f);
        java.lang.String str24 = rentalSystem0.returnVehicle("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\".");
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\". not found. not found. not found.\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found. not found.\". not found.\". not found.", "ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n", (double) 1);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\"." + "'", str13, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\".");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found." + "'", str17, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\". not found." + "'", str24, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\". not found.");
    }

    @Test
    public void test1209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1209");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        int int2 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        int int4 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".", "No vehicles match the keyword \"Vehicle with ID  not found.\".");
        java.lang.String str9 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found.");
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.\". not found.\".", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID  not found.\".\".\". not found.");
        java.lang.String str16 = rentalSystem0.rentVehicle("", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found. not found.\".\". not found.", (int) ' ');
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found. not found." + "'", str9, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Vehicle with ID  not found." + "'", str16, "Vehicle with ID  not found.");
    }

    @Test
    public void test1210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1210");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.searchVehicle("Vehicle with ID  not found.");
        rentalSystem0.addVehicle("hi!", "Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID hi! not found.", (double) 0);
        java.lang.String str15 = rentalSystem0.returnVehicle("Vehicle with ID  not found.");
        int int16 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.\".", "No vehicles match the keyword \"hi!\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".", 0.0d);
        java.lang.String str23 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.");
        java.lang.String str25 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found.");
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found. not found.", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found.\". not found.\".", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.\".\".", (double) 0);
        java.lang.String str32 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\". not found. not found.\".");
        java.util.List<org.example.Customer> customerList33 = rentalSystem0.getCustomers();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "No vehicles match the keyword \"Vehicle with ID  not found.\"." + "'", str8, "No vehicles match the keyword \"Vehicle with ID  not found.\".");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Vehicle with ID Vehicle with ID  not found. not found." + "'", str15, "Vehicle with ID Vehicle with ID  not found. not found.");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found." + "'", str23, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found.\"." + "'", str25, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found.\".");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\". not found. not found.\".\"." + "'", str32, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\". not found. not found.\".\".");
        org.junit.Assert.assertNotNull(customerList33);
    }

    @Test
    public void test1211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1211");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.searchVehicle("Vehicle with ID  not found.");
        rentalSystem0.addVehicle("hi!", "Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID hi! not found.", (double) 0);
        java.util.List<org.example.Customer> customerList14 = rentalSystem0.getCustomers();
        java.lang.String str18 = rentalSystem0.rentVehicle("Vehicle with ID No vehicles match the keyword \"hi!\". not found.", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found. not found.", (int) (short) -1);
        java.util.List<org.example.Vehicle> vehicleList19 = rentalSystem0.getVehicles();
        java.lang.String str21 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found. not found.");
        rentalSystem0.addVehicle("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\".\".\".\".", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found. not found. not found. not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found. not found. not found. not found.\".", (double) 0L);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "No vehicles match the keyword \"Vehicle with ID  not found.\"." + "'", str8, "No vehicles match the keyword \"Vehicle with ID  not found.\".");
        org.junit.Assert.assertNotNull(customerList14);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found." + "'", str18, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList19);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found. not found.\"." + "'", str21, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found. not found.\".");
    }

    @Test
    public void test1212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1212");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        rentalSystem0.addCustomer("hi!", "Vehicle with ID Vehicle with ID  not found. not found.");
        int int9 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList10 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\".", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found. not found. not found.\".\".");
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\". not found. not found. not found. not found.", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found. not found. not found. not found. not found.");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(customerList10);
    }

    @Test
    public void test1213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1213");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.lang.String str5 = rentalSystem0.returnVehicle("Vehicle with ID  not found.");
        java.lang.String str7 = rentalSystem0.searchVehicle("Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.");
        java.lang.String str9 = rentalSystem0.searchVehicle("hi!");
        rentalSystem0.addCustomer("hi!", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\". not found.");
        // The following exception was thrown during execution in test generation
        try {
            rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\". not found. not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\". not found. not found.", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".\".\". not found.", (double) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Daily rate cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID Vehicle with ID  not found. not found." + "'", str5, "Vehicle with ID Vehicle with ID  not found. not found.");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\"." + "'", str7, "No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "No vehicles match the keyword \"hi!\"." + "'", str9, "No vehicles match the keyword \"hi!\".");
    }

    @Test
    public void test1214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1214");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.searchVehicle("Vehicle with ID  not found.");
        rentalSystem0.addVehicle("hi!", "Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID hi! not found.", (double) 0);
        rentalSystem0.addCustomer("Vehicle with ID hi! not found.", "hi!");
        java.util.List<org.example.Vehicle> vehicleList17 = rentalSystem0.getVehicles();
        int int18 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str22 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found. not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found. not found. not found.\".", 1);
        rentalSystem0.addCustomer("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\".\".\". not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\". not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "No vehicles match the keyword \"Vehicle with ID  not found.\"." + "'", str8, "No vehicles match the keyword \"Vehicle with ID  not found.\".");
        org.junit.Assert.assertNotNull(vehicleList17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found. not found. not found. not found." + "'", str22, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found. not found. not found. not found.");
    }

    @Test
    public void test1215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1215");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList7 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList8 = rentalSystem0.getCustomers();
        int int9 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str11 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.");
        java.util.List<org.example.Customer> customerList12 = rentalSystem0.getCustomers();
        java.lang.String str14 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found. not found. not found. not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertNotNull(vehicleList7);
        org.junit.Assert.assertNotNull(customerList8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\"." + "'", str11, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\".");
        org.junit.Assert.assertNotNull(customerList12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found. not found. not found. not found.\". not found. not found." + "'", str14, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found. not found. not found. not found.\". not found. not found.");
    }

    @Test
    public void test1216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1216");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("hi!");
        rentalSystem0.addCustomer("ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n", "No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".");
        java.lang.String str10 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".", (int) (byte) 1);
        java.lang.String str14 = rentalSystem0.rentVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\". not found.", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".\".\".", 100);
        java.lang.String str18 = rentalSystem0.rentVehicle("", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found.", (int) 'a');
        java.util.List<org.example.Vehicle> vehicleList19 = rentalSystem0.getVehicles();
        java.lang.String str21 = rentalSystem0.searchVehicle("");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID hi! not found." + "'", str3, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found. not found." + "'", str10, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\". not found. not found." + "'", str14, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\". not found. not found.");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Vehicle with ID  not found." + "'", str18, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList19);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "No vehicles match the keyword \"\"." + "'", str21, "No vehicles match the keyword \"\".");
    }

    @Test
    public void test1217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1217");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.lang.String str4 = rentalSystem0.searchVehicle("hi!");
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID  not found.\".", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\".", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\".", 100.0d);
        java.lang.String str11 = rentalSystem0.searchVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\".");
        java.lang.String str13 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\".\". not found. not found.");
        int int14 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str16 = rentalSystem0.searchVehicle("Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "No vehicles match the keyword \"hi!\"." + "'", str4, "No vehicles match the keyword \"hi!\".");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\".\"." + "'", str11, "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\".\".");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\".\". not found. not found.\"." + "'", str13, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\".\". not found. not found.\".");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\"." + "'", str16, "No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".");
    }

    @Test
    public void test1218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1218");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.searchVehicle("Vehicle with ID  not found.");
        rentalSystem0.addVehicle("hi!", "Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID hi! not found.", (double) 0);
        java.util.List<org.example.Vehicle> vehicleList14 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.\". not found.");
        int int18 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str20 = rentalSystem0.searchVehicle("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found.\".\".\".");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "No vehicles match the keyword \"Vehicle with ID  not found.\"." + "'", str8, "No vehicles match the keyword \"Vehicle with ID  not found.\".");
        org.junit.Assert.assertNotNull(vehicleList14);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found.\".\".\".\"." + "'", str20, "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found.\".\".\".\".");
    }

    @Test
    public void test1219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1219");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        int int7 = rentalSystem0.getAvailableVehicleCount();
        int int8 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList9 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList10 = rentalSystem0.getCustomers();
        java.lang.String str14 = rentalSystem0.rentVehicle("Vehicle with ID hi! not found.", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\". not found.", (int) '4');
        java.util.List<org.example.Customer> customerList15 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList16 = rentalSystem0.getCustomers();
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\". not found.\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\". not found. not found. not found.\".", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\".\". not found.", (double) 0.0f);
        java.lang.String str23 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.\". not found. not found. not found. not found.");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(customerList9);
        org.junit.Assert.assertNotNull(customerList10);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID Vehicle with ID hi! not found. not found." + "'", str14, "Vehicle with ID Vehicle with ID hi! not found. not found.");
        org.junit.Assert.assertNotNull(customerList15);
        org.junit.Assert.assertNotNull(customerList16);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.\". not found. not found. not found. not found. not found." + "'", str23, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.\". not found. not found. not found. not found. not found.");
    }

    @Test
    public void test1220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1220");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        rentalSystem0.addCustomer("hi!", "Vehicle with ID Vehicle with ID  not found. not found.");
        java.util.List<org.example.Vehicle> vehicleList9 = rentalSystem0.getVehicles();
        java.lang.String str13 = rentalSystem0.rentVehicle("hi!", "No vehicles match the keyword \"Vehicle with ID  not found.\".", (int) '4');
        java.lang.String str15 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.\". not found. not found.");
        // The following exception was thrown during execution in test generation
        try {
            rentalSystem0.addVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.\".\".", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\".\". not found. not found. not found.", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\".\".", (double) (-1L));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Daily rate cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList9);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID hi! not found." + "'", str13, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.\". not found. not found.\"." + "'", str15, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.\". not found. not found.\".");
    }

    @Test
    public void test1221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1221");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        int int2 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        int int4 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".", "No vehicles match the keyword \"Vehicle with ID  not found.\".");
        int int8 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str10 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\".");
        java.util.List<org.example.Vehicle> vehicleList11 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList12 = rentalSystem0.getVehicles();
        java.lang.String str16 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\". not found. not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\".\".", 10);
        java.lang.String str18 = rentalSystem0.returnVehicle("");
        java.util.List<org.example.Customer> customerList19 = rentalSystem0.getCustomers();
        int int20 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str22 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID  not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found." + "'", str10, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList11);
        org.junit.Assert.assertNotNull(vehicleList12);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\". not found. not found. not found." + "'", str16, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\". not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Vehicle with ID  not found." + "'", str18, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"." + "'", str22, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".");
    }

    @Test
    public void test1222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1222");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList5 = rentalSystem0.getVehicles();
        java.lang.String str9 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".", "No vehicles match the keyword \"Vehicle with ID  not found.\".", (int) ' ');
        int int10 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Vehicle> vehicleList11 = rentalSystem0.getVehicles();
        java.lang.Class<?> wildcardClass12 = vehicleList11.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertNotNull(vehicleList5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found." + "'", str9, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(vehicleList11);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test1223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1223");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.returnVehicle("Vehicle with ID  not found.");
        java.lang.String str12 = rentalSystem0.rentVehicle("Vehicle with ID hi! not found.", "Vehicle with ID Vehicle with ID  not found. not found.", (int) (byte) 10);
        java.lang.String str14 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        java.util.List<org.example.Vehicle> vehicleList15 = rentalSystem0.getVehicles();
        java.lang.String str19 = rentalSystem0.rentVehicle("", "Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.", (int) (byte) 100);
        java.util.List<org.example.Customer> customerList20 = rentalSystem0.getCustomers();
        java.lang.String str22 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.\". not found. not found.");
        // The following exception was thrown during execution in test generation
        try {
            rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found.\".\".", "");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Customer ID cannot be null or empty");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID  not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID  not found. not found.");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID Vehicle with ID hi! not found. not found." + "'", str12, "Vehicle with ID Vehicle with ID hi! not found. not found.");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found." + "'", str14, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList15);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Vehicle with ID  not found." + "'", str19, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.\". not found. not found. not found." + "'", str22, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.\". not found. not found. not found.");
    }

    @Test
    public void test1224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1224");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.returnVehicle("");
        java.util.List<org.example.Customer> customerList9 = rentalSystem0.getCustomers();
        java.lang.String str11 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.");
        java.lang.String str15 = rentalSystem0.rentVehicle("Vehicle with ID No vehicles match the keyword \"\". not found.", "ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n", (int) (short) -1);
        java.util.List<org.example.Customer> customerList16 = rentalSystem0.getCustomers();
        // The following exception was thrown during execution in test generation
        try {
            rentalSystem0.addVehicle("", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\". not found.\". not found. not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\".", (double) 100L);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Vehicle ID cannot be null or empty");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID  not found." + "'", str8, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList9);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found." + "'", str11, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found.");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found." + "'", str15, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found.");
        org.junit.Assert.assertNotNull(customerList16);
    }

    @Test
    public void test1225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1225");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("");
        rentalSystem0.addVehicle("Vehicle with ID  not found.", "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.", "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.", (double) (short) 0);
        java.util.List<org.example.Customer> customerList9 = rentalSystem0.getCustomers();
        java.lang.String str13 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\". not found. not found. not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\". not found.", (int) '#');
        java.util.List<org.example.Customer> customerList14 = rentalSystem0.getCustomers();
        java.lang.String str16 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\".\". not found. not found. not found.");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID  not found." + "'", str3, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList9);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\". not found. not found. not found. not found." + "'", str13, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\". not found. not found. not found. not found.");
        org.junit.Assert.assertNotNull(customerList14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\".\". not found. not found. not found. not found." + "'", str16, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\".\". not found. not found. not found. not found.");
    }

    @Test
    public void test1226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1226");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.searchVehicle("No vehicles match the keyword \"hi!\".");
        java.lang.String str10 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.");
        java.lang.String str12 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\". not found. not found. not found. not found.\". not found.");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\"." + "'", str8, "No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.\"." + "'", str10, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.\".");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\". not found. not found. not found. not found.\". not found. not found." + "'", str12, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\". not found. not found. not found. not found.\". not found. not found.");
    }

    @Test
    public void test1227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1227");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID  not found.\".", "hi!");
        rentalSystem0.addCustomer("No vehicles match the keyword \"hi!\".", "hi!");
        java.lang.String str14 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        java.util.List<org.example.Vehicle> vehicleList15 = rentalSystem0.getVehicles();
        java.lang.String str17 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.");
        int int18 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found. not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\". not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.\". not found.", (double) 1.0f);
        java.util.List<org.example.Customer> customerList24 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList25 = rentalSystem0.getCustomers();
        java.lang.String str29 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\". not found. not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found.\".", (int) (short) 10);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found." + "'", str14, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found." + "'", str17, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(customerList24);
        org.junit.Assert.assertNotNull(customerList25);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\". not found. not found. not found. not found." + "'", str29, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\". not found. not found. not found. not found.");
    }

    @Test
    public void test1228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1228");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID  not found.", 100);
        java.lang.String str12 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID  not found.\".", "Vehicle with ID Vehicle with ID hi! not found. not found.", (int) (short) -1);
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\". not found.", "No vehicles match the keyword \"Vehicle with ID  not found.\".", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.\".", (double) (short) 1);
        java.lang.String str19 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found.");
        java.lang.String str21 = rentalSystem0.searchVehicle("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\".\".");
        java.lang.String str23 = rentalSystem0.returnVehicle("");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found." + "'", str12, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found.\"." + "'", str19, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found.\".");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\".\".\"." + "'", str21, "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\".\".\".");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Vehicle with ID  not found." + "'", str23, "Vehicle with ID  not found.");
    }

    @Test
    public void test1229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1229");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        int int7 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList8 = rentalSystem0.getCustomers();
        java.lang.String str10 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found.");
        java.util.List<org.example.Customer> customerList11 = rentalSystem0.getCustomers();
        int int12 = rentalSystem0.getAvailableVehicleCount();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(customerList8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found.\"." + "'", str10, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found.\".");
        org.junit.Assert.assertNotNull(customerList11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
    }

    @Test
    public void test1230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1230");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID  not found. not found.", "No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        java.util.List<org.example.Vehicle> vehicleList5 = rentalSystem0.getVehicles();
        java.lang.String str9 = rentalSystem0.rentVehicle("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\".\".\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.\". not found. not found.", 1);
        java.lang.Class<?> wildcardClass10 = rentalSystem0.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\".\".\". not found." + "'", str9, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\".\".\". not found.");
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test1231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1231");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        rentalSystem0.addCustomer("hi!", "Vehicle with ID Vehicle with ID  not found. not found.");
        java.util.List<org.example.Vehicle> vehicleList9 = rentalSystem0.getVehicles();
        int int10 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList11 = rentalSystem0.getCustomers();
        java.lang.String str13 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found. not found. not found.");
        java.lang.Class<?> wildcardClass14 = rentalSystem0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(customerList11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found. not found. not found.\"." + "'", str13, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found. not found. not found.\".");
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test1232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1232");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList4 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID  not found. not found.", "hi!");
        java.lang.String str9 = rentalSystem0.returnVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\". not found. not found.\".\".");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(vehicleList4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\". not found. not found.\".\". not found." + "'", str9, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\". not found. not found.\".\". not found.");
    }

    @Test
    public void test1233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1233");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        int int7 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList8 = rentalSystem0.getCustomers();
        java.lang.String str10 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        java.lang.String str12 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"\". not found.");
        java.lang.String str14 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.\". not found. not found. not found. not found. not found.");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(customerList8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found." + "'", str10, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\"." + "'", str12, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.\". not found. not found. not found. not found. not found.\"." + "'", str14, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.\". not found. not found. not found. not found. not found.\".");
    }

    @Test
    public void test1234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1234");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.returnVehicle("Vehicle with ID  not found.");
        java.lang.String str12 = rentalSystem0.rentVehicle("Vehicle with ID hi! not found.", "Vehicle with ID Vehicle with ID  not found. not found.", (int) (byte) 10);
        java.lang.String str14 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        java.util.List<org.example.Vehicle> vehicleList15 = rentalSystem0.getVehicles();
        java.lang.String str19 = rentalSystem0.rentVehicle("", "Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.", (int) (byte) 100);
        java.util.List<org.example.Customer> customerList20 = rentalSystem0.getCustomers();
        java.lang.String str22 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found. not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID  not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID  not found. not found.");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID Vehicle with ID hi! not found. not found." + "'", str12, "Vehicle with ID Vehicle with ID hi! not found. not found.");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found." + "'", str14, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList15);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Vehicle with ID  not found." + "'", str19, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found. not found. not found. not found." + "'", str22, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found. not found. not found. not found.");
    }

    @Test
    public void test1235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1235");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        int int7 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList8 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList9 = rentalSystem0.getVehicles();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(customerList8);
        org.junit.Assert.assertNotNull(vehicleList9);
    }

    @Test
    public void test1236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1236");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList5 = rentalSystem0.getVehicles();
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".", (double) 1.0f);
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found. not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\". not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertNotNull(vehicleList5);
    }

    @Test
    public void test1237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1237");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.returnVehicle("");
        int int9 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList10 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList11 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList12 = rentalSystem0.getCustomers();
        java.lang.String str14 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.");
        rentalSystem0.addCustomer("Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found.", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\". not found. not found. not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID  not found." + "'", str8, "Vehicle with ID  not found.");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(customerList10);
        org.junit.Assert.assertNotNull(customerList11);
        org.junit.Assert.assertNotNull(customerList12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found." + "'", str14, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.");
    }

    @Test
    public void test1238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1238");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("hi!");
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        int int5 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str7 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found.\". not found.");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID hi! not found." + "'", str3, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found.\". not found.\"." + "'", str7, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found.\". not found.\".");
    }

    @Test
    public void test1239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1239");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID  not found. not found.", "No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        java.util.List<org.example.Vehicle> vehicleList5 = rentalSystem0.getVehicles();
        java.lang.String str9 = rentalSystem0.rentVehicle("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\".\".\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.\". not found. not found.", 1);
        java.lang.String str13 = rentalSystem0.rentVehicle("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\".\".\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found. not found.\".", (int) (byte) 1);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\".\".\". not found." + "'", str9, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\".\".\". not found.");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\".\".\". not found." + "'", str13, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\".\".\". not found.");
    }

    @Test
    public void test1240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1240");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        java.lang.String str7 = rentalSystem0.searchVehicle("Vehicle with ID hi! not found.");
        java.util.List<org.example.Customer> customerList8 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"\".", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.\".\". not found.");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "No vehicles match the keyword \"Vehicle with ID hi! not found.\"." + "'", str7, "No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        org.junit.Assert.assertNotNull(customerList8);
    }

    @Test
    public void test1241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1241");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.lang.String str7 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".");
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID  not found.");
        int int11 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found.", "Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.");
        java.lang.String str18 = rentalSystem0.rentVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found. not found.\". not found.", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\".\".", (int) (short) 0);
        java.util.List<org.example.Customer> customerList19 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\". not found.\".", "Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found.");
        java.util.List<org.example.Customer> customerList23 = rentalSystem0.getCustomers();
        int int24 = rentalSystem0.getAvailableVehicleCount();
        int int25 = rentalSystem0.getAvailableVehicleCount();
        int int26 = rentalSystem0.getAvailableVehicleCount();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\"." + "'", str7, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found. not found.\". not found. not found." + "'", str18, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found. not found.\". not found. not found.");
        org.junit.Assert.assertNotNull(customerList19);
        org.junit.Assert.assertNotNull(customerList23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
    }

    @Test
    public void test1242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1242");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.searchVehicle("Vehicle with ID  not found.");
        rentalSystem0.addVehicle("hi!", "Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID hi! not found.", (double) 0);
        java.lang.String str15 = rentalSystem0.returnVehicle("Vehicle with ID  not found.");
        java.util.List<org.example.Customer> customerList16 = rentalSystem0.getCustomers();
        java.lang.String str18 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.");
        java.util.List<org.example.Customer> customerList19 = rentalSystem0.getCustomers();
        int int20 = rentalSystem0.getAvailableVehicleCount();
        java.lang.Class<?> wildcardClass21 = rentalSystem0.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "No vehicles match the keyword \"Vehicle with ID  not found.\"." + "'", str8, "No vehicles match the keyword \"Vehicle with ID  not found.\".");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Vehicle with ID Vehicle with ID  not found. not found." + "'", str15, "Vehicle with ID Vehicle with ID  not found. not found.");
        org.junit.Assert.assertNotNull(customerList16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\"." + "'", str18, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".");
        org.junit.Assert.assertNotNull(customerList19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test1243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1243");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID  not found.\".", "hi!");
        int int10 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str12 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID  not found. not found.");
        java.lang.String str14 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.");
        java.util.List<org.example.Customer> customerList15 = rentalSystem0.getCustomers();
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\". not found.\". not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\". not found. not found.", (double) 'a');
        java.util.List<org.example.Customer> customerList21 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".\".", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".\".\".");
        java.lang.String str26 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found. not found.\".");
        // The following exception was thrown during execution in test generation
        try {
            rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found. not found.\".", "", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found. not found. not found. not found.", (double) 10L);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Model cannot be null or empty");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str12, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\"." + "'", str14, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".");
        org.junit.Assert.assertNotNull(customerList15);
        org.junit.Assert.assertNotNull(customerList21);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found. not found.\".\"." + "'", str26, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found. not found.\".\".");
    }

    @Test
    public void test1244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1244");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID  not found. not found.", "No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        java.lang.String str8 = rentalSystem0.rentVehicle("hi!", "No vehicles match the keyword \"Vehicle with ID  not found.\".", 100);
        int int9 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str11 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found.");
        java.util.List<org.example.Vehicle> vehicleList12 = rentalSystem0.getVehicles();
        java.lang.String str14 = rentalSystem0.returnVehicle("");
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found. not found. not found.", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found.");
        int int18 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str20 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\".");
        java.util.List<org.example.Vehicle> vehicleList21 = rentalSystem0.getVehicles();
        java.lang.String str23 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.");
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n\".\".\". not found. not found. not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\". not found. not found. not found. not found.\". not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\". not found.\". not found.\". not found.", (double) 3);
        java.util.List<org.example.Customer> customerList29 = rentalSystem0.getCustomers();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID hi! not found." + "'", str8, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found.\"." + "'", str11, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found.\".");
        org.junit.Assert.assertNotNull(vehicleList12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID  not found." + "'", str14, "Vehicle with ID  not found.");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found." + "'", str20, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found. not found." + "'", str23, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found. not found.");
        org.junit.Assert.assertNotNull(customerList29);
    }

    @Test
    public void test1245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1245");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID  not found.\".", "hi!");
        int int10 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str12 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID  not found. not found.");
        java.lang.String str16 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.", (int) 'a');
        java.lang.String str20 = rentalSystem0.rentVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found.", (int) (byte) -1);
        java.util.List<org.example.Vehicle> vehicleList21 = rentalSystem0.getVehicles();
        java.lang.String str23 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found. not found.\".");
        java.lang.String str25 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.");
        java.lang.String str27 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found. not found.");
        java.lang.String str31 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\". not found. not found. not found.\".", "", (int) (short) 10);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str12, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found." + "'", str16, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found." + "'", str20, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found. not found.\". not found." + "'", str23, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found. not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\"." + "'", str25, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\".");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found. not found. not found." + "'", str27, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\". not found. not found. not found.\". not found." + "'", str31, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\". not found. not found. not found.\". not found.");
    }

    @Test
    public void test1246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1246");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.returnVehicle("");
        java.util.List<org.example.Customer> customerList9 = rentalSystem0.getCustomers();
        java.lang.String str11 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.");
        rentalSystem0.addCustomer("Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\". not found.\". not found.", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".");
        java.lang.String str18 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\".\". not found.\".", "Vehicle with ID ID: No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\".\"., Model: No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.\"., Type: Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found., Daily Rate: $10.0, Status: Available\n not found.", (int) (short) 10);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID  not found." + "'", str8, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList9);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found." + "'", str11, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found.");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\".\". not found.\". not found." + "'", str18, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\".\". not found.\". not found.");
    }

    @Test
    public void test1247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1247");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        int int7 = rentalSystem0.getAvailableVehicleCount();
        int int8 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Vehicle> vehicleList9 = rentalSystem0.getVehicles();
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found. not found. not found.\". not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found.\".\".", "Vehicle with ID No vehicles match the keyword \"hi!\". not found.", (double) 10.0f);
        java.util.List<org.example.Vehicle> vehicleList15 = rentalSystem0.getVehicles();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(vehicleList9);
        org.junit.Assert.assertNotNull(vehicleList15);
    }

    @Test
    public void test1248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1248");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList7 = rentalSystem0.getVehicles();
        java.lang.String str11 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID hi! not found.\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.", (int) (byte) 100);
        int int12 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Vehicle> vehicleList13 = rentalSystem0.getVehicles();
        java.lang.String str15 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\".");
        int int16 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Vehicle> vehicleList17 = rentalSystem0.getVehicles();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertNotNull(vehicleList7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found." + "'", str11, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(vehicleList13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found." + "'", str15, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(vehicleList17);
    }

    @Test
    public void test1249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1249");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.", "Vehicle with ID Vehicle with ID hi! not found. not found.", "No vehicles match the keyword \"hi!\".", (double) 1L);
        java.lang.String str13 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"hi!\". not found.");
        java.lang.String str17 = rentalSystem0.rentVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found.", (int) '4');
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.\". not found.", "No vehicles match the keyword \"\".", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found.\".", (double) 100.0f);
        java.lang.String str26 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".", 10);
        java.lang.Class<?> wildcardClass27 = rentalSystem0.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\"." + "'", str13, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\".");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found." + "'", str17, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found." + "'", str26, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.");
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test1250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1250");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.searchVehicle("Vehicle with ID  not found.");
        rentalSystem0.addVehicle("hi!", "Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID hi! not found.", (double) 0);
        rentalSystem0.addCustomer("Vehicle with ID hi! not found.", "hi!");
        java.lang.String str18 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.");
        java.lang.String str20 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.");
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.", "Vehicle with ID  not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\". not found. not found.", (double) (short) 100);
        int int26 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str28 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\". not found.\". not found.");
        java.lang.String str30 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\".");
        int int31 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\". not found. not found. not found.\".", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\".\".\". not found. not found. not found.");
        java.lang.Class<?> wildcardClass35 = rentalSystem0.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "No vehicles match the keyword \"Vehicle with ID  not found.\"." + "'", str8, "No vehicles match the keyword \"Vehicle with ID  not found.\".");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\"." + "'", str18, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\".");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.\"." + "'", str20, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.\".");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 2 + "'", int26 == 2);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\". not found.\". not found. not found." + "'", str28, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\". not found.\". not found. not found.");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found." + "'", str30, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2 + "'", int31 == 2);
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test1251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1251");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID  not found. not found.", "No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        java.lang.String str8 = rentalSystem0.rentVehicle("hi!", "No vehicles match the keyword \"Vehicle with ID  not found.\".", 100);
        int int9 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str11 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found.");
        java.util.List<org.example.Vehicle> vehicleList12 = rentalSystem0.getVehicles();
        java.lang.String str14 = rentalSystem0.returnVehicle("");
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found. not found. not found.", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found.");
        int int18 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str20 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\".");
        java.lang.Class<?> wildcardClass21 = rentalSystem0.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID hi! not found." + "'", str8, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found.\"." + "'", str11, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found.\".");
        org.junit.Assert.assertNotNull(vehicleList12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID  not found." + "'", str14, "Vehicle with ID  not found.");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found." + "'", str20, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.");
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test1252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1252");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.searchVehicle("Vehicle with ID  not found.");
        rentalSystem0.addVehicle("hi!", "Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID hi! not found.", (double) 0);
        java.util.List<org.example.Vehicle> vehicleList14 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList15 = rentalSystem0.getCustomers();
        int int16 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.");
        java.lang.String str23 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\". not found.\". not found. not found.\".", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found.\".\".\".", (int) (short) -1);
        java.lang.Class<?> wildcardClass24 = rentalSystem0.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "No vehicles match the keyword \"Vehicle with ID  not found.\"." + "'", str8, "No vehicles match the keyword \"Vehicle with ID  not found.\".");
        org.junit.Assert.assertNotNull(vehicleList14);
        org.junit.Assert.assertNotNull(customerList15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\". not found.\". not found. not found.\". not found." + "'", str23, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\". not found.\". not found. not found.\". not found.");
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test1253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1253");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("");
        rentalSystem0.addVehicle("Vehicle with ID  not found.", "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.", "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.", (double) (short) 0);
        java.lang.String str10 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"hi!\". not found.");
        int int11 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str13 = rentalSystem0.returnVehicle("Vehicle with ID  not found.");
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.\". not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found. not found.\".", (double) 1.0f);
        rentalSystem0.addVehicle("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\".\".\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found.\".", "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.", (double) 10L);
        java.lang.String str25 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.");
        int int26 = rentalSystem0.getAvailableVehicleCount();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID  not found." + "'", str3, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found." + "'", str10, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle is already available." + "'", str13, "Vehicle is already available.");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\"." + "'", str25, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 3 + "'", int26 == 3);
    }

    @Test
    public void test1254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1254");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.returnVehicle("Vehicle with ID  not found.");
        java.lang.String str10 = rentalSystem0.returnVehicle("hi!");
        java.lang.String str12 = rentalSystem0.searchVehicle("");
        rentalSystem0.addCustomer("Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".");
        java.lang.String str17 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".");
        java.lang.String str19 = rentalSystem0.searchVehicle("");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID  not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID  not found. not found.");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID hi! not found." + "'", str10, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "No vehicles match the keyword \"\"." + "'", str12, "No vehicles match the keyword \"\".");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\". not found." + "'", str17, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "No vehicles match the keyword \"\"." + "'", str19, "No vehicles match the keyword \"\".");
    }

    @Test
    public void test1255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1255");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("");
        int int4 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Vehicle> vehicleList5 = rentalSystem0.getVehicles();
        java.lang.String str7 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.");
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".", "Vehicle with ID hi! not found.");
        int int11 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found. not found.\".");
        rentalSystem0.addCustomer("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.\".");
        java.util.List<org.example.Customer> customerList18 = rentalSystem0.getCustomers();
        java.lang.String str20 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found. not found.");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID  not found." + "'", str3, "Vehicle with ID  not found.");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(vehicleList5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.\"." + "'", str7, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.\".");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(customerList18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found. not found.\"." + "'", str20, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found. not found.\".");
    }

    @Test
    public void test1256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1256");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList5 = rentalSystem0.getVehicles();
        java.lang.String str9 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".", "No vehicles match the keyword \"Vehicle with ID  not found.\".", (int) ' ');
        java.lang.String str13 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID  not found. not found.", "", (int) (byte) -1);
        int int14 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str16 = rentalSystem0.searchVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\".");
        java.util.List<org.example.Vehicle> vehicleList17 = rentalSystem0.getVehicles();
        java.lang.Class<?> wildcardClass18 = rentalSystem0.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertNotNull(vehicleList5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found." + "'", str9, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str13, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\".\"." + "'", str16, "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\".\".");
        org.junit.Assert.assertNotNull(vehicleList17);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test1257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1257");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.");
        rentalSystem0.addCustomer("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\".");
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\".", "No vehicles match the keyword \"Vehicle with ID hi! not found.\".", (double) (short) 100);
        java.util.List<org.example.Customer> customerList18 = rentalSystem0.getCustomers();
        int int19 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList20 = rentalSystem0.getCustomers();
        java.lang.Class<?> wildcardClass21 = customerList20.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertNotNull(customerList18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(customerList20);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test1258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1258");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.searchVehicle("Vehicle with ID  not found.");
        rentalSystem0.addVehicle("hi!", "Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID hi! not found.", (double) 0);
        java.util.List<org.example.Vehicle> vehicleList14 = rentalSystem0.getVehicles();
        java.lang.String str16 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\". not found.");
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.\".", "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.");
        java.util.List<org.example.Customer> customerList20 = rentalSystem0.getCustomers();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "No vehicles match the keyword \"Vehicle with ID  not found.\"." + "'", str8, "No vehicles match the keyword \"Vehicle with ID  not found.\".");
        org.junit.Assert.assertNotNull(vehicleList14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\". not found.\"." + "'", str16, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\". not found.\".");
        org.junit.Assert.assertNotNull(customerList20);
    }

    @Test
    public void test1259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1259");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.returnVehicle("");
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".", "No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".");
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".\".", "ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n");
        java.lang.String str16 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.");
        java.lang.String str18 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.");
        java.util.List<org.example.Customer> customerList19 = rentalSystem0.getCustomers();
        // The following exception was thrown during execution in test generation
        try {
            rentalSystem0.addCustomer("", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found.\". not found. not found. not found.");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Name cannot be null or empty");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID  not found." + "'", str8, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found." + "'", str16, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found. not found." + "'", str18, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found. not found.");
        org.junit.Assert.assertNotNull(customerList19);
    }

    @Test
    public void test1260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1260");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("");
        rentalSystem0.addVehicle("Vehicle with ID  not found.", "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.", "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.", (double) (short) 0);
        java.util.List<org.example.Customer> customerList9 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList10 = rentalSystem0.getVehicles();
        java.lang.String str14 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.\". not found.", 0);
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\". not found. not found. not found. not found.", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".\". not found. not found. not found.");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID  not found." + "'", str3, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList9);
        org.junit.Assert.assertNotNull(vehicleList10);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.\". not found." + "'", str14, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.\". not found.");
    }

    @Test
    public void test1261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1261");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID  not found.\".", "hi!");
        int int10 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str12 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID  not found. not found.");
        int int13 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str15 = rentalSystem0.searchVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\".");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str12, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\".\"." + "'", str15, "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\".\".");
    }

    @Test
    public void test1262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1262");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        int int2 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        int int4 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".", "No vehicles match the keyword \"Vehicle with ID  not found.\".");
        int int8 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str10 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\".");
        java.util.List<org.example.Vehicle> vehicleList11 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList12 = rentalSystem0.getVehicles();
        java.lang.String str16 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\". not found. not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\".\".", 10);
        java.lang.String str18 = rentalSystem0.returnVehicle("");
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".", 1.0d);
        java.util.List<org.example.Customer> customerList24 = rentalSystem0.getCustomers();
        java.lang.String str28 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\". not found. not found.", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\". not found.\".", 100);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found." + "'", str10, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList11);
        org.junit.Assert.assertNotNull(vehicleList12);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\". not found. not found. not found." + "'", str16, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\". not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Vehicle with ID  not found." + "'", str18, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList24);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\". not found. not found. not found." + "'", str28, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\". not found. not found. not found.");
    }

    @Test
    public void test1263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1263");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.lang.String str5 = rentalSystem0.returnVehicle("Vehicle with ID  not found.");
        java.lang.String str7 = rentalSystem0.searchVehicle("Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.");
        java.lang.String str9 = rentalSystem0.searchVehicle("hi!");
        rentalSystem0.addCustomer("hi!", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\". not found.");
        java.lang.String str16 = rentalSystem0.rentVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\".", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\".\".", (int) (short) 10);
        java.lang.String str18 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found.");
        java.lang.String str22 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\".", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".\".\". not found.", (int) '4');
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found.\".\".\". not found. not found.", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\".\".\".");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID Vehicle with ID  not found. not found." + "'", str5, "Vehicle with ID Vehicle with ID  not found. not found.");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\"." + "'", str7, "No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "No vehicles match the keyword \"hi!\"." + "'", str9, "No vehicles match the keyword \"hi!\".");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\". not found." + "'", str16, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\". not found.");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found." + "'", str18, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found." + "'", str22, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found.");
    }

    @Test
    public void test1264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1264");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        rentalSystem0.addCustomer("hi!", "Vehicle with ID Vehicle with ID  not found. not found.");
        java.util.List<org.example.Vehicle> vehicleList9 = rentalSystem0.getVehicles();
        java.lang.String str13 = rentalSystem0.rentVehicle("hi!", "No vehicles match the keyword \"Vehicle with ID  not found.\".", (int) '4');
        java.util.List<org.example.Customer> customerList14 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList15 = rentalSystem0.getVehicles();
        java.lang.String str19 = rentalSystem0.rentVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found. not found. not found. not found.\". not found.", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found. not found. not found. not found.", 0);
        java.util.List<org.example.Customer> customerList20 = rentalSystem0.getCustomers();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList9);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID hi! not found." + "'", str13, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertNotNull(customerList14);
        org.junit.Assert.assertNotNull(vehicleList15);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found. not found. not found. not found.\". not found. not found." + "'", str19, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found. not found. not found. not found.\". not found. not found.");
        org.junit.Assert.assertNotNull(customerList20);
    }

    @Test
    public void test1265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1265");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID  not found.\".", "hi!");
        int int10 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList11 = rentalSystem0.getCustomers();
        java.lang.String str13 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.");
        java.lang.String str15 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".");
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.\". not found. not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\".\".", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\". not found.\".", (double) (byte) 100);
        java.util.List<org.example.Customer> customerList21 = rentalSystem0.getCustomers();
        java.lang.String str23 = rentalSystem0.searchVehicle("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.\". not found.\".\".\".");
        java.lang.String str25 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(customerList11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\"." + "'", str13, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found." + "'", str15, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found.");
        org.junit.Assert.assertNotNull(customerList21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.\". not found.\".\".\".\"." + "'", str23, "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.\". not found.\".\".\".\".");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.\". not found.\"." + "'", str25, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.\". not found.\".");
    }

    @Test
    public void test1266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1266");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("");
        int int4 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Vehicle> vehicleList5 = rentalSystem0.getVehicles();
        java.lang.String str7 = rentalSystem0.searchVehicle("hi!");
        java.util.List<org.example.Vehicle> vehicleList8 = rentalSystem0.getVehicles();
        java.lang.String str10 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.");
        java.lang.String str12 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"\".\". not found. not found.");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID  not found." + "'", str3, "Vehicle with ID  not found.");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(vehicleList5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "No vehicles match the keyword \"hi!\"." + "'", str7, "No vehicles match the keyword \"hi!\".");
        org.junit.Assert.assertNotNull(vehicleList8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found." + "'", str10, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"\".\". not found. not found.\"." + "'", str12, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"\".\". not found. not found.\".");
    }

    @Test
    public void test1267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1267");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID  not found.\".", "hi!");
        int int10 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList11 = rentalSystem0.getCustomers();
        java.lang.String str13 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.");
        int int14 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str16 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.\".");
        java.lang.String str18 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\". not found.\".");
        java.util.List<org.example.Vehicle> vehicleList19 = rentalSystem0.getVehicles();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(customerList11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\"." + "'", str13, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.\". not found." + "'", str16, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\". not found.\".\"." + "'", str18, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\". not found.\".\".");
        org.junit.Assert.assertNotNull(vehicleList19);
    }

    @Test
    public void test1268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1268");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.lang.String str9 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.", (int) (byte) 1);
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID  not found. not found.", "No vehicles match the keyword \"\".", "Vehicle with ID  not found.", (double) 1L);
        java.lang.String str16 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\". not found.");
        java.lang.String str18 = rentalSystem0.returnVehicle("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\".");
        rentalSystem0.addVehicle("hi!", "No vehicles match the keyword \"ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n\".", "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.", (double) 3);
        java.lang.String str27 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\".", (int) (byte) 100);
        int int28 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found. not found. not found.\". not found.\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\". not found. not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found.", (double) (short) 10);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found." + "'", str9, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\". not found.\"." + "'", str16, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\". not found.\".");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\". not found." + "'", str18, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\". not found.");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found." + "'", str27, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 2 + "'", int28 == 2);
    }

    @Test
    public void test1269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1269");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.returnVehicle("Vehicle with ID  not found.");
        java.lang.String str12 = rentalSystem0.rentVehicle("Vehicle with ID hi! not found.", "Vehicle with ID Vehicle with ID  not found. not found.", (int) (byte) 10);
        java.lang.String str14 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        java.util.List<org.example.Vehicle> vehicleList15 = rentalSystem0.getVehicles();
        java.lang.String str19 = rentalSystem0.rentVehicle("", "Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.", (int) (byte) 100);
        java.util.List<org.example.Customer> customerList20 = rentalSystem0.getCustomers();
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\". not found.\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found. not found.\".", 0.0d);
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\". not found.\". not found.\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found. not found.\". not found. not found. not found.\".");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID  not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID  not found. not found.");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID Vehicle with ID hi! not found. not found." + "'", str12, "Vehicle with ID Vehicle with ID hi! not found. not found.");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found." + "'", str14, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList15);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Vehicle with ID  not found." + "'", str19, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList20);
    }

    @Test
    public void test1270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1270");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.returnVehicle("");
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".", "No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".");
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".\".", "ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n");
        java.lang.String str16 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.");
        java.lang.String str18 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found.\".");
        java.lang.Class<?> wildcardClass19 = rentalSystem0.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID  not found." + "'", str8, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found." + "'", str16, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found.\". not found." + "'", str18, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found.\". not found.");
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test1271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1271");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        int int7 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addCustomer("hi!", "Vehicle with ID Vehicle with ID  not found. not found.");
        int int11 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str13 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.");
        java.util.List<org.example.Customer> customerList14 = rentalSystem0.getCustomers();
        java.lang.String str16 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID  not found.\".\".\". not found.\".");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\"." + "'", str13, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".");
        org.junit.Assert.assertNotNull(customerList14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID  not found.\".\".\". not found.\". not found." + "'", str16, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID  not found.\".\".\". not found.\". not found.");
    }

    @Test
    public void test1272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1272");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("hi!");
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        int int5 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str9 = rentalSystem0.rentVehicle("No vehicles match the keyword \"\".", "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.", (int) (short) 10);
        java.lang.String str13 = rentalSystem0.rentVehicle("No vehicles match the keyword \"\".", "", (-1));
        int int14 = rentalSystem0.getAvailableVehicleCount();
        int int15 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str17 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found.");
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\". not found. not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\". not found.");
        java.lang.String str22 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found.");
        java.lang.String str24 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found.\".");
        java.lang.Class<?> wildcardClass25 = rentalSystem0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID hi! not found." + "'", str3, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Vehicle with ID No vehicles match the keyword \"\". not found." + "'", str9, "Vehicle with ID No vehicles match the keyword \"\". not found.");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID No vehicles match the keyword \"\". not found." + "'", str13, "Vehicle with ID No vehicles match the keyword \"\". not found.");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found." + "'", str17, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found.\"." + "'", str22, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found.\".");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found.\".\"." + "'", str24, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found.\".\".");
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test1273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1273");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        int int7 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str9 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID  not found.\".");
        java.lang.String str13 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID hi! not found. not found.", "Vehicle with ID Vehicle with ID  not found. not found.", 100);
        rentalSystem0.addVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\".\".", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.", (double) (short) 1);
        int int19 = rentalSystem0.getAvailableVehicleCount();
        // The following exception was thrown during execution in test generation
        try {
            rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found.\".\". not found. not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found.\". not found.\". not found.", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\". not found.\".", (double) (-1.0f));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Daily rate cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found." + "'", str9, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found." + "'", str13, "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
    }

    @Test
    public void test1274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1274");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID  not found. not found.", "No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        java.lang.String str8 = rentalSystem0.rentVehicle("hi!", "No vehicles match the keyword \"Vehicle with ID  not found.\".", 100);
        int int9 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str11 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found.");
        java.util.List<org.example.Vehicle> vehicleList12 = rentalSystem0.getVehicles();
        java.lang.String str14 = rentalSystem0.returnVehicle("");
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found. not found. not found.", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found.");
        java.util.List<org.example.Customer> customerList18 = rentalSystem0.getCustomers();
        java.lang.Class<?> wildcardClass19 = customerList18.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID hi! not found." + "'", str8, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found.\"." + "'", str11, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found.\".");
        org.junit.Assert.assertNotNull(vehicleList12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID  not found." + "'", str14, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList18);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test1275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1275");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        int int7 = rentalSystem0.getAvailableVehicleCount();
        int int8 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Vehicle> vehicleList9 = rentalSystem0.getVehicles();
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found. not found. not found.\". not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found.\".\".", "Vehicle with ID No vehicles match the keyword \"hi!\". not found.", (double) 10.0f);
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.\".", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\".", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found.\".\".", (double) (byte) 10);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(vehicleList9);
    }

    @Test
    public void test1276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1276");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.lang.String str7 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".");
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID  not found.");
        int int11 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found.", "Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.");
        java.lang.String str18 = rentalSystem0.rentVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found. not found.\". not found.", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\".\".", (int) (short) 0);
        java.util.List<org.example.Customer> customerList19 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\". not found.\".", "Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found.");
        java.util.List<org.example.Customer> customerList23 = rentalSystem0.getCustomers();
        int int24 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found. not found.\".", "Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.");
        java.lang.String str31 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".\". not found. not found.", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found.\".\". not found.", (int) (byte) -1);
        java.lang.Class<?> wildcardClass32 = rentalSystem0.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\"." + "'", str7, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found. not found.\". not found. not found." + "'", str18, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found. not found.\". not found. not found.");
        org.junit.Assert.assertNotNull(customerList19);
        org.junit.Assert.assertNotNull(customerList23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".\". not found. not found. not found." + "'", str31, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".\". not found. not found. not found.");
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test1277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1277");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("hi!");
        rentalSystem0.addCustomer("ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n", "No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".");
        java.lang.String str10 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".", (int) (byte) 1);
        java.lang.String str12 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found. not found. not found.\". not found.");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID hi! not found." + "'", str3, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found. not found." + "'", str10, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found. not found. not found.\". not found. not found." + "'", str12, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found. not found. not found.\". not found. not found.");
    }

    @Test
    public void test1278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1278");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        int int7 = rentalSystem0.getAvailableVehicleCount();
        int int8 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList9 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList10 = rentalSystem0.getCustomers();
        java.lang.String str14 = rentalSystem0.rentVehicle("Vehicle with ID hi! not found.", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\". not found.", (int) '4');
        java.util.List<org.example.Customer> customerList15 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList16 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList17 = rentalSystem0.getVehicles();
        java.lang.Class<?> wildcardClass18 = rentalSystem0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(customerList9);
        org.junit.Assert.assertNotNull(customerList10);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID Vehicle with ID hi! not found. not found." + "'", str14, "Vehicle with ID Vehicle with ID hi! not found. not found.");
        org.junit.Assert.assertNotNull(customerList15);
        org.junit.Assert.assertNotNull(customerList16);
        org.junit.Assert.assertNotNull(vehicleList17);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test1279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1279");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList4 = rentalSystem0.getVehicles();
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.", "ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.", (double) (byte) 100);
        rentalSystem0.addVehicle("Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.", "Vehicle with ID hi! not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found.", 10.0d);
        java.lang.String str16 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.");
        int int17 = rentalSystem0.getAvailableVehicleCount();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(vehicleList4);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\"." + "'", str16, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2 + "'", int17 == 2);
    }

    @Test
    public void test1280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1280");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.searchVehicle("Vehicle with ID  not found.");
        rentalSystem0.addVehicle("hi!", "Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID hi! not found.", (double) 0);
        java.lang.String str15 = rentalSystem0.returnVehicle("Vehicle with ID  not found.");
        java.util.List<org.example.Customer> customerList16 = rentalSystem0.getCustomers();
        java.lang.String str18 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.");
        java.util.List<org.example.Customer> customerList19 = rentalSystem0.getCustomers();
        int int20 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str24 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found. not found. not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found.\". not found.", 3);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "No vehicles match the keyword \"Vehicle with ID  not found.\"." + "'", str8, "No vehicles match the keyword \"Vehicle with ID  not found.\".");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Vehicle with ID Vehicle with ID  not found. not found." + "'", str15, "Vehicle with ID Vehicle with ID  not found. not found.");
        org.junit.Assert.assertNotNull(customerList16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\"." + "'", str18, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".");
        org.junit.Assert.assertNotNull(customerList19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found. not found. not found. not found." + "'", str24, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found. not found. not found. not found.");
    }

    @Test
    public void test1281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1281");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        int int2 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Vehicle> vehicleList3 = rentalSystem0.getVehicles();
        int int4 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str6 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.");
        java.util.List<org.example.Customer> customerList7 = rentalSystem0.getCustomers();
        int int8 = rentalSystem0.getAvailableVehicleCount();
        // The following exception was thrown during execution in test generation
        try {
            rentalSystem0.addVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found. not found.", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found. not found. not found. not found.", (double) (-1L));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Daily rate cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(vehicleList3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found." + "'", str6, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found.");
        org.junit.Assert.assertNotNull(customerList7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
    }

    @Test
    public void test1282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1282");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.returnVehicle("Vehicle with ID  not found.");
        int int9 = rentalSystem0.getAvailableVehicleCount();
        int int10 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Vehicle> vehicleList11 = rentalSystem0.getVehicles();
        int int12 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\".\". not found.", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\".\".\". not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.\".\".", (double) 2);
        java.lang.Class<?> wildcardClass18 = rentalSystem0.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID  not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID  not found. not found.");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(vehicleList11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test1283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1283");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.", "Vehicle with ID Vehicle with ID hi! not found. not found.", "No vehicles match the keyword \"hi!\".", (double) 1L);
        java.lang.String str13 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"hi!\". not found.");
        java.util.List<org.example.Customer> customerList14 = rentalSystem0.getCustomers();
        java.lang.Class<?> wildcardClass15 = customerList14.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\"." + "'", str13, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\".");
        org.junit.Assert.assertNotNull(customerList14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test1284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1284");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        int int2 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Vehicle> vehicleList3 = rentalSystem0.getVehicles();
        int int4 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Vehicle> vehicleList5 = rentalSystem0.getVehicles();
        int int6 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str8 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\".\". not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(vehicleList3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(vehicleList5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\".\". not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\".\". not found. not found.");
    }

    @Test
    public void test1285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1285");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.", "Vehicle with ID Vehicle with ID hi! not found. not found.", "No vehicles match the keyword \"hi!\".", (double) 1L);
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found. not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.");
        int int15 = rentalSystem0.getAvailableVehicleCount();
        int int16 = rentalSystem0.getAvailableVehicleCount();
        int int17 = rentalSystem0.getAvailableVehicleCount();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
    }

    @Test
    public void test1286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1286");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID  not found.", 100);
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\". not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\". not found.", "No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".", (double) (byte) 1);
        java.lang.String str15 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found. not found.");
        // The following exception was thrown during execution in test generation
        try {
            rentalSystem0.addVehicle("", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\". not found. not found. not found.\". not found.\".", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\". not found. not found. not found. not found.", (double) 0L);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Vehicle ID cannot be null or empty");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found. not found. not found." + "'", str15, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found. not found. not found.");
    }

    @Test
    public void test1287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1287");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.returnVehicle("Vehicle with ID  not found.");
        java.lang.String str10 = rentalSystem0.returnVehicle("hi!");
        java.lang.String str14 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID hi! not found. not found.", "ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n", (int) (short) -1);
        java.lang.String str16 = rentalSystem0.searchVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\". not found.\".\".");
        java.lang.String str18 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found. not found. not found.\".");
        rentalSystem0.addVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\". not found.\". not found.\".\".", "No vehicles match the keyword \"No vehicles match the keyword \"\".\".", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.\". not found. not found. not found.", (double) 100L);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID  not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID  not found. not found.");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID hi! not found." + "'", str10, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found." + "'", str14, "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\". not found.\".\".\"." + "'", str16, "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\". not found.\".\".\".");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found. not found. not found.\". not found." + "'", str18, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found. not found. not found.\". not found.");
    }

    @Test
    public void test1288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1288");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("");
        java.util.List<org.example.Vehicle> vehicleList4 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.rentVehicle("", "Vehicle with ID hi! not found.", (int) (short) 100);
        java.util.List<org.example.Vehicle> vehicleList9 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList10 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\".", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID  not found.\".\".\".\".");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID  not found." + "'", str3, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID  not found." + "'", str8, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList9);
        org.junit.Assert.assertNotNull(vehicleList10);
    }

    @Test
    public void test1289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1289");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.rentVehicle("", "No vehicles match the keyword \"Vehicle with ID hi! not found.\".", (int) (byte) 100);
        java.util.List<org.example.Vehicle> vehicleList9 = rentalSystem0.getVehicles();
        java.lang.String str11 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.");
        java.util.List<org.example.Vehicle> vehicleList12 = rentalSystem0.getVehicles();
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found. not found. not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID  not found.\".\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found.\".", (double) 1);
        java.lang.Class<?> wildcardClass18 = rentalSystem0.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID  not found." + "'", str8, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList9);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found." + "'", str11, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList12);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test1290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1290");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        int int7 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\". not found. not found. not found. not found.\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found. not found.\".");
        java.lang.String str12 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID  not found. not found.");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str12, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
    }

    @Test
    public void test1291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1291");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("hi!");
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.lang.String str6 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".");
        rentalSystem0.addVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found.", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.", (double) 0L);
        rentalSystem0.addVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\".\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found. not found.\".", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID  not found.\".\".", (double) 10.0f);
        // The following exception was thrown during execution in test generation
        try {
            rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found. not found. not found. not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found. not found.\".\".", "Vehicle with ID Vehicle with ID  not found. not found.", (double) (-1L));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Daily rate cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID hi! not found." + "'", str3, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\"." + "'", str6, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\".");
    }

    @Test
    public void test1292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1292");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        int int2 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Vehicle> vehicleList3 = rentalSystem0.getVehicles();
        int int4 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str6 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.");
        java.lang.String str10 = rentalSystem0.rentVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found. not found.", (int) (short) 0);
        java.util.List<org.example.Customer> customerList11 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found. not found.\".", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"\".\". not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(vehicleList3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found." + "'", str6, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\". not found." + "'", str10, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\". not found.");
        org.junit.Assert.assertNotNull(customerList11);
    }

    @Test
    public void test1293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1293");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.lang.String str7 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\". not found.\". not found.");
        java.lang.String str9 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found.\".\".\". not found. not found.");
        java.lang.String str13 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found. not found. not found.\".\".", (int) (byte) 10);
        // The following exception was thrown during execution in test generation
        try {
            rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found.", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\". not found.\". not found.\".\". not found.\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\". not found.\". not found. not found.\".", (-1.0d));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Daily rate cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\". not found.\". not found. not found." + "'", str7, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\". not found.\". not found. not found.");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found.\".\".\". not found. not found. not found." + "'", str9, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found.\".\".\". not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found. not found." + "'", str13, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found. not found.");
    }

    @Test
    public void test1294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1294");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID  not found.\".", "hi!");
        java.lang.String str11 = rentalSystem0.returnVehicle("");
        int int12 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str14 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found.");
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.\". not found. not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n\". not found. not found.");
        java.util.List<org.example.Vehicle> vehicleList18 = rentalSystem0.getVehicles();
        java.lang.Class<?> wildcardClass19 = vehicleList18.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID  not found." + "'", str11, "Vehicle with ID  not found.");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found.\"." + "'", str14, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found.\".");
        org.junit.Assert.assertNotNull(vehicleList18);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test1295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1295");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.searchVehicle("Vehicle with ID  not found.");
        rentalSystem0.addVehicle("hi!", "Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID hi! not found.", (double) 0);
        rentalSystem0.addCustomer("Vehicle with ID hi! not found.", "hi!");
        java.lang.String str18 = rentalSystem0.returnVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".");
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID hi! not found.\".", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.", (double) (byte) 10);
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found.", 1.0d);
        java.lang.String str32 = rentalSystem0.rentVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found.", "", (-1));
        rentalSystem0.addCustomer("Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\". not found.", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.\". not found.\".");
        java.lang.String str39 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\".\". not found. not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.\". not found.\".\".", (int) ' ');
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found. not found. not found.", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\".\". not found.");
        java.lang.String str46 = rentalSystem0.rentVehicle("", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\". not found.\". not found.", (int) (short) -1);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "No vehicles match the keyword \"Vehicle with ID  not found.\"." + "'", str8, "No vehicles match the keyword \"Vehicle with ID  not found.\".");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found." + "'", str18, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found. not found." + "'", str32, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found. not found.");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\".\". not found. not found. not found." + "'", str39, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\".\". not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "Vehicle with ID  not found." + "'", str46, "Vehicle with ID  not found.");
    }

    @Test
    public void test1296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1296");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.searchVehicle("Vehicle with ID  not found.");
        java.lang.String str10 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".");
        int int11 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.\".");
        java.lang.String str16 = rentalSystem0.searchVehicle("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n\".\".\".\".");
        // The following exception was thrown during execution in test generation
        try {
            rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".\". not found.", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\". not found.\". not found.\".", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n\".\".\".", (double) (-1.0f));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Daily rate cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "No vehicles match the keyword \"Vehicle with ID  not found.\"." + "'", str8, "No vehicles match the keyword \"Vehicle with ID  not found.\".");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\"." + "'", str10, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\".");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n\".\".\".\".\"." + "'", str16, "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n\".\".\".\".\".");
    }

    @Test
    public void test1297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1297");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.searchVehicle("Vehicle with ID  not found.");
        rentalSystem0.addVehicle("hi!", "Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID hi! not found.", (double) 0);
        rentalSystem0.addCustomer("Vehicle with ID hi! not found.", "hi!");
        java.util.List<org.example.Vehicle> vehicleList17 = rentalSystem0.getVehicles();
        java.lang.String str19 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found. not found. not found.");
        java.util.List<org.example.Vehicle> vehicleList20 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList21 = rentalSystem0.getVehicles();
        java.lang.String str23 = rentalSystem0.returnVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.\". not found.\".\".");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "No vehicles match the keyword \"Vehicle with ID  not found.\"." + "'", str8, "No vehicles match the keyword \"Vehicle with ID  not found.\".");
        org.junit.Assert.assertNotNull(vehicleList17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found. not found. not found.\"." + "'", str19, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found. not found. not found.\".");
        org.junit.Assert.assertNotNull(vehicleList20);
        org.junit.Assert.assertNotNull(vehicleList21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.\". not found.\".\". not found." + "'", str23, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.\". not found.\".\". not found.");
    }

    @Test
    public void test1298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1298");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList7 = rentalSystem0.getVehicles();
        java.lang.String str11 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.", "Vehicle with ID hi! not found.", (int) '#');
        int int12 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str14 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.");
        java.lang.String str18 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\". not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found. not found.\".", (int) (short) 10);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertNotNull(vehicleList7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found." + "'", str11, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found. not found." + "'", str14, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\". not found. not found. not found." + "'", str18, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\". not found. not found. not found.");
    }

    @Test
    public void test1299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1299");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.lang.String str7 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".");
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID  not found.");
        java.util.List<org.example.Customer> customerList11 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList12 = rentalSystem0.getCustomers();
        java.lang.Class<?> wildcardClass13 = customerList12.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\"." + "'", str7, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".");
        org.junit.Assert.assertNotNull(customerList11);
        org.junit.Assert.assertNotNull(customerList12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test1300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1300");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID  not found.\".", "hi!");
        int int10 = rentalSystem0.getAvailableVehicleCount();
        int int11 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList12 = rentalSystem0.getCustomers();
        int int13 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\". not found.\".", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found. not found. not found.");
        int int17 = rentalSystem0.getAvailableVehicleCount();
        int int18 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str22 = rentalSystem0.rentVehicle("Vehicle with ID No vehicles match the keyword \"hi!\". not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".", 0);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(customerList12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found." + "'", str22, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.");
    }

    @Test
    public void test1301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1301");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.returnVehicle("");
        int int9 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str13 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found.", (int) (short) 0);
        java.util.List<org.example.Vehicle> vehicleList14 = rentalSystem0.getVehicles();
        int int15 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found.\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found.\".");
        java.lang.String str20 = rentalSystem0.returnVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found. not found. not found.\".\".");
        java.util.List<org.example.Vehicle> vehicleList21 = rentalSystem0.getVehicles();
        java.lang.Class<?> wildcardClass22 = rentalSystem0.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID  not found." + "'", str8, "Vehicle with ID  not found.");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str13, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found. not found. not found.\".\". not found." + "'", str20, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found. not found. not found.\".\". not found.");
        org.junit.Assert.assertNotNull(vehicleList21);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test1302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1302");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("hi!");
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList5 = rentalSystem0.getVehicles();
        java.lang.String str7 = rentalSystem0.searchVehicle("");
        java.util.List<org.example.Vehicle> vehicleList8 = rentalSystem0.getVehicles();
        java.lang.String str12 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.\".", (-1));
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.\". not found. not found. not found.", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\".\". not found. not found. not found. not found.");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID hi! not found." + "'", str3, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertNotNull(vehicleList5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "No vehicles match the keyword \"\"." + "'", str7, "No vehicles match the keyword \"\".");
        org.junit.Assert.assertNotNull(vehicleList8);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\". not found." + "'", str12, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\". not found.");
    }

    @Test
    public void test1303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1303");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID  not found.\".", "hi!");
        int int10 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str12 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID  not found. not found.");
        java.lang.String str16 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.", (int) 'a');
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found. not found.", "Vehicle with ID No vehicles match the keyword \"hi!\". not found.");
        rentalSystem0.addCustomer("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.\". not found.", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.\". not found.\".\". not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str12, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found." + "'", str16, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.");
    }

    @Test
    public void test1304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1304");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.returnVehicle("Vehicle with ID  not found.");
        java.lang.String str12 = rentalSystem0.rentVehicle("Vehicle with ID hi! not found.", "Vehicle with ID Vehicle with ID  not found. not found.", (int) (byte) 10);
        java.lang.String str14 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        java.util.List<org.example.Vehicle> vehicleList15 = rentalSystem0.getVehicles();
        java.lang.String str19 = rentalSystem0.rentVehicle("", "Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.", (int) (byte) 100);
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found. not found.\". not found.", "ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found. not found.\". not found. not found.", 0.0d);
        rentalSystem0.addVehicle("ID: Vehicle with ID  not found., Model: Vehicle with ID Vehicle with ID  not found. not found., Type: Vehicle with ID hi! not found., Daily Rate: $1.0, Status: Available\n", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\". not found.", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\". not found.\".", (double) 1);
        java.util.List<org.example.Vehicle> vehicleList30 = rentalSystem0.getVehicles();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID  not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID  not found. not found.");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID Vehicle with ID hi! not found. not found." + "'", str12, "Vehicle with ID Vehicle with ID hi! not found. not found.");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found." + "'", str14, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList15);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Vehicle with ID  not found." + "'", str19, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList30);
    }

    @Test
    public void test1305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1305");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID  not found.\".", "hi!");
        int int10 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str12 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID  not found. not found.");
        java.lang.String str16 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.", (int) 'a');
        java.lang.String str20 = rentalSystem0.rentVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found.", (int) (byte) -1);
        int int21 = rentalSystem0.getAvailableVehicleCount();
        int int22 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str24 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\". not found.");
        java.lang.Class<?> wildcardClass25 = rentalSystem0.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str12, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found." + "'", str16, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found." + "'", str20, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found.");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\". not found.\"." + "'", str24, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\". not found.\".");
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test1306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1306");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList7 = rentalSystem0.getVehicles();
        java.lang.String str11 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID hi! not found.\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.", (int) (byte) 100);
        java.lang.String str13 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".");
        int int14 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList15 = rentalSystem0.getCustomers();
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found.", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.", (double) '4');
        int int21 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Vehicle> vehicleList22 = rentalSystem0.getVehicles();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertNotNull(vehicleList7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found." + "'", str11, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\"." + "'", str13, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\".");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(customerList15);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNotNull(vehicleList22);
    }

    @Test
    public void test1307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1307");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        int int7 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str9 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found. not found.\".");
        java.lang.Class<?> wildcardClass10 = rentalSystem0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found. not found.\". not found." + "'", str9, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found. not found.\". not found.");
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test1308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1308");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.searchVehicle("Vehicle with ID  not found.");
        int int9 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str11 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        // The following exception was thrown during execution in test generation
        try {
            rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\". not found.", "", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found.\".", (double) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Model cannot be null or empty");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "No vehicles match the keyword \"Vehicle with ID  not found.\"." + "'", str8, "No vehicles match the keyword \"Vehicle with ID  not found.\".");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID hi! not found.\".\"." + "'", str11, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID hi! not found.\".\".");
    }

    @Test
    public void test1309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1309");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\". not found.");
        java.lang.String str7 = rentalSystem0.rentVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\".\". not found.\".", 3);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\". not found. not found." + "'", str3, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\". not found. not found.");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found." + "'", str7, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.");
    }

    @Test
    public void test1310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1310");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("");
        int int4 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Vehicle> vehicleList5 = rentalSystem0.getVehicles();
        java.lang.String str7 = rentalSystem0.searchVehicle("hi!");
        rentalSystem0.addVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".", "ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\".", (double) 10L);
        java.util.List<org.example.Customer> customerList13 = rentalSystem0.getCustomers();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID  not found." + "'", str3, "Vehicle with ID  not found.");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(vehicleList5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "No vehicles match the keyword \"hi!\"." + "'", str7, "No vehicles match the keyword \"hi!\".");
        org.junit.Assert.assertNotNull(customerList13);
    }

    @Test
    public void test1311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1311");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID  not found.", 100);
        java.lang.String str12 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID  not found.\".", "Vehicle with ID Vehicle with ID hi! not found. not found.", (int) (short) -1);
        java.lang.String str14 = rentalSystem0.searchVehicle("hi!");
        java.util.List<org.example.Vehicle> vehicleList15 = rentalSystem0.getVehicles();
        java.lang.String str17 = rentalSystem0.searchVehicle("");
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found.\".\". not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\". not found. not found.", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\". not found.", (double) 10.0f);
        java.lang.String str24 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found. not found.");
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found. not found.\". not found. not found.", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found. not found. not found.\". not found.\".", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\". not found. not found. not found.", 1.0d);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found." + "'", str12, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "No vehicles match the keyword \"hi!\"." + "'", str14, "No vehicles match the keyword \"hi!\".");
        org.junit.Assert.assertNotNull(vehicleList15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "No vehicles match the keyword \"\"." + "'", str17, "No vehicles match the keyword \"\".");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found. not found. not found." + "'", str24, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found. not found. not found.");
    }

    @Test
    public void test1312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1312");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.searchVehicle("Vehicle with ID  not found.");
        rentalSystem0.addVehicle("hi!", "Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID hi! not found.", (double) 0);
        rentalSystem0.addCustomer("Vehicle with ID hi! not found.", "hi!");
        java.util.List<org.example.Vehicle> vehicleList17 = rentalSystem0.getVehicles();
        java.lang.String str19 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found. not found. not found.");
        java.lang.String str21 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found. not found.");
        java.lang.String str25 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\". not found.\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found.\". not found.", (int) (short) 0);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "No vehicles match the keyword \"Vehicle with ID  not found.\"." + "'", str8, "No vehicles match the keyword \"Vehicle with ID  not found.\".");
        org.junit.Assert.assertNotNull(vehicleList17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found. not found. not found.\"." + "'", str19, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found. not found. not found.\".");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found. not found. not found." + "'", str21, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\". not found.\". not found." + "'", str25, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\". not found.\". not found.");
    }

    @Test
    public void test1313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1313");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("");
        java.util.List<org.example.Vehicle> vehicleList4 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.rentVehicle("", "Vehicle with ID hi! not found.", (int) (short) 100);
        java.util.List<org.example.Vehicle> vehicleList9 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList10 = rentalSystem0.getCustomers();
        rentalSystem0.addVehicle("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\".\".", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\". not found. not found.", (double) '#');
        java.util.List<org.example.Vehicle> vehicleList16 = rentalSystem0.getVehicles();
        java.lang.String str20 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\".\". not found. not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found. not found. not found.\". not found.", (int) (short) 100);
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.\".", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\". not found.", 1.0d);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID  not found." + "'", str3, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID  not found." + "'", str8, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList9);
        org.junit.Assert.assertNotNull(customerList10);
        org.junit.Assert.assertNotNull(vehicleList16);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\".\". not found. not found. not found." + "'", str20, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\".\". not found. not found. not found.");
    }

    @Test
    public void test1314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1314");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList7 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList8 = rentalSystem0.getCustomers();
        int int9 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str13 = rentalSystem0.rentVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\".\".\".", (int) '#');
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\".\".\". not found. not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found.\".");
        rentalSystem0.addCustomer("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\". not found.", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\".\".");
        java.lang.String str21 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\". not found.");
        java.lang.String str23 = rentalSystem0.searchVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\". not found.\".\".");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertNotNull(vehicleList7);
        org.junit.Assert.assertNotNull(customerList8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found." + "'", str13, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\". not found.\"." + "'", str21, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\". not found.\".");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\". not found.\".\".\"." + "'", str23, "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\". not found.\".\".\".");
    }

    @Test
    public void test1315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1315");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.searchVehicle("Vehicle with ID  not found.");
        rentalSystem0.addVehicle("hi!", "Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID hi! not found.", (double) 0);
        java.util.List<org.example.Customer> customerList14 = rentalSystem0.getCustomers();
        java.lang.String str18 = rentalSystem0.rentVehicle("Vehicle with ID No vehicles match the keyword \"hi!\". not found.", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found. not found.", (int) (short) -1);
        java.util.List<org.example.Vehicle> vehicleList19 = rentalSystem0.getVehicles();
        java.lang.String str21 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.");
        java.lang.String str23 = rentalSystem0.searchVehicle("No vehicles match the keyword \"hi!\".");
        java.lang.Class<?> wildcardClass24 = rentalSystem0.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "No vehicles match the keyword \"Vehicle with ID  not found.\"." + "'", str8, "No vehicles match the keyword \"Vehicle with ID  not found.\".");
        org.junit.Assert.assertNotNull(customerList14);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found." + "'", str18, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList19);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\"." + "'", str21, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\".");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\"." + "'", str23, "No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".");
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test1316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1316");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID  not found.\".", "hi!");
        int int10 = rentalSystem0.getAvailableVehicleCount();
        int int11 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList12 = rentalSystem0.getCustomers();
        java.lang.String str14 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found.");
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found. not found.\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\".");
        java.lang.String str19 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found. not found.");
        java.util.List<org.example.Customer> customerList20 = rentalSystem0.getCustomers();
        java.lang.Class<?> wildcardClass21 = rentalSystem0.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(customerList12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found.\"." + "'", str14, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found.\".");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found. not found.\"." + "'", str19, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found. not found.\".");
        org.junit.Assert.assertNotNull(customerList20);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test1317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1317");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        int int7 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str9 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".");
        java.lang.String str11 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\". not found.");
        java.lang.String str15 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found.", 2);
        java.lang.String str17 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.\". not found. not found.");
        java.lang.Class<?> wildcardClass18 = rentalSystem0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\". not found." + "'", str9, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\". not found.\"." + "'", str11, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\". not found.\".");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found." + "'", str15, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.\". not found. not found. not found." + "'", str17, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.\". not found. not found. not found.");
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test1318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1318");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.searchVehicle("Vehicle with ID  not found.");
        rentalSystem0.addVehicle("hi!", "Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID hi! not found.", (double) 0);
        rentalSystem0.addCustomer("Vehicle with ID hi! not found.", "hi!");
        java.lang.String str18 = rentalSystem0.returnVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".");
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\".", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\".");
        java.lang.String str23 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\". not found.");
        java.util.List<org.example.Vehicle> vehicleList24 = rentalSystem0.getVehicles();
        java.lang.String str26 = rentalSystem0.returnVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found.\".\".");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "No vehicles match the keyword \"Vehicle with ID  not found.\"." + "'", str8, "No vehicles match the keyword \"Vehicle with ID  not found.\".");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found." + "'", str18, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\". not found. not found." + "'", str23, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\". not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found.\".\". not found." + "'", str26, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found.\".\". not found.");
    }

    @Test
    public void test1319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1319");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\". not found.");
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found. not found. not found. not found.\". not found.\".");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\". not found. not found." + "'", str3, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\". not found. not found.");
    }

    @Test
    public void test1320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1320");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList7 = rentalSystem0.getVehicles();
        java.lang.String str11 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID hi! not found.\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.", (int) (byte) 100);
        int int12 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Vehicle> vehicleList13 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList14 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\".\".\". not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found. not found.\". not found. not found.\".");
        java.lang.String str19 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\". not found.\". not found. not found.");
        java.lang.String str23 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found.\".", "", (int) (short) 10);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertNotNull(vehicleList7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found." + "'", str11, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(vehicleList13);
        org.junit.Assert.assertNotNull(customerList14);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\". not found.\". not found. not found. not found." + "'", str19, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\". not found.\". not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found.\". not found." + "'", str23, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found.\". not found.");
    }

    @Test
    public void test1321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1321");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID  not found.\".", "hi!");
        int int10 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str12 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID  not found. not found.");
        java.lang.String str14 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.");
        java.util.List<org.example.Customer> customerList15 = rentalSystem0.getCustomers();
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\". not found.\". not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\". not found. not found.", (double) 'a');
        java.util.List<org.example.Customer> customerList21 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".\".", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".\".\".");
        java.lang.String str26 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found. not found.\".");
        java.lang.String str30 = rentalSystem0.rentVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\". not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found. not found. not found. not found.\".", 0);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str12, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\"." + "'", str14, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".");
        org.junit.Assert.assertNotNull(customerList15);
        org.junit.Assert.assertNotNull(customerList21);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found. not found.\".\"." + "'", str26, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found. not found.\".\".");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\". not found. not found." + "'", str30, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\". not found. not found.");
    }

    @Test
    public void test1322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1322");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.");
        java.lang.String str10 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"hi!\". not found.");
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\".", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found.");
        java.lang.String str15 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\". not found. not found. not found.\".");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\"." + "'", str8, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\".");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\"." + "'", str10, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\".");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\". not found. not found. not found.\".\"." + "'", str15, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\". not found. not found. not found.\".\".");
    }

    @Test
    public void test1323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1323");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("");
        rentalSystem0.addVehicle("Vehicle with ID  not found.", "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.", "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.", (double) (short) 0);
        java.util.List<org.example.Customer> customerList9 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList10 = rentalSystem0.getVehicles();
        java.lang.String str14 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found. not found.\".", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\". not found.\".", (int) (short) 100);
        java.util.List<org.example.Customer> customerList15 = rentalSystem0.getCustomers();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID  not found." + "'", str3, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList9);
        org.junit.Assert.assertNotNull(vehicleList10);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found. not found.\". not found." + "'", str14, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found. not found.\". not found.");
        org.junit.Assert.assertNotNull(customerList15);
    }

    @Test
    public void test1324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1324");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID  not found. not found.", "No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        java.lang.String str8 = rentalSystem0.rentVehicle("hi!", "No vehicles match the keyword \"Vehicle with ID  not found.\".", 100);
        java.lang.String str10 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID hi! not found. not found.");
        java.lang.String str12 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.");
        java.lang.String str14 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        int int15 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\". not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\". not found.\". not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".", (double) 2);
        rentalSystem0.addCustomer("Vehicle with ID No vehicles match the keyword \"ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n\". not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found. not found. not found.\".\". not found. not found.");
        java.util.List<org.example.Customer> customerList24 = rentalSystem0.getCustomers();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID hi! not found." + "'", str8, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found." + "'", str10, "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found." + "'", str12, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.\"." + "'", str14, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.\".");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(customerList24);
    }

    @Test
    public void test1325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1325");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.searchVehicle("Vehicle with ID  not found.");
        rentalSystem0.addVehicle("hi!", "Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID hi! not found.", (double) 0);
        rentalSystem0.addCustomer("Vehicle with ID hi! not found.", "hi!");
        java.lang.String str18 = rentalSystem0.returnVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".");
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\".", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\".");
        java.lang.String str23 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found. not found.");
        java.util.List<org.example.Customer> customerList24 = rentalSystem0.getCustomers();
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found. not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found. not found. not found. not found.\". not found. not found.", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.\". not found.\".\". not found.", (double) 0);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "No vehicles match the keyword \"Vehicle with ID  not found.\"." + "'", str8, "No vehicles match the keyword \"Vehicle with ID  not found.\".");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found." + "'", str18, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found. not found. not found." + "'", str23, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found. not found. not found.");
        org.junit.Assert.assertNotNull(customerList24);
    }

    @Test
    public void test1326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1326");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        rentalSystem0.addCustomer("hi!", "Vehicle with ID Vehicle with ID  not found. not found.");
        java.util.List<org.example.Vehicle> vehicleList9 = rentalSystem0.getVehicles();
        java.lang.String str13 = rentalSystem0.rentVehicle("hi!", "No vehicles match the keyword \"Vehicle with ID  not found.\".", (int) '4');
        java.util.List<org.example.Customer> customerList14 = rentalSystem0.getCustomers();
        java.lang.String str16 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".");
        int int17 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList18 = rentalSystem0.getCustomers();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList9);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID hi! not found." + "'", str13, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertNotNull(customerList14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\"." + "'", str16, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\".");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(customerList18);
    }

    @Test
    public void test1327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1327");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        int int7 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList8 = rentalSystem0.getCustomers();
        java.lang.String str10 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        java.lang.String str12 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"\". not found.");
        java.util.List<org.example.Customer> customerList13 = rentalSystem0.getCustomers();
        java.lang.String str15 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.\". not found.");
        java.lang.String str17 = rentalSystem0.searchVehicle("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\".\".");
        java.lang.String str19 = rentalSystem0.returnVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found. not found.\".\".");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(customerList8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found." + "'", str10, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\"." + "'", str12, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".");
        org.junit.Assert.assertNotNull(customerList13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.\". not found.\"." + "'", str15, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.\". not found.\".");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\".\".\"." + "'", str17, "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\".\".\".");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found. not found.\".\". not found." + "'", str19, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found. not found.\".\". not found.");
    }

    @Test
    public void test1328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1328");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("");
        rentalSystem0.addVehicle("Vehicle with ID  not found.", "Vehicle with ID hi! not found.", "Vehicle with ID Vehicle with ID hi! not found. not found.", (double) '4');
        java.lang.String str10 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".");
        int int11 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str13 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found. not found.");
        java.util.List<org.example.Vehicle> vehicleList14 = rentalSystem0.getVehicles();
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found. not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found. not found. not found.\". not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.\". not found.\".\".", (double) (byte) 0);
        rentalSystem0.addCustomer("Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\". not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID  not found." + "'", str3, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\". not found." + "'", str10, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\". not found.");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found. not found. not found." + "'", str13, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found. not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList14);
    }

    @Test
    public void test1329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1329");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.returnVehicle("");
        java.util.List<org.example.Customer> customerList9 = rentalSystem0.getCustomers();
        java.lang.String str11 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.");
        java.util.List<org.example.Customer> customerList12 = rentalSystem0.getCustomers();
        java.lang.String str14 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID  not found." + "'", str8, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList9);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found." + "'", str11, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found.");
        org.junit.Assert.assertNotNull(customerList12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found. not found. not found." + "'", str14, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found. not found. not found.");
    }

    @Test
    public void test1330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1330");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("hi!");
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        rentalSystem0.addVehicle("Vehicle with ID  not found.", "Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID hi! not found.", 1.0d);
        int int10 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str12 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.\".");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID hi! not found." + "'", str3, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.\". not found." + "'", str12, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.\". not found.");
    }

    @Test
    public void test1331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1331");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("hi!");
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("Vehicle with ID hi! not found.", "Vehicle with ID Vehicle with ID  not found. not found.");
        java.lang.String str9 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found. not found.\".");
        // The following exception was thrown during execution in test generation
        try {
            rentalSystem0.addVehicle("", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\".\".\".\".", "ID: Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found., Model: Vehicle with ID Vehicle with ID hi! not found. not found., Type: No vehicles match the keyword \"hi!\"., Daily Rate: $1.0, Status: Available\nID: Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.\". not found., Model: No vehicles match the keyword \"\"., Type: No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found.\"., Daily Rate: $100.0, Status: Available\n", 100.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Vehicle ID cannot be null or empty");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID hi! not found." + "'", str3, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found. not found.\". not found." + "'", str9, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found. not found.\". not found.");
    }

    @Test
    public void test1332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1332");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.returnVehicle("Vehicle with ID  not found.");
        java.lang.String str10 = rentalSystem0.returnVehicle("hi!");
        java.lang.String str12 = rentalSystem0.searchVehicle("");
        java.lang.String str16 = rentalSystem0.rentVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found.", "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.", 0);
        java.lang.String str18 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".");
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\". not found.\".", "Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\".", (double) (short) 1);
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\".", "Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found.");
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\". not found.\". not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID  not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID  not found. not found.");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID hi! not found." + "'", str10, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "No vehicles match the keyword \"\"." + "'", str12, "No vehicles match the keyword \"\".");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found." + "'", str16, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found.");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\"." + "'", str18, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\".");
    }

    @Test
    public void test1333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1333");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        int int2 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        int int4 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addVehicle("Vehicle with ID  not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.", (double) (byte) 100);
        java.util.List<org.example.Vehicle> vehicleList10 = rentalSystem0.getVehicles();
        java.lang.String str12 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found. not found. not found. not found.");
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found. not found. not found. not found.\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\". not found. not found. not found.\". not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\".\". not found. not found. not found. not found.\".", 1.0d);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(vehicleList10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found. not found. not found. not found. not found." + "'", str12, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found. not found. not found. not found. not found.");
    }

    @Test
    public void test1334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1334");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList4 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID  not found. not found.", "hi!");
        java.lang.String str11 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID hi! not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".", (int) '4');
        java.lang.String str13 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.");
        int int14 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str16 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\". not found. not found.");
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found. not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found.", 10.0d);
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found. not found. not found.", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found. not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.", (double) 1);
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\". not found.\". not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\".", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found. not found.", (double) (byte) 0);
        java.lang.String str35 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found.", (int) (byte) 1);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(vehicleList4);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found." + "'", str11, "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found." + "'", str13, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\". not found. not found. not found." + "'", str16, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\". not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.\". not found." + "'", str35, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.\". not found.");
    }

    @Test
    public void test1335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1335");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.returnVehicle("Vehicle with ID  not found.");
        java.lang.String str10 = rentalSystem0.returnVehicle("hi!");
        java.lang.String str14 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID hi! not found. not found.", "ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n", (int) (short) -1);
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID  not found.\".", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found.\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\". not found. not found.", 0.0d);
        java.util.List<org.example.Vehicle> vehicleList20 = rentalSystem0.getVehicles();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID  not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID  not found. not found.");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID hi! not found." + "'", str10, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found." + "'", str14, "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList20);
    }

    @Test
    public void test1336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1336");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID  not found. not found.", "No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        java.lang.String str8 = rentalSystem0.rentVehicle("hi!", "No vehicles match the keyword \"Vehicle with ID  not found.\".", 100);
        java.lang.String str10 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID hi! not found. not found.");
        java.lang.String str12 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.");
        java.lang.String str14 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        java.util.List<org.example.Customer> customerList15 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\".\".\".\".", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found. not found.\". not found.\".\".\".");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID hi! not found." + "'", str8, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found." + "'", str10, "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found." + "'", str12, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.\"." + "'", str14, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.\".");
        org.junit.Assert.assertNotNull(customerList15);
    }

    @Test
    public void test1337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1337");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID  not found. not found.", "No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        java.util.List<org.example.Vehicle> vehicleList5 = rentalSystem0.getVehicles();
        java.lang.String str7 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".");
        java.lang.String str9 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\".\".\". not found.");
        java.lang.String str11 = rentalSystem0.returnVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\".\".");
        java.lang.String str15 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\". not found.\". not found. not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\". not found.\". not found.\".\".", (int) ' ');
        java.lang.Class<?> wildcardClass16 = rentalSystem0.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\"." + "'", str7, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\".");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\".\".\". not found. not found." + "'", str9, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\".\".\". not found. not found.");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\".\". not found." + "'", str11, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\".\". not found.");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\". not found.\". not found. not found. not found." + "'", str15, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\". not found.\". not found. not found. not found.");
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test1338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1338");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.returnVehicle("Vehicle with ID  not found.");
        java.lang.String str10 = rentalSystem0.returnVehicle("hi!");
        java.lang.String str14 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID hi! not found. not found.", "ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n", (int) (short) -1);
        // The following exception was thrown during execution in test generation
        try {
            rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found. not found.\". not found. not found.\".\". not found.", "ID: Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found. not found.\". not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\". not found., Type: No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\"., Daily Rate: $10.0, Status: Available\n", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.\".\".", (-1.0d));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Daily rate cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID  not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID  not found. not found.");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID hi! not found." + "'", str10, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found." + "'", str14, "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.");
    }

    @Test
    public void test1339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1339");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.");
        java.lang.String str10 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"hi!\". not found.");
        rentalSystem0.addCustomer("Vehicle with ID  not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found.\".\".");
        java.lang.Class<?> wildcardClass14 = rentalSystem0.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\"." + "'", str8, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\".");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\"." + "'", str10, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\".");
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test1340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1340");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.returnVehicle("");
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".", "No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".");
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".\".", "ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n");
        java.lang.String str16 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.\".\". not found.");
        java.util.List<org.example.Customer> customerList17 = rentalSystem0.getCustomers();
        java.lang.Class<?> wildcardClass18 = customerList17.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID  not found." + "'", str8, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.\".\". not found.\"." + "'", str16, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.\".\". not found.\".");
        org.junit.Assert.assertNotNull(customerList17);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test1341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1341");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.returnVehicle("");
        java.util.List<org.example.Customer> customerList9 = rentalSystem0.getCustomers();
        java.lang.String str11 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.");
        java.util.List<org.example.Vehicle> vehicleList12 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found.\".\".\".", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\".\".\". not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID  not found." + "'", str8, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList9);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found." + "'", str11, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList12);
    }

    @Test
    public void test1342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1342");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("");
        java.util.List<org.example.Vehicle> vehicleList4 = rentalSystem0.getVehicles();
        java.lang.String str6 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID  not found. not found.");
        java.util.List<org.example.Customer> customerList7 = rentalSystem0.getCustomers();
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID  not found.\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.", (double) ' ');
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found. not found.", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found. not found. not found.", "Vehicle with ID Vehicle with ID hi! not found. not found.", (double) '#');
        int int18 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList19 = rentalSystem0.getCustomers();
        java.lang.Class<?> wildcardClass20 = rentalSystem0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID  not found." + "'", str3, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str6, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertNotNull(customerList7);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2 + "'", int18 == 2);
        org.junit.Assert.assertNotNull(customerList19);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test1343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1343");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.lang.String str9 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.", (int) (byte) 1);
        java.util.List<org.example.Vehicle> vehicleList10 = rentalSystem0.getVehicles();
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found.", "Vehicle with ID Vehicle with ID Vehicle is already available. not found. not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\".\".", (double) (byte) 100);
        java.lang.String str17 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found." + "'", str9, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList10);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.\". not found.\"." + "'", str17, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.\". not found.\".");
    }

    @Test
    public void test1344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1344");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList5 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.lang.Class<?> wildcardClass7 = rentalSystem0.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertNotNull(vehicleList5);
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test1345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1345");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        int int7 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str9 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID  not found.\".");
        int int10 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Vehicle> vehicleList11 = rentalSystem0.getVehicles();
        int int12 = rentalSystem0.getAvailableVehicleCount();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found." + "'", str9, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(vehicleList11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
    }

    @Test
    public void test1346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1346");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        int int7 = rentalSystem0.getAvailableVehicleCount();
        int int8 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\".", "hi!");
        java.lang.String str15 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\".", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID  not found.\".\".", (int) 'a');
        java.lang.String str17 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\".");
        int int18 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addVehicle("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found.\". not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\". not found.\". not found. not found. not found. not found.\".", (double) 0.0f);
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found. not found.\". not found. not found.", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\". not found.\". not found.\".", (double) 10L);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found." + "'", str15, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\".\"." + "'", str17, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\".\".");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
    }

    @Test
    public void test1347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1347");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.returnVehicle("");
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".", "No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".");
        int int12 = rentalSystem0.getAvailableVehicleCount();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID  not found." + "'", str8, "Vehicle with ID  not found.");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
    }

    @Test
    public void test1348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1348");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID  not found. not found.", "No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        int int5 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID hi! not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".", "Vehicle with ID Vehicle with ID hi! not found. not found.", (double) 100.0f);
        java.lang.String str14 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found. not found.", "", 0);
        java.lang.String str16 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\".\". not found.");
        java.lang.Class<?> wildcardClass17 = rentalSystem0.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found. not found. not found." + "'", str14, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\".\". not found.\"." + "'", str16, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\".\". not found.\".");
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test1349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1349");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        int int2 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        int int4 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addVehicle("Vehicle with ID  not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.", (double) (byte) 100);
        java.lang.String str11 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".");
        // The following exception was thrown during execution in test generation
        try {
            rentalSystem0.addVehicle("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\".\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\". not found.\". not found. not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.\". not found. not found.\". not found.", (double) (-1.0f));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Daily rate cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\". not found." + "'", str11, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\". not found.");
    }

    @Test
    public void test1350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1350");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList7 = rentalSystem0.getVehicles();
        java.lang.String str11 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.", "Vehicle with ID hi! not found.", (int) '#');
        java.util.List<org.example.Customer> customerList12 = rentalSystem0.getCustomers();
        int int13 = rentalSystem0.getAvailableVehicleCount();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertNotNull(vehicleList7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found." + "'", str11, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.");
        org.junit.Assert.assertNotNull(customerList12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
    }

    @Test
    public void test1351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1351");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("");
        rentalSystem0.addVehicle("Vehicle with ID  not found.", "Vehicle with ID hi! not found.", "Vehicle with ID Vehicle with ID hi! not found. not found.", (double) '4');
        int int9 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\".", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\".\".\".");
        int int13 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Vehicle> vehicleList14 = rentalSystem0.getVehicles();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID  not found." + "'", str3, "Vehicle with ID  not found.");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(vehicleList14);
    }

    @Test
    public void test1352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1352");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.searchVehicle("Vehicle with ID  not found.");
        rentalSystem0.addVehicle("hi!", "Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID hi! not found.", (double) 0);
        rentalSystem0.addCustomer("Vehicle with ID hi! not found.", "hi!");
        java.lang.String str18 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.");
        java.lang.String str20 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.");
        // The following exception was thrown during execution in test generation
        try {
            rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found. not found. not found.\".", "", "", (double) 2);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Model cannot be null or empty");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "No vehicles match the keyword \"Vehicle with ID  not found.\"." + "'", str8, "No vehicles match the keyword \"Vehicle with ID  not found.\".");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\"." + "'", str18, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\".");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.\"." + "'", str20, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.\".");
    }

    @Test
    public void test1353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1353");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.searchVehicle("Vehicle with ID  not found.");
        rentalSystem0.addVehicle("hi!", "Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID hi! not found.", (double) 0);
        java.lang.String str15 = rentalSystem0.returnVehicle("Vehicle with ID  not found.");
        int int16 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str20 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\".", 100);
        java.util.List<org.example.Customer> customerList21 = rentalSystem0.getCustomers();
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".\".\". not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.\".", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found. not found.", (double) 100L);
        // The following exception was thrown during execution in test generation
        try {
            rentalSystem0.addVehicle("No vehicles match the keyword \"No vehicles match the keyword \"\".\".", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\". not found.\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\". not found. not found.", (double) (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Daily rate cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "No vehicles match the keyword \"Vehicle with ID  not found.\"." + "'", str8, "No vehicles match the keyword \"Vehicle with ID  not found.\".");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Vehicle with ID Vehicle with ID  not found. not found." + "'", str15, "Vehicle with ID Vehicle with ID  not found. not found.");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found." + "'", str20, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found.");
        org.junit.Assert.assertNotNull(customerList21);
    }

    @Test
    public void test1354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1354");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("hi!");
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        int int5 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str9 = rentalSystem0.rentVehicle("No vehicles match the keyword \"\".", "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.", (int) (short) 10);
        java.lang.String str13 = rentalSystem0.rentVehicle("No vehicles match the keyword \"\".", "", (-1));
        int int14 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str16 = rentalSystem0.returnVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\".");
        java.util.List<org.example.Customer> customerList17 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList18 = rentalSystem0.getVehicles();
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found. not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\".\".", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.\". not found. not found. not found.", (double) (short) 1);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID hi! not found." + "'", str3, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Vehicle with ID No vehicles match the keyword \"\". not found." + "'", str9, "Vehicle with ID No vehicles match the keyword \"\". not found.");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID No vehicles match the keyword \"\". not found." + "'", str13, "Vehicle with ID No vehicles match the keyword \"\". not found.");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found." + "'", str16, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found.");
        org.junit.Assert.assertNotNull(customerList17);
        org.junit.Assert.assertNotNull(vehicleList18);
    }

    @Test
    public void test1355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1355");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.rentVehicle("", "No vehicles match the keyword \"Vehicle with ID hi! not found.\".", (int) (byte) 100);
        java.lang.String str10 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.");
        int int11 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found. not found.\".");
        java.util.List<org.example.Customer> customerList15 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".\". not found. not found. not found.", "Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found., Model: Vehicle with ID Vehicle with ID hi! not found. not found., Type: No vehicles match the keyword \"hi!\"., Daily Rate: $1.0, Status: Available\nID: Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.\". not found., Model: No vehicles match the keyword \"\"., Type: No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found.\"., Daily Rate: $100.0, Status: Available\n not found. not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID  not found." + "'", str8, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found." + "'", str10, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(customerList15);
    }

    @Test
    public void test1356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1356");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\". not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.", 1.0d);
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\". not found.\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\". not found.", (double) 'a');
        java.lang.String str18 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found. not found.");
        rentalSystem0.addCustomer("Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\". not found.\". not found.", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found. not found. not found.\". not found.\".");
        java.util.List<org.example.Customer> customerList22 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found.\". not found.", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID hi! not found.\".\". not found.");
        java.lang.String str29 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\".\". not found. not found.", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\".\".", (int) (short) -1);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found. not found. not found." + "'", str18, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found. not found. not found.");
        org.junit.Assert.assertNotNull(customerList22);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\".\". not found. not found. not found." + "'", str29, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\".\". not found. not found. not found.");
    }

    @Test
    public void test1357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1357");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("hi!");
        java.lang.String str5 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\".", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".\".");
        java.util.List<org.example.Customer> customerList9 = rentalSystem0.getCustomers();
        java.lang.String str11 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.");
        int int12 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str14 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.\". not found.");
        java.util.List<org.example.Vehicle> vehicleList15 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList16 = rentalSystem0.getVehicles();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID hi! not found." + "'", str3, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found." + "'", str5, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.");
        org.junit.Assert.assertNotNull(customerList9);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found. not found." + "'", str11, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found. not found.");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.\". not found. not found." + "'", str14, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.\". not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList15);
        org.junit.Assert.assertNotNull(vehicleList16);
    }

    @Test
    public void test1358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1358");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID  not found.\".", "hi!");
        java.lang.String str11 = rentalSystem0.returnVehicle("");
        java.lang.String str15 = rentalSystem0.rentVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\".", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\". not found.\".", (int) (short) 1);
        java.lang.Class<?> wildcardClass16 = rentalSystem0.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID  not found." + "'", str11, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\". not found." + "'", str15, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\". not found.");
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test1359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1359");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.searchVehicle("Vehicle with ID  not found.");
        rentalSystem0.addVehicle("hi!", "Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID hi! not found.", (double) 0);
        rentalSystem0.addCustomer("Vehicle with ID hi! not found.", "hi!");
        java.lang.String str18 = rentalSystem0.returnVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".");
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID hi! not found.\".", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.", (double) (byte) 10);
        int int24 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found. not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID hi! not found.\".\".", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found. not found.", (double) '#');
        java.util.List<org.example.Vehicle> vehicleList30 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found. not found.", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found. not found. not found.");
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found.\". not found. not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found. not found. not found.\". not found. not found.", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found. not found. not found.", (double) (byte) 1);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "No vehicles match the keyword \"Vehicle with ID  not found.\"." + "'", str8, "No vehicles match the keyword \"Vehicle with ID  not found.\".");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found." + "'", str18, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2 + "'", int24 == 2);
        org.junit.Assert.assertNotNull(vehicleList30);
    }

    @Test
    public void test1360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1360");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList7 = rentalSystem0.getVehicles();
        rentalSystem0.addVehicle("Vehicle with ID  not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".", 1.0d);
        int int13 = rentalSystem0.getAvailableVehicleCount();
        int int14 = rentalSystem0.getAvailableVehicleCount();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertNotNull(vehicleList7);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
    }

    @Test
    public void test1361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1361");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID  not found.\".", "hi!");
        int int10 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str12 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID  not found. not found.");
        java.lang.String str14 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.");
        java.util.List<org.example.Customer> customerList15 = rentalSystem0.getCustomers();
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\". not found.\". not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\". not found. not found.", (double) 'a');
        java.util.List<org.example.Customer> customerList21 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList22 = rentalSystem0.getVehicles();
        java.lang.Class<?> wildcardClass23 = vehicleList22.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str12, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\"." + "'", str14, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".");
        org.junit.Assert.assertNotNull(customerList15);
        org.junit.Assert.assertNotNull(customerList21);
        org.junit.Assert.assertNotNull(vehicleList22);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test1362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1362");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.returnVehicle("Vehicle with ID  not found.");
        java.lang.String str12 = rentalSystem0.rentVehicle("Vehicle with ID hi! not found.", "Vehicle with ID Vehicle with ID  not found. not found.", (int) (byte) 10);
        java.lang.String str14 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        java.util.List<org.example.Vehicle> vehicleList15 = rentalSystem0.getVehicles();
        java.lang.String str19 = rentalSystem0.rentVehicle("", "Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.", (int) (byte) 100);
        java.lang.String str21 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.");
        java.util.List<org.example.Vehicle> vehicleList22 = rentalSystem0.getVehicles();
        int int23 = rentalSystem0.getAvailableVehicleCount();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID  not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID  not found. not found.");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID Vehicle with ID hi! not found. not found." + "'", str12, "Vehicle with ID Vehicle with ID hi! not found. not found.");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found." + "'", str14, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList15);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Vehicle with ID  not found." + "'", str19, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.\"." + "'", str21, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.\".");
        org.junit.Assert.assertNotNull(vehicleList22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
    }

    @Test
    public void test1363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1363");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.returnVehicle("Vehicle with ID  not found.");
        java.lang.String str12 = rentalSystem0.rentVehicle("Vehicle with ID hi! not found.", "Vehicle with ID Vehicle with ID  not found. not found.", (int) (byte) 10);
        java.lang.String str14 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        java.util.List<org.example.Vehicle> vehicleList15 = rentalSystem0.getVehicles();
        java.lang.String str19 = rentalSystem0.rentVehicle("", "Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.", (int) (byte) 100);
        java.lang.String str21 = rentalSystem0.searchVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\".\".");
        java.lang.String str23 = rentalSystem0.returnVehicle("Vehicle with ID ID: Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found., Model: Vehicle with ID Vehicle with ID hi! not found. not found., Type: No vehicles match the keyword \"hi!\"., Daily Rate: $1.0, Status: Available\nID: Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.\". not found., Model: No vehicles match the keyword \"\"., Type: No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found.\"., Daily Rate: $100.0, Status: Available\n not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID  not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID  not found. not found.");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID Vehicle with ID hi! not found. not found." + "'", str12, "Vehicle with ID Vehicle with ID hi! not found. not found.");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found." + "'", str14, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList15);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Vehicle with ID  not found." + "'", str19, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\".\".\"." + "'", str21, "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\".\".\".");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Vehicle with ID Vehicle with ID ID: Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found., Model: Vehicle with ID Vehicle with ID hi! not found. not found., Type: No vehicles match the keyword \"hi!\"., Daily Rate: $1.0, Status: Available\nID: Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.\". not found., Model: No vehicles match the keyword \"\"., Type: No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found.\"., Daily Rate: $100.0, Status: Available\n not found. not found." + "'", str23, "Vehicle with ID Vehicle with ID ID: Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found., Model: Vehicle with ID Vehicle with ID hi! not found. not found., Type: No vehicles match the keyword \"hi!\"., Daily Rate: $1.0, Status: Available\nID: Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.\". not found., Model: No vehicles match the keyword \"\"., Type: No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found.\"., Daily Rate: $100.0, Status: Available\n not found. not found.");
    }

    @Test
    public void test1364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1364");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.", "Vehicle with ID Vehicle with ID hi! not found. not found.", "No vehicles match the keyword \"hi!\".", (double) 1L);
        java.lang.String str13 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"hi!\". not found.");
        java.lang.String str17 = rentalSystem0.rentVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found.", (int) '4');
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.\". not found.", "No vehicles match the keyword \"\".", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found.\".", (double) 100.0f);
        java.util.List<org.example.Customer> customerList23 = rentalSystem0.getCustomers();
        // The following exception was thrown during execution in test generation
        try {
            rentalSystem0.addVehicle("", "", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".", (double) 10L);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Vehicle ID cannot be null or empty");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\"." + "'", str13, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\".");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found." + "'", str17, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.");
        org.junit.Assert.assertNotNull(customerList23);
    }

    @Test
    public void test1365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1365");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList5 = rentalSystem0.getVehicles();
        java.lang.String str9 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".", "No vehicles match the keyword \"Vehicle with ID  not found.\".", (int) ' ');
        java.lang.String str13 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID  not found. not found.", "", (int) (byte) -1);
        int int14 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str18 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found.", 3);
        java.lang.String str22 = rentalSystem0.rentVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\".", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\".", (-1));
        // The following exception was thrown during execution in test generation
        try {
            rentalSystem0.addVehicle("", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\". not found.\". not found. not found. not found. not found.\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\". not found. not found. not found. not found.\". not found. not found.", (double) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Vehicle ID cannot be null or empty");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertNotNull(vehicleList5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found." + "'", str9, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str13, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found." + "'", str18, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found." + "'", str22, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found.");
    }

    @Test
    public void test1366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1366");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID  not found.\".", "hi!");
        int int10 = rentalSystem0.getAvailableVehicleCount();
        int int11 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList12 = rentalSystem0.getCustomers();
        java.lang.String str16 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found. not found. not found.", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\".\".", (int) (short) -1);
        java.util.List<org.example.Vehicle> vehicleList17 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList18 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList19 = rentalSystem0.getCustomers();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(customerList12);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found. not found. not found. not found." + "'", str16, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found. not found. not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList17);
        org.junit.Assert.assertNotNull(vehicleList18);
        org.junit.Assert.assertNotNull(customerList19);
    }

    @Test
    public void test1367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1367");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList5 = rentalSystem0.getVehicles();
        java.lang.String str9 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".", "No vehicles match the keyword \"Vehicle with ID  not found.\".", (int) ' ');
        java.lang.String str13 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID  not found. not found.", "", (int) (byte) -1);
        java.lang.String str15 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\".");
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\". not found. not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found. not found. not found. not found.\". not found. not found.", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\". not found.\". not found.\".\". not found.\".", (double) 0.0f);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertNotNull(vehicleList5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found." + "'", str9, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str13, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found." + "'", str15, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found.");
    }

    @Test
    public void test1368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1368");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("");
        int int4 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Vehicle> vehicleList5 = rentalSystem0.getVehicles();
        java.lang.String str7 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.");
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".", "Vehicle with ID hi! not found.");
        java.util.List<org.example.Vehicle> vehicleList11 = rentalSystem0.getVehicles();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID  not found." + "'", str3, "Vehicle with ID  not found.");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(vehicleList5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.\"." + "'", str7, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.\".");
        org.junit.Assert.assertNotNull(vehicleList11);
    }

    @Test
    public void test1369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1369");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID  not found. not found.", "No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        int int5 = rentalSystem0.getAvailableVehicleCount();
        int int6 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Vehicle> vehicleList7 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found.");
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found. not found.\". not found. not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID  not found.\".\".", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".", (double) (short) 100);
        int int16 = rentalSystem0.getAvailableVehicleCount();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(vehicleList7);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
    }

    @Test
    public void test1370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1370");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        int int2 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        int int4 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addVehicle("Vehicle with ID  not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.", (double) (byte) 100);
        java.lang.String str11 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".");
        java.util.List<org.example.Vehicle> vehicleList12 = rentalSystem0.getVehicles();
        java.lang.String str16 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\". not found. not found.", "Vehicle with ID ID: No vehicles match the keyword \"Vehicle with ID  not found.\"., Model: No vehicles match the keyword \"Vehicle with ID  not found.\"., Type: Vehicle with ID  not found., Daily Rate: $10.0, Status: Available\n not found.", (int) (byte) 10);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\". not found." + "'", str11, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList12);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\". not found. not found. not found." + "'", str16, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\". not found. not found. not found.");
    }

    @Test
    public void test1371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1371");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        int int7 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList8 = rentalSystem0.getCustomers();
        int int9 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str13 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID  not found.\".", "No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".", (int) 'a');
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found. not found. not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\". not found. not found.");
        java.util.List<org.example.Vehicle> vehicleList17 = rentalSystem0.getVehicles();
        // The following exception was thrown during execution in test generation
        try {
            rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found. not found.\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.", "", (double) 10.0f);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Type cannot be null or empty");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(customerList8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found." + "'", str13, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList17);
    }

    @Test
    public void test1372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1372");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.searchVehicle("Vehicle with ID  not found.");
        rentalSystem0.addVehicle("hi!", "Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID hi! not found.", (double) 0);
        java.util.List<org.example.Customer> customerList14 = rentalSystem0.getCustomers();
        java.lang.String str18 = rentalSystem0.rentVehicle("Vehicle with ID No vehicles match the keyword \"hi!\". not found.", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found. not found.", (int) (short) -1);
        java.util.List<org.example.Vehicle> vehicleList19 = rentalSystem0.getVehicles();
        java.lang.String str21 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.");
        java.util.List<org.example.Customer> customerList22 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList23 = rentalSystem0.getCustomers();
        java.lang.String str27 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\". not found. not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\".", (int) (short) 10);
        java.lang.String str29 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n\".\". not found.");
        int int30 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str32 = rentalSystem0.returnVehicle("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n\".\".\".\".\".");
        java.util.List<org.example.Customer> customerList33 = rentalSystem0.getCustomers();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "No vehicles match the keyword \"Vehicle with ID  not found.\"." + "'", str8, "No vehicles match the keyword \"Vehicle with ID  not found.\".");
        org.junit.Assert.assertNotNull(customerList14);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found." + "'", str18, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList19);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\"." + "'", str21, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\".");
        org.junit.Assert.assertNotNull(customerList22);
        org.junit.Assert.assertNotNull(customerList23);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\". not found. not found. not found." + "'", str27, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\". not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n\".\". not found. not found." + "'", str29, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n\".\". not found. not found.");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n\".\".\".\".\". not found." + "'", str32, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n\".\".\".\".\". not found.");
        org.junit.Assert.assertNotNull(customerList33);
    }

    @Test
    public void test1373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1373");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID  not found.\".", "hi!");
        int int10 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str12 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID  not found. not found.");
        java.lang.String str14 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".");
        // The following exception was thrown during execution in test generation
        try {
            rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".", "");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Customer ID cannot be null or empty");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str12, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\"." + "'", str14, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\".");
    }

    @Test
    public void test1374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1374");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList5 = rentalSystem0.getVehicles();
        java.lang.String str7 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found. not found.");
        java.util.List<org.example.Customer> customerList8 = rentalSystem0.getCustomers();
        java.lang.Class<?> wildcardClass9 = customerList8.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertNotNull(vehicleList5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found. not found.\"." + "'", str7, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found. not found.\".");
        org.junit.Assert.assertNotNull(customerList8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test1375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1375");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.lang.String str5 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.");
        int int6 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str8 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\".");
        java.lang.Class<?> wildcardClass9 = rentalSystem0.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\"." + "'", str5, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\".");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found." + "'", str8, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found.");
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test1376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1376");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.lang.String str5 = rentalSystem0.returnVehicle("Vehicle with ID  not found.");
        java.lang.String str7 = rentalSystem0.searchVehicle("Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.");
        java.lang.String str9 = rentalSystem0.searchVehicle("hi!");
        java.lang.String str11 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found. not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID Vehicle with ID  not found. not found." + "'", str5, "Vehicle with ID Vehicle with ID  not found. not found.");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\"." + "'", str7, "No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "No vehicles match the keyword \"hi!\"." + "'", str9, "No vehicles match the keyword \"hi!\".");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found. not found. not found. not found." + "'", str11, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found. not found. not found. not found.");
    }

    @Test
    public void test1377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1377");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("");
        int int4 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Vehicle> vehicleList5 = rentalSystem0.getVehicles();
        java.lang.String str7 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.");
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".", "Vehicle with ID hi! not found.");
        java.lang.String str12 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.");
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found. not found.\". not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\".", (double) (short) 1);
        java.lang.String str19 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\". not found.\".");
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\".\".\". not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\". not found. not found. not found.\".");
        int int23 = rentalSystem0.getAvailableVehicleCount();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID  not found." + "'", str3, "Vehicle with ID  not found.");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(vehicleList5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.\"." + "'", str7, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.\".");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.\"." + "'", str12, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.\".");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\". not found.\". not found." + "'", str19, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\". not found.\". not found.");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
    }

    @Test
    public void test1378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1378");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID  not found.", 100);
        java.lang.String str12 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID  not found.\".", "Vehicle with ID Vehicle with ID hi! not found. not found.", (int) (short) -1);
        java.lang.String str14 = rentalSystem0.searchVehicle("hi!");
        java.util.List<org.example.Vehicle> vehicleList15 = rentalSystem0.getVehicles();
        java.lang.String str17 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.");
        java.lang.String str19 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.");
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\". not found.\". not found. not found. not found. not found.", "Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found." + "'", str12, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "No vehicles match the keyword \"hi!\"." + "'", str14, "No vehicles match the keyword \"hi!\".");
        org.junit.Assert.assertNotNull(vehicleList15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\"." + "'", str17, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found." + "'", str19, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found.");
    }

    @Test
    public void test1379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1379");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID  not found.\".", "hi!");
        int int10 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str12 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID  not found. not found.");
        java.lang.String str14 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.");
        java.util.List<org.example.Customer> customerList15 = rentalSystem0.getCustomers();
        java.lang.String str17 = rentalSystem0.searchVehicle("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\".\".");
        int int18 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\".\".", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\".\".");
        java.util.List<org.example.Customer> customerList22 = rentalSystem0.getCustomers();
        java.lang.Class<?> wildcardClass23 = rentalSystem0.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str12, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\"." + "'", str14, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".");
        org.junit.Assert.assertNotNull(customerList15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\".\".\"." + "'", str17, "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\".\".\".");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(customerList22);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test1380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1380");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.searchVehicle("Vehicle with ID  not found.");
        rentalSystem0.addVehicle("hi!", "Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID hi! not found.", (double) 0);
        rentalSystem0.addCustomer("Vehicle with ID hi! not found.", "hi!");
        java.lang.String str18 = rentalSystem0.returnVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".");
        java.lang.String str20 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found.");
        java.lang.String str22 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found. not found. not found.");
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.\". not found. not found.\".", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "No vehicles match the keyword \"Vehicle with ID  not found.\"." + "'", str8, "No vehicles match the keyword \"Vehicle with ID  not found.\".");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found." + "'", str18, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found.\"." + "'", str20, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found.\".");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found. not found. not found.\"." + "'", str22, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found. not found. not found.\".");
    }

    @Test
    public void test1381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1381");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID  not found.\".", "hi!");
        int int10 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str12 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID  not found. not found.");
        java.lang.String str16 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.", (int) 'a');
        java.lang.String str20 = rentalSystem0.rentVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found.", (int) (byte) -1);
        java.util.List<org.example.Vehicle> vehicleList21 = rentalSystem0.getVehicles();
        java.lang.String str23 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found. not found.\".");
        java.lang.String str25 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.");
        // The following exception was thrown during execution in test generation
        try {
            rentalSystem0.addCustomer("", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Name cannot be null or empty");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str12, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found." + "'", str16, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found." + "'", str20, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found. not found.\". not found." + "'", str23, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found. not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\"." + "'", str25, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\".");
    }

    @Test
    public void test1382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1382");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.returnVehicle("");
        java.lang.String str10 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\". not found.");
        java.util.List<org.example.Customer> customerList11 = rentalSystem0.getCustomers();
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.\".\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\". not found. not found.", (double) (byte) 1);
        java.util.List<org.example.Customer> customerList17 = rentalSystem0.getCustomers();
        int int18 = rentalSystem0.getAvailableVehicleCount();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID  not found." + "'", str8, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\". not found.\"." + "'", str10, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\". not found.\".");
        org.junit.Assert.assertNotNull(customerList11);
        org.junit.Assert.assertNotNull(customerList17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
    }

    @Test
    public void test1383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1383");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.", "Vehicle with ID Vehicle with ID hi! not found. not found.", "No vehicles match the keyword \"hi!\".", (double) 1L);
        java.lang.String str13 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"hi!\". not found.");
        java.lang.String str17 = rentalSystem0.rentVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found.", (int) '4');
        int int18 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Vehicle> vehicleList19 = rentalSystem0.getVehicles();
        int int20 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Vehicle> vehicleList21 = rentalSystem0.getVehicles();
        java.lang.String str23 = rentalSystem0.returnVehicle("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\".\".\".");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\"." + "'", str13, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\".");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found." + "'", str17, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(vehicleList19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(vehicleList21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\".\".\". not found." + "'", str23, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\".\".\". not found.");
    }

    @Test
    public void test1384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1384");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("");
        java.util.List<org.example.Vehicle> vehicleList4 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.rentVehicle("", "Vehicle with ID hi! not found.", (int) (short) 100);
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.", "No vehicles match the keyword \"Vehicle with ID  not found.\".", "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.", (double) 10);
        java.util.List<org.example.Vehicle> vehicleList14 = rentalSystem0.getVehicles();
        java.lang.String str16 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\". not found.");
        int int17 = rentalSystem0.getAvailableVehicleCount();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID  not found." + "'", str3, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID  not found." + "'", str8, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\". not found. not found." + "'", str16, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\". not found. not found.");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
    }

    @Test
    public void test1385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1385");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList4 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID  not found. not found.", "hi!");
        int int8 = rentalSystem0.getAvailableVehicleCount();
        int int9 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str13 = rentalSystem0.rentVehicle("No vehicles match the keyword \"hi!\".", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found. not found.\".\".", 0);
        int int14 = rentalSystem0.getAvailableVehicleCount();
        int int15 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str17 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found. not found. not found. not found.\".");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(vehicleList4);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID No vehicles match the keyword \"hi!\". not found." + "'", str13, "Vehicle with ID No vehicles match the keyword \"hi!\". not found.");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found. not found. not found. not found.\".\"." + "'", str17, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found. not found. not found. not found.\".\".");
    }

    @Test
    public void test1386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1386");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.returnVehicle("");
        int int9 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str11 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.");
        java.lang.String str15 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID  not found. not found.", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".", (int) (short) 0);
        java.util.List<org.example.Customer> customerList16 = rentalSystem0.getCustomers();
        int int17 = rentalSystem0.getAvailableVehicleCount();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID  not found." + "'", str8, "Vehicle with ID  not found.");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found." + "'", str11, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str15, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertNotNull(customerList16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
    }

    @Test
    public void test1387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1387");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.searchVehicle("Vehicle with ID  not found.");
        rentalSystem0.addVehicle("hi!", "Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID hi! not found.", (double) 0);
        java.util.List<org.example.Vehicle> vehicleList14 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList15 = rentalSystem0.getCustomers();
        java.lang.String str17 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\". not found.");
        int int18 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str22 = rentalSystem0.rentVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found. not found.\".", (int) (byte) 10);
        java.lang.Class<?> wildcardClass23 = rentalSystem0.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "No vehicles match the keyword \"Vehicle with ID  not found.\"." + "'", str8, "No vehicles match the keyword \"Vehicle with ID  not found.\".");
        org.junit.Assert.assertNotNull(vehicleList14);
        org.junit.Assert.assertNotNull(customerList15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\". not found.\"." + "'", str17, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\". not found.\".");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found." + "'", str22, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found.");
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test1388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1388");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.rentVehicle("", "No vehicles match the keyword \"Vehicle with ID hi! not found.\".", (int) (byte) 100);
        java.lang.String str10 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.");
        int int11 = rentalSystem0.getAvailableVehicleCount();
        int int12 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str14 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\".");
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID  not found.\".\".\".", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found.\".");
        int int18 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str20 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found. not found. not found.\".");
        java.util.List<org.example.Customer> customerList21 = rentalSystem0.getCustomers();
        java.lang.String str25 = rentalSystem0.rentVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\".", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found.\".\".", (int) (short) 100);
        java.lang.Class<?> wildcardClass26 = rentalSystem0.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID  not found." + "'", str8, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found." + "'", str10, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\".\"." + "'", str14, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\".\".");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found. not found. not found.\". not found." + "'", str20, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found. not found. not found.\". not found.");
        org.junit.Assert.assertNotNull(customerList21);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\". not found." + "'", str25, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\". not found.");
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test1389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1389");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList4 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID  not found. not found.", "hi!");
        java.lang.String str11 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID hi! not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".", (int) '4');
        java.lang.String str13 = rentalSystem0.returnVehicle("");
        int int14 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Vehicle> vehicleList15 = rentalSystem0.getVehicles();
        // The following exception was thrown during execution in test generation
        try {
            rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found.", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\". not found.\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.\". not found. not found.\".", (double) (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Daily rate cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(vehicleList4);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found." + "'", str11, "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID  not found." + "'", str13, "Vehicle with ID  not found.");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(vehicleList15);
    }

    @Test
    public void test1390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1390");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList5 = rentalSystem0.getVehicles();
        java.lang.String str9 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".", "No vehicles match the keyword \"Vehicle with ID  not found.\".", (int) ' ');
        java.lang.String str13 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID  not found. not found.", "", (int) (byte) -1);
        int int14 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.", "Vehicle with ID hi! not found.");
        java.lang.Class<?> wildcardClass18 = rentalSystem0.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertNotNull(vehicleList5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found." + "'", str9, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str13, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test1391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1391");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID  not found.", 100);
        java.lang.String str12 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID  not found.\".", "Vehicle with ID Vehicle with ID hi! not found. not found.", (int) (short) -1);
        java.lang.String str14 = rentalSystem0.searchVehicle("hi!");
        java.lang.String str16 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found. not found.\". not found. not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found." + "'", str12, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "No vehicles match the keyword \"hi!\"." + "'", str14, "No vehicles match the keyword \"hi!\".");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found. not found.\". not found. not found.\". not found.\"." + "'", str16, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found. not found.\". not found. not found.\". not found.\".");
    }

    @Test
    public void test1392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1392");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.searchVehicle("Vehicle with ID  not found.");
        rentalSystem0.addVehicle("hi!", "Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID hi! not found.", (double) 0);
        rentalSystem0.addCustomer("Vehicle with ID hi! not found.", "hi!");
        java.lang.String str18 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.");
        java.lang.String str20 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.");
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.", "Vehicle with ID  not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\". not found. not found.", (double) (short) 100);
        int int26 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Vehicle> vehicleList27 = rentalSystem0.getVehicles();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "No vehicles match the keyword \"Vehicle with ID  not found.\"." + "'", str8, "No vehicles match the keyword \"Vehicle with ID  not found.\".");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\"." + "'", str18, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\".");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.\"." + "'", str20, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.\".");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 2 + "'", int26 == 2);
        org.junit.Assert.assertNotNull(vehicleList27);
    }

    @Test
    public void test1393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1393");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("hi!");
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("Vehicle with ID hi! not found.", "Vehicle with ID Vehicle with ID  not found. not found.");
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found. not found.", "Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.\".", (double) 0.0f);
        java.util.List<org.example.Customer> customerList13 = rentalSystem0.getCustomers();
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n\".\". not found. not found. not found.", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found. not found. not found.\". not found.\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\". not found.", (double) 10);
        java.util.List<org.example.Customer> customerList19 = rentalSystem0.getCustomers();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID hi! not found." + "'", str3, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertNotNull(customerList13);
        org.junit.Assert.assertNotNull(customerList19);
    }

    @Test
    public void test1394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1394");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("");
        java.util.List<org.example.Vehicle> vehicleList4 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.rentVehicle("", "Vehicle with ID hi! not found.", (int) (short) 100);
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.", "No vehicles match the keyword \"Vehicle with ID  not found.\".", "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.", (double) 10);
        int int14 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str18 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found.", (int) (byte) -1);
        java.util.List<org.example.Vehicle> vehicleList19 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\".\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found. not found.\".");
        java.util.List<org.example.Customer> customerList23 = rentalSystem0.getCustomers();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID  not found." + "'", str3, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID  not found." + "'", str8, "Vehicle with ID  not found.");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found. not found." + "'", str18, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList19);
        org.junit.Assert.assertNotNull(customerList23);
    }

    @Test
    public void test1395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1395");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID  not found. not found.", "No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        java.lang.String str8 = rentalSystem0.rentVehicle("hi!", "No vehicles match the keyword \"Vehicle with ID  not found.\".", 100);
        java.lang.String str10 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID hi! not found. not found.");
        rentalSystem0.addVehicle("ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.", "No vehicles match the keyword \"\".", (double) (byte) 10);
        java.lang.String str17 = rentalSystem0.returnVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".");
        rentalSystem0.addVehicle("Vehicle with ID ID: Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found., Model: Vehicle with ID Vehicle with ID hi! not found. not found., Type: No vehicles match the keyword \"hi!\"., Daily Rate: $1.0, Status: Available\nID: Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.\". not found., Model: No vehicles match the keyword \"\"., Type: No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found.\"., Daily Rate: $100.0, Status: Available\n not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found.\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found. not found. not found.\".", (double) (byte) 1);
        rentalSystem0.addCustomer("Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found.", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found.");
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found. not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found.\". not found. not found.");
        java.lang.String str30 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\". not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID hi! not found." + "'", str8, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found." + "'", str10, "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found." + "'", str17, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\". not found. not found." + "'", str30, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\". not found. not found.");
    }

    @Test
    public void test1396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1396");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.returnVehicle("Vehicle with ID  not found.");
        java.lang.String str10 = rentalSystem0.returnVehicle("hi!");
        java.lang.String str14 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID hi! not found. not found.", "ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n", (int) (short) -1);
        java.lang.String str16 = rentalSystem0.searchVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\". not found.\".\".");
        java.lang.String str18 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found. not found. not found.\".");
        // The following exception was thrown during execution in test generation
        try {
            rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\". not found. not found.\".", "", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found.\".\".\". not found. not found. not found.", (double) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Model cannot be null or empty");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID  not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID  not found. not found.");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID hi! not found." + "'", str10, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found." + "'", str14, "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\". not found.\".\".\"." + "'", str16, "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\". not found.\".\".\".");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found. not found. not found.\". not found." + "'", str18, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found. not found. not found.\". not found.");
    }

    @Test
    public void test1397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1397");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList7 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList8 = rentalSystem0.getCustomers();
        int int9 = rentalSystem0.getAvailableVehicleCount();
        java.lang.Class<?> wildcardClass10 = rentalSystem0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertNotNull(vehicleList7);
        org.junit.Assert.assertNotNull(customerList8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test1398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1398");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("hi!");
        java.lang.String str5 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\".", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".\".");
        java.util.List<org.example.Customer> customerList9 = rentalSystem0.getCustomers();
        java.lang.String str11 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.");
        java.util.List<org.example.Vehicle> vehicleList12 = rentalSystem0.getVehicles();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID hi! not found." + "'", str3, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found." + "'", str5, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.");
        org.junit.Assert.assertNotNull(customerList9);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found. not found." + "'", str11, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList12);
    }

    @Test
    public void test1399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1399");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID  not found. not found.", "No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        java.lang.String str8 = rentalSystem0.rentVehicle("hi!", "No vehicles match the keyword \"Vehicle with ID  not found.\".", 100);
        int int9 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str11 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found.");
        java.util.List<org.example.Vehicle> vehicleList12 = rentalSystem0.getVehicles();
        java.lang.String str14 = rentalSystem0.returnVehicle("");
        rentalSystem0.addVehicle("No vehicles match the keyword \"hi!\".", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found. not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found.\". not found.", (double) 0.0f);
        java.util.List<org.example.Customer> customerList20 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList21 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList22 = rentalSystem0.getVehicles();
        java.lang.String str26 = rentalSystem0.rentVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found.\". not found.", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found. not found. not found.", (-1));
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID hi! not found." + "'", str8, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found.\"." + "'", str11, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found.\".");
        org.junit.Assert.assertNotNull(vehicleList12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID  not found." + "'", str14, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList20);
        org.junit.Assert.assertNotNull(vehicleList21);
        org.junit.Assert.assertNotNull(vehicleList22);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found.\". not found. not found." + "'", str26, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found.\". not found. not found.");
    }

    @Test
    public void test1400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1400");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("hi!");
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        int int5 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str9 = rentalSystem0.rentVehicle("No vehicles match the keyword \"\".", "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.", (int) (short) 10);
        java.lang.String str13 = rentalSystem0.rentVehicle("No vehicles match the keyword \"\".", "", (-1));
        int int14 = rentalSystem0.getAvailableVehicleCount();
        int int15 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str17 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\".");
        java.lang.String str19 = rentalSystem0.returnVehicle("");
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.", "Vehicle with ID Vehicle with ID  not found. not found.");
        java.lang.String str26 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found.\".", "", 0);
        java.util.List<org.example.Customer> customerList27 = rentalSystem0.getCustomers();
        java.lang.Class<?> wildcardClass28 = customerList27.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID hi! not found." + "'", str3, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Vehicle with ID No vehicles match the keyword \"\". not found." + "'", str9, "Vehicle with ID No vehicles match the keyword \"\". not found.");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID No vehicles match the keyword \"\". not found." + "'", str13, "Vehicle with ID No vehicles match the keyword \"\". not found.");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\".\"." + "'", str17, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\".\".");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Vehicle with ID  not found." + "'", str19, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found.\". not found." + "'", str26, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found.\". not found.");
        org.junit.Assert.assertNotNull(customerList27);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test1401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1401");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        int int2 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        int int4 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".", "No vehicles match the keyword \"Vehicle with ID  not found.\".");
        int int8 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str10 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\".");
        java.util.List<org.example.Vehicle> vehicleList11 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList12 = rentalSystem0.getVehicles();
        java.lang.String str16 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\". not found. not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\".\".", 10);
        java.lang.String str18 = rentalSystem0.returnVehicle("");
        java.util.List<org.example.Customer> customerList19 = rentalSystem0.getCustomers();
        int int20 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.\".\".\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found. not found.\".");
        // The following exception was thrown during execution in test generation
        try {
            rentalSystem0.addCustomer("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\".\". not found.", "");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Customer ID cannot be null or empty");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found." + "'", str10, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList11);
        org.junit.Assert.assertNotNull(vehicleList12);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\". not found. not found. not found." + "'", str16, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\". not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Vehicle with ID  not found." + "'", str18, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
    }

    @Test
    public void test1402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1402");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.searchVehicle("Vehicle with ID  not found.");
        rentalSystem0.addVehicle("hi!", "Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID hi! not found.", (double) 0);
        rentalSystem0.addCustomer("Vehicle with ID hi! not found.", "hi!");
        java.util.List<org.example.Vehicle> vehicleList17 = rentalSystem0.getVehicles();
        int int18 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str22 = rentalSystem0.rentVehicle("", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found. not found. not found.\".", (int) ' ');
        java.util.List<org.example.Vehicle> vehicleList23 = rentalSystem0.getVehicles();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "No vehicles match the keyword \"Vehicle with ID  not found.\"." + "'", str8, "No vehicles match the keyword \"Vehicle with ID  not found.\".");
        org.junit.Assert.assertNotNull(vehicleList17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Vehicle with ID  not found." + "'", str22, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList23);
    }

    @Test
    public void test1403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1403");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.");
        rentalSystem0.addCustomer("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\".");
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\".", "No vehicles match the keyword \"Vehicle with ID hi! not found.\".", (double) (short) 100);
        java.lang.String str19 = rentalSystem0.searchVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".\".");
        java.lang.String str23 = rentalSystem0.rentVehicle("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\".\".\".\".", "Vehicle with ID ID: Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found., Model: Vehicle with ID Vehicle with ID hi! not found. not found., Type: No vehicles match the keyword \"hi!\"., Daily Rate: $1.0, Status: Available\nID: Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.\". not found., Model: No vehicles match the keyword \"\"., Type: No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found.\"., Daily Rate: $100.0, Status: Available\n not found.", (int) (byte) 0);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".\".\"." + "'", str19, "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".\".\".");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\".\".\".\". not found." + "'", str23, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\".\".\".\". not found.");
    }

    @Test
    public void test1404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1404");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.");
        java.lang.String str10 = rentalSystem0.searchVehicle("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\".\".\".\".");
        java.util.List<org.example.Customer> customerList11 = rentalSystem0.getCustomers();
        java.lang.String str15 = rentalSystem0.rentVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found. not found. not found.\". not found.", "ID: Vehicle with ID  not found., Model: Vehicle with ID Vehicle with ID  not found. not found., Type: Vehicle with ID hi! not found., Daily Rate: $1.0, Status: Available\n", (int) ' ');
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\"." + "'", str8, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\".");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\".\".\".\".\"." + "'", str10, "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\".\".\".\".\".");
        org.junit.Assert.assertNotNull(customerList11);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found. not found. not found.\". not found. not found." + "'", str15, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found. not found. not found.\". not found. not found.");
    }

    @Test
    public void test1405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1405");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.returnVehicle("");
        int int9 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\".", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".\".", "hi!", (double) 1L);
        java.util.List<org.example.Customer> customerList15 = rentalSystem0.getCustomers();
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\". not found.\". not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\". not found. not found. not found. not found.\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\". not found.", (double) 3);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID  not found." + "'", str8, "Vehicle with ID  not found.");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(customerList15);
    }

    @Test
    public void test1406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1406");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList4 = rentalSystem0.getVehicles();
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.", "ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.", (double) (byte) 100);
        java.util.List<org.example.Customer> customerList10 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList11 = rentalSystem0.getVehicles();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(vehicleList4);
        org.junit.Assert.assertNotNull(customerList10);
        org.junit.Assert.assertNotNull(vehicleList11);
    }

    @Test
    public void test1407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1407");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.returnVehicle("");
        java.util.List<org.example.Customer> customerList9 = rentalSystem0.getCustomers();
        java.lang.String str11 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.");
        java.lang.String str15 = rentalSystem0.rentVehicle("Vehicle with ID No vehicles match the keyword \"\". not found.", "ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n", (int) (short) -1);
        java.util.List<org.example.Vehicle> vehicleList16 = rentalSystem0.getVehicles();
        java.lang.String str20 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.", (int) (short) 0);
        java.lang.Class<?> wildcardClass21 = rentalSystem0.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID  not found." + "'", str8, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList9);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found." + "'", str11, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found.");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found." + "'", str15, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList16);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.\". not found." + "'", str20, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.\". not found.");
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test1408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1408");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.returnVehicle("Vehicle with ID  not found.");
        java.lang.String str12 = rentalSystem0.rentVehicle("Vehicle with ID hi! not found.", "Vehicle with ID Vehicle with ID  not found. not found.", (int) (byte) 10);
        java.lang.String str14 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        java.util.List<org.example.Vehicle> vehicleList15 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList16 = rentalSystem0.getCustomers();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID  not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID  not found. not found.");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID Vehicle with ID hi! not found. not found." + "'", str12, "Vehicle with ID Vehicle with ID hi! not found. not found.");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found." + "'", str14, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList15);
        org.junit.Assert.assertNotNull(customerList16);
    }

    @Test
    public void test1409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1409");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        int int7 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str9 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".");
        java.lang.String str11 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\". not found.");
        java.util.List<org.example.Customer> customerList12 = rentalSystem0.getCustomers();
        java.lang.String str16 = rentalSystem0.rentVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\". not found.\". not found.", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\". not found. not found. not found. not found.", (int) (byte) -1);
        java.lang.Class<?> wildcardClass17 = rentalSystem0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\". not found." + "'", str9, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\". not found.\"." + "'", str11, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\". not found.\".");
        org.junit.Assert.assertNotNull(customerList12);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\". not found.\". not found. not found." + "'", str16, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\". not found.\". not found. not found.");
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test1410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1410");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID  not found.", 100);
        java.lang.String str12 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID  not found.\".", "Vehicle with ID Vehicle with ID hi! not found. not found.", (int) (short) -1);
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\". not found.", "No vehicles match the keyword \"Vehicle with ID  not found.\".", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.\".", (double) (short) 1);
        int int18 = rentalSystem0.getAvailableVehicleCount();
        int int19 = rentalSystem0.getAvailableVehicleCount();
        int int20 = rentalSystem0.getAvailableVehicleCount();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found." + "'", str12, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
    }

    @Test
    public void test1411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1411");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID  not found.", 100);
        java.lang.String str12 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID  not found.\".", "Vehicle with ID Vehicle with ID hi! not found. not found.", (int) (short) -1);
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.");
        java.lang.String str19 = rentalSystem0.rentVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\".\".", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found. not found.", (int) (byte) 100);
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.\".\". not found.", "Vehicle with ID No vehicles match the keyword \"\". not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found. not found.\".", (double) (byte) 100);
        java.util.List<org.example.Customer> customerList25 = rentalSystem0.getCustomers();
        java.lang.String str29 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found. not found. not found.", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found.", (int) (short) 0);
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\".\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found. not found. not found. not found.\". not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found." + "'", str12, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\".\". not found." + "'", str19, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\".\". not found.");
        org.junit.Assert.assertNotNull(customerList25);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found. not found. not found. not found." + "'", str29, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found. not found. not found. not found.");
    }

    @Test
    public void test1412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1412");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.searchVehicle("No vehicles match the keyword \"hi!\".");
        java.lang.String str10 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.");
        java.lang.String str12 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.");
        java.util.List<org.example.Customer> customerList13 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found.\".\". not found.\". not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".");
        java.lang.String str18 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found. not found. not found.\".");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\"." + "'", str8, "No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.\"." + "'", str10, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.\".");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\"." + "'", str12, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\".");
        org.junit.Assert.assertNotNull(customerList13);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found. not found. not found.\".\"." + "'", str18, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found. not found. not found.\".\".");
    }

    @Test
    public void test1413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1413");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.searchVehicle("Vehicle with ID  not found.");
        java.lang.String str10 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".");
        int int11 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.\".");
        java.lang.String str16 = rentalSystem0.searchVehicle("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n\".\".\".\".");
        java.lang.String str18 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found. not found. not found. not found.");
        java.util.List<org.example.Vehicle> vehicleList19 = rentalSystem0.getVehicles();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "No vehicles match the keyword \"Vehicle with ID  not found.\"." + "'", str8, "No vehicles match the keyword \"Vehicle with ID  not found.\".");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\"." + "'", str10, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\".");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n\".\".\".\".\"." + "'", str16, "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n\".\".\".\".\".");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found. not found. not found. not found. not found." + "'", str18, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found. not found. not found. not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList19);
    }

    @Test
    public void test1414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1414");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID  not found. not found.", "No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        java.lang.String str8 = rentalSystem0.rentVehicle("hi!", "No vehicles match the keyword \"Vehicle with ID  not found.\".", 100);
        java.lang.String str10 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID hi! not found. not found.");
        rentalSystem0.addVehicle("ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.", "No vehicles match the keyword \"\".", (double) (byte) 10);
        java.lang.String str17 = rentalSystem0.returnVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".");
        rentalSystem0.addVehicle("Vehicle with ID ID: Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found., Model: Vehicle with ID Vehicle with ID hi! not found. not found., Type: No vehicles match the keyword \"hi!\"., Daily Rate: $1.0, Status: Available\nID: Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.\". not found., Model: No vehicles match the keyword \"\"., Type: No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found.\"., Daily Rate: $100.0, Status: Available\n not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found.\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found. not found. not found.\".", (double) (byte) 1);
        java.lang.String str24 = rentalSystem0.returnVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found. not found.\". not found. not found.\".\".");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID hi! not found." + "'", str8, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found." + "'", str10, "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found." + "'", str17, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found. not found.\". not found. not found.\".\". not found." + "'", str24, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found. not found.\". not found. not found.\".\". not found.");
    }

    @Test
    public void test1415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1415");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.returnVehicle("Vehicle with ID  not found.");
        int int9 = rentalSystem0.getAvailableVehicleCount();
        int int10 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str12 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found.\".");
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\".\".\".\".", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found.\".\".");
        java.util.List<org.example.Vehicle> vehicleList16 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList17 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found. not found.\".\". not found.", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\". not found.\". not found. not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID  not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID  not found. not found.");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found.\". not found." + "'", str12, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList16);
        org.junit.Assert.assertNotNull(vehicleList17);
    }

    @Test
    public void test1416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1416");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.lang.String str9 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.", (int) (byte) 1);
        java.lang.String str11 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\". not found.");
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\".\".\".", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\". not found. not found. not found. not found.");
        java.lang.String str16 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\".\". not found.");
        java.util.List<org.example.Customer> customerList17 = rentalSystem0.getCustomers();
        java.lang.String str19 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found. not found. not found.\".\". not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found." + "'", str9, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\". not found.\"." + "'", str11, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\". not found.\".");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\".\". not found. not found." + "'", str16, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\".\". not found. not found.");
        org.junit.Assert.assertNotNull(customerList17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found. not found. not found.\".\". not found. not found." + "'", str19, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found. not found. not found.\".\". not found. not found.");
    }

    @Test
    public void test1417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1417");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList4 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID  not found. not found.", "hi!");
        java.lang.String str11 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID hi! not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".", (int) '4');
        java.lang.String str13 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.");
        int int14 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str16 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\". not found. not found.");
        java.lang.String str18 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\".\".\".\". not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(vehicleList4);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found." + "'", str11, "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found." + "'", str13, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\". not found. not found. not found." + "'", str16, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\". not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\".\".\".\". not found. not found." + "'", str18, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\".\".\".\". not found. not found.");
    }

    @Test
    public void test1418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1418");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID  not found.\".", "hi!");
        java.lang.String str11 = rentalSystem0.returnVehicle("Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.");
        java.util.List<org.example.Vehicle> vehicleList12 = rentalSystem0.getVehicles();
        java.lang.String str14 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found.");
        java.lang.String str16 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found.");
        java.lang.String str18 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\".\". not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found." + "'", str11, "Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found. not found." + "'", str14, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found. not found." + "'", str16, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\".\". not found. not found. not found." + "'", str18, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\".\". not found. not found. not found.");
    }

    @Test
    public void test1419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1419");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("");
        rentalSystem0.addVehicle("Vehicle with ID  not found.", "Vehicle with ID hi! not found.", "Vehicle with ID Vehicle with ID hi! not found. not found.", (double) '4');
        int int9 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Vehicle> vehicleList10 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList11 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList12 = rentalSystem0.getVehicles();
        int int13 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList14 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList15 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found. not found.\". not found. not found.\". not found.");
        java.lang.String str20 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\". not found.\". not found. not found.");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID  not found." + "'", str3, "Vehicle with ID  not found.");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(vehicleList10);
        org.junit.Assert.assertNotNull(customerList11);
        org.junit.Assert.assertNotNull(vehicleList12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(customerList14);
        org.junit.Assert.assertNotNull(vehicleList15);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\". not found.\". not found. not found. not found." + "'", str20, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\". not found.\". not found. not found. not found.");
    }

    @Test
    public void test1420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1420");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList4 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID  not found. not found.", "hi!");
        java.lang.String str11 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID hi! not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".", (int) '4');
        java.lang.String str13 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.");
        int int14 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str16 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\". not found.\".");
        java.lang.String str18 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found. not found.");
        java.util.List<org.example.Vehicle> vehicleList19 = rentalSystem0.getVehicles();
        java.lang.Class<?> wildcardClass20 = rentalSystem0.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(vehicleList4);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found." + "'", str11, "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found. not found." + "'", str13, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found. not found.");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\". not found.\". not found." + "'", str16, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\". not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found. not found. not found." + "'", str18, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found. not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList19);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test1421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1421");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        int int7 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\".\".", "Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.", "ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n", 1.0d);
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.\". not found. not found.", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found. not found. not found.\".\".", 0.0d);
        int int18 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str20 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\". not found. not found. not found.\".");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2 + "'", int18 == 2);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\". not found. not found. not found.\". not found." + "'", str20, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\". not found. not found. not found.\". not found.");
    }

    @Test
    public void test1422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1422");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        int int2 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        int int4 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addVehicle("Vehicle with ID  not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.", (double) (byte) 100);
        rentalSystem0.addCustomer("Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.", "Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.");
        java.lang.String str16 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found. not found. not found.\".", "No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".", (int) (short) 100);
        java.lang.String str18 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\".\". not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found. not found. not found.\". not found." + "'", str16, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found. not found. not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\".\". not found. not found." + "'", str18, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\".\". not found. not found.");
    }

    @Test
    public void test1423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1423");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.returnVehicle("Vehicle with ID  not found.");
        java.lang.String str12 = rentalSystem0.rentVehicle("Vehicle with ID hi! not found.", "Vehicle with ID Vehicle with ID  not found. not found.", (int) (byte) 10);
        java.lang.String str14 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        java.util.List<org.example.Vehicle> vehicleList15 = rentalSystem0.getVehicles();
        java.lang.String str17 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\". not found. not found. not found.");
        java.lang.String str21 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\". not found.\". not found.", 0);
        // The following exception was thrown during execution in test generation
        try {
            rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\".\".", "", 0.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Type cannot be null or empty");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID  not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID  not found. not found.");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID Vehicle with ID hi! not found. not found." + "'", str12, "Vehicle with ID Vehicle with ID hi! not found. not found.");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found." + "'", str14, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\". not found. not found. not found. not found." + "'", str17, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\". not found. not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\". not found." + "'", str21, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\". not found.");
    }

    @Test
    public void test1424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1424");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        rentalSystem0.addCustomer("hi!", "Vehicle with ID Vehicle with ID  not found. not found.");
        java.util.List<org.example.Vehicle> vehicleList9 = rentalSystem0.getVehicles();
        java.lang.String str13 = rentalSystem0.rentVehicle("hi!", "No vehicles match the keyword \"Vehicle with ID  not found.\".", (int) '4');
        java.util.List<org.example.Customer> customerList14 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList15 = rentalSystem0.getVehicles();
        java.lang.String str19 = rentalSystem0.rentVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found. not found. not found. not found.\". not found.", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found. not found. not found. not found.", 0);
        java.lang.String str23 = rentalSystem0.rentVehicle("ID: Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found., Model: ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n, Type: Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found., Daily Rate: $100.0, Status: Available\n", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\".\".\".", (int) (byte) 10);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList9);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID hi! not found." + "'", str13, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertNotNull(customerList14);
        org.junit.Assert.assertNotNull(vehicleList15);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found. not found. not found. not found.\". not found. not found." + "'", str19, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found. not found. not found. not found.\". not found. not found.");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Vehicle with ID ID: Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found., Model: ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n, Type: Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found., Daily Rate: $100.0, Status: Available\n not found." + "'", str23, "Vehicle with ID ID: Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found., Model: ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n, Type: Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found., Daily Rate: $100.0, Status: Available\n not found.");
    }

    @Test
    public void test1425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1425");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList7 = rentalSystem0.getVehicles();
        java.lang.String str11 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID hi! not found.\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.", (int) (byte) 100);
        java.lang.String str13 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".");
        java.lang.String str15 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".");
        int int16 = rentalSystem0.getAvailableVehicleCount();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertNotNull(vehicleList7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found." + "'", str11, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\"." + "'", str13, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\".");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\". not found." + "'", str15, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\". not found.");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
    }

    @Test
    public void test1426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1426");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.searchVehicle("Vehicle with ID  not found.");
        java.lang.String str10 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".");
        int int11 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str13 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\".");
        java.util.List<org.example.Vehicle> vehicleList14 = rentalSystem0.getVehicles();
        java.lang.Class<?> wildcardClass15 = rentalSystem0.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "No vehicles match the keyword \"Vehicle with ID  not found.\"." + "'", str8, "No vehicles match the keyword \"Vehicle with ID  not found.\".");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\"." + "'", str10, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\".");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found." + "'", str13, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test1427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1427");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.searchVehicle("No vehicles match the keyword \"hi!\".");
        java.lang.String str10 = rentalSystem0.returnVehicle("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".\".");
        int int11 = rentalSystem0.getAvailableVehicleCount();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\"." + "'", str8, "No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".\". not found." + "'", str10, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".\". not found.");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
    }

    @Test
    public void test1428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1428");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.returnVehicle("Vehicle with ID  not found.");
        java.lang.String str10 = rentalSystem0.returnVehicle("hi!");
        java.util.List<org.example.Vehicle> vehicleList11 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\". not found.\". not found.", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found.\".\".\".");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID  not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID  not found. not found.");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID hi! not found." + "'", str10, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertNotNull(vehicleList11);
    }

    @Test
    public void test1429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1429");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.rentVehicle("", "No vehicles match the keyword \"Vehicle with ID hi! not found.\".", (int) (byte) 100);
        java.lang.String str10 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.");
        int int11 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found. not found.\".");
        java.util.List<org.example.Vehicle> vehicleList15 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList16 = rentalSystem0.getCustomers();
        java.lang.String str18 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found. not found. not found. not found.");
        int int19 = rentalSystem0.getAvailableVehicleCount();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID  not found." + "'", str8, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found." + "'", str10, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(vehicleList15);
        org.junit.Assert.assertNotNull(customerList16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found. not found. not found. not found.\"." + "'", str18, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found. not found. not found. not found.\".");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
    }

    @Test
    public void test1430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1430");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID  not found.\".", "hi!");
        int int10 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str12 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID  not found. not found.");
        java.lang.String str14 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.");
        java.util.List<org.example.Customer> customerList15 = rentalSystem0.getCustomers();
        java.lang.String str17 = rentalSystem0.searchVehicle("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\".\".");
        int int18 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\".\".", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\".\".");
        java.lang.String str23 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found. not found. not found.\".");
        java.lang.Class<?> wildcardClass24 = rentalSystem0.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str12, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\"." + "'", str14, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".");
        org.junit.Assert.assertNotNull(customerList15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\".\".\"." + "'", str17, "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\".\".\".");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found. not found. not found.\".\"." + "'", str23, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found. not found. not found.\".\".");
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test1431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1431");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID  not found.", 100);
        java.lang.String str12 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID  not found.\".", "Vehicle with ID Vehicle with ID hi! not found. not found.", (int) (short) -1);
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.");
        java.util.List<org.example.Vehicle> vehicleList16 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList17 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList18 = rentalSystem0.getCustomers();
        // The following exception was thrown during execution in test generation
        try {
            rentalSystem0.addVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.\". not found. not found.\".\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\". not found. not found. not found.\".", "", (double) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Type cannot be null or empty");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found." + "'", str12, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList16);
        org.junit.Assert.assertNotNull(vehicleList17);
        org.junit.Assert.assertNotNull(customerList18);
    }

    @Test
    public void test1432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1432");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList4 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID  not found. not found.", "hi!");
        java.lang.String str11 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID hi! not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".", (int) '4');
        java.lang.String str13 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.");
        int int14 = rentalSystem0.getAvailableVehicleCount();
        int int15 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str19 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n\".\". not found. not found.", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found. not found.", (int) (byte) 0);
        java.lang.String str21 = rentalSystem0.searchVehicle("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\". not found.\". not found.\".\".\".");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(vehicleList4);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found." + "'", str11, "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found." + "'", str13, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n\".\". not found. not found. not found." + "'", str19, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n\".\". not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\". not found.\". not found.\".\".\".\"." + "'", str21, "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\". not found.\". not found.\".\".\".\".");
    }

    @Test
    public void test1433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1433");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.rentVehicle("", "No vehicles match the keyword \"Vehicle with ID hi! not found.\".", (int) (byte) 100);
        java.lang.String str10 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.");
        java.lang.String str14 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.", 0);
        int int15 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str17 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\". not found. not found. not found.");
        java.lang.String str21 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID ID: Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found., Model: Vehicle with ID Vehicle with ID hi! not found. not found., Type: No vehicles match the keyword \"hi!\"., Daily Rate: $1.0, Status: Available\nID: Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.\". not found., Model: No vehicles match the keyword \"\"., Type: No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found.\"., Daily Rate: $100.0, Status: Available\n not found. not found.", "Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.", 1);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID  not found." + "'", str8, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found." + "'", str10, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found. not found." + "'", str14, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found. not found.");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\". not found. not found. not found.\"." + "'", str17, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\". not found. not found. not found.\".");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found., Model: Vehicle with ID Vehicle with ID hi! not found. not found., Type: No vehicles match the keyword \"hi!\"., Daily Rate: $1.0, Status: Available\nID: Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.\". not found., Model: No vehicles match the keyword \"\"., Type: No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found.\"., Daily Rate: $100.0, Status: Available\n not found. not found. not found." + "'", str21, "Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found., Model: Vehicle with ID Vehicle with ID hi! not found. not found., Type: No vehicles match the keyword \"hi!\"., Daily Rate: $1.0, Status: Available\nID: Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.\". not found., Model: No vehicles match the keyword \"\"., Type: No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found.\"., Daily Rate: $100.0, Status: Available\n not found. not found. not found.");
    }

    @Test
    public void test1434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1434");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("");
        rentalSystem0.addVehicle("Vehicle with ID  not found.", "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.", "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.", (double) (short) 0);
        java.lang.String str10 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"hi!\". not found.");
        java.util.List<org.example.Customer> customerList11 = rentalSystem0.getCustomers();
        java.lang.String str13 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found.\".");
        java.util.List<org.example.Customer> customerList14 = rentalSystem0.getCustomers();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID  not found." + "'", str3, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found." + "'", str10, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.");
        org.junit.Assert.assertNotNull(customerList11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found.\". not found." + "'", str13, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found.\". not found.");
        org.junit.Assert.assertNotNull(customerList14);
    }

    @Test
    public void test1435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1435");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList5 = rentalSystem0.getVehicles();
        java.lang.String str7 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found. not found.");
        java.util.List<org.example.Vehicle> vehicleList8 = rentalSystem0.getVehicles();
        java.lang.String str10 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found. not found.\".");
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\".\". not found. not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found.\".\".");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertNotNull(vehicleList5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found. not found.\"." + "'", str7, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found. not found.\".");
        org.junit.Assert.assertNotNull(vehicleList8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found. not found.\". not found." + "'", str10, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found. not found.\". not found.");
    }

    @Test
    public void test1436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1436");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.returnVehicle("Vehicle with ID  not found.");
        java.lang.String str10 = rentalSystem0.returnVehicle("hi!");
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\".", (double) 2);
        java.lang.String str17 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.");
        java.util.List<org.example.Customer> customerList18 = rentalSystem0.getCustomers();
        java.lang.Class<?> wildcardClass19 = customerList18.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID  not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID  not found. not found.");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID hi! not found." + "'", str10, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\"." + "'", str17, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".");
        org.junit.Assert.assertNotNull(customerList18);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test1437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1437");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID  not found.", 100);
        java.lang.String str10 = rentalSystem0.returnVehicle("");
        rentalSystem0.addVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found. not found.\".\". not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".", 100.0d);
        java.lang.Class<?> wildcardClass16 = rentalSystem0.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID  not found." + "'", str10, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test1438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1438");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("hi!");
        java.lang.String str5 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found. not found.\".");
        java.lang.String str12 = rentalSystem0.rentVehicle("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\".\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\". not found. not found. not found.\".", (int) '#');
        java.lang.String str16 = rentalSystem0.rentVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found. not found. not found.\".\".", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\". not found. not found. not found.", 0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID hi! not found." + "'", str3, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found." + "'", str5, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found. not found.\".\"." + "'", str8, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found. not found.\".\".");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\".\". not found." + "'", str12, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\".\". not found.");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found. not found. not found.\".\". not found." + "'", str16, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found. not found. not found.\".\". not found.");
    }

    @Test
    public void test1439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1439");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList4 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID  not found. not found.", "hi!");
        int int8 = rentalSystem0.getAvailableVehicleCount();
        int int9 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str13 = rentalSystem0.rentVehicle("No vehicles match the keyword \"hi!\".", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found. not found.\".\".", 0);
        int int14 = rentalSystem0.getAvailableVehicleCount();
        int int15 = rentalSystem0.getAvailableVehicleCount();
        // The following exception was thrown during execution in test generation
        try {
            rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found. not found. not found.", "");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Customer ID cannot be null or empty");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(vehicleList4);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID No vehicles match the keyword \"hi!\". not found." + "'", str13, "Vehicle with ID No vehicles match the keyword \"hi!\". not found.");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
    }

    @Test
    public void test1440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1440");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID  not found.", 100);
        java.lang.String str12 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID  not found.\".", "Vehicle with ID Vehicle with ID hi! not found. not found.", (int) (short) -1);
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.");
        java.util.List<org.example.Vehicle> vehicleList16 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList17 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList18 = rentalSystem0.getCustomers();
        java.lang.String str20 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found. not found.");
        java.lang.String str22 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found.");
        java.lang.String str24 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\". not found.\". not found.\".\". not found.");
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\". not found. not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found." + "'", str12, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList16);
        org.junit.Assert.assertNotNull(vehicleList17);
        org.junit.Assert.assertNotNull(customerList18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found. not found. not found." + "'", str20, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found. not found." + "'", str22, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found. not found.");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\". not found.\". not found.\".\". not found.\"." + "'", str24, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\". not found.\". not found.\".\". not found.\".");
    }

    @Test
    public void test1441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1441");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList4 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID  not found. not found.", "hi!");
        java.lang.String str11 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID hi! not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".", (int) '4');
        java.lang.String str13 = rentalSystem0.returnVehicle("");
        int int14 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Vehicle> vehicleList15 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList16 = rentalSystem0.getCustomers();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(vehicleList4);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found." + "'", str11, "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID  not found." + "'", str13, "Vehicle with ID  not found.");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(vehicleList15);
        org.junit.Assert.assertNotNull(customerList16);
    }

    @Test
    public void test1442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1442");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID hi! not found.\".", "Vehicle with ID Vehicle with ID  not found. not found.");
        java.lang.String str8 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"\". not found.");
        java.lang.String str10 = rentalSystem0.searchVehicle("Vehicle with ID hi! not found.");
        java.lang.String str14 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found.\". not found.\".", "Vehicle with ID No vehicles match the keyword \"hi!\". not found.", (int) (byte) 0);
        java.lang.String str16 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.");
        java.lang.String str18 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID  not found.\".");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found.");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "No vehicles match the keyword \"Vehicle with ID hi! not found.\"." + "'", str10, "No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found.\". not found.\". not found." + "'", str14, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found.\". not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found." + "'", str16, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID  not found.\".\"." + "'", str18, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID  not found.\".\".");
    }

    @Test
    public void test1443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1443");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("");
        rentalSystem0.addVehicle("Vehicle with ID  not found.", "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.", "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.", (double) (short) 0);
        java.util.List<org.example.Customer> customerList9 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList10 = rentalSystem0.getVehicles();
        java.lang.Class<?> wildcardClass11 = vehicleList10.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID  not found." + "'", str3, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList9);
        org.junit.Assert.assertNotNull(vehicleList10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test1444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1444");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("");
        int int4 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Vehicle> vehicleList5 = rentalSystem0.getVehicles();
        java.lang.String str7 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.");
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".", "Vehicle with ID hi! not found.");
        java.lang.String str12 = rentalSystem0.searchVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\".");
        java.util.List<org.example.Vehicle> vehicleList13 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList14 = rentalSystem0.getVehicles();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID  not found." + "'", str3, "Vehicle with ID  not found.");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(vehicleList5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.\"." + "'", str7, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.\".");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\".\"." + "'", str12, "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\".\".");
        org.junit.Assert.assertNotNull(vehicleList13);
        org.junit.Assert.assertNotNull(vehicleList14);
    }

    @Test
    public void test1445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1445");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.lang.String str9 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.", (int) (byte) 1);
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID  not found. not found.", "No vehicles match the keyword \"\".", "Vehicle with ID  not found.", (double) 1L);
        java.lang.String str16 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\". not found.");
        java.lang.String str18 = rentalSystem0.searchVehicle("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\".\".");
        java.lang.Class<?> wildcardClass19 = rentalSystem0.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found." + "'", str9, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\". not found.\"." + "'", str16, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\". not found.\".");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\".\".\"." + "'", str18, "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\".\".\".");
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test1446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1446");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID  not found.\".", "hi!");
        int int10 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList11 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList12 = rentalSystem0.getCustomers();
        java.lang.String str14 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.");
        int int15 = rentalSystem0.getAvailableVehicleCount();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(customerList11);
        org.junit.Assert.assertNotNull(customerList12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\"." + "'", str14, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
    }

    @Test
    public void test1447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1447");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        int int7 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str9 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID  not found.\".");
        java.lang.String str13 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID hi! not found. not found.", "Vehicle with ID Vehicle with ID  not found. not found.", 100);
        java.lang.String str15 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\". not found.\". not found. not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found." + "'", str9, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found." + "'", str13, "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\". not found.\". not found. not found. not found. not found." + "'", str15, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\". not found.\". not found. not found. not found. not found.");
    }

    @Test
    public void test1448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1448");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.returnVehicle("");
        java.util.List<org.example.Customer> customerList9 = rentalSystem0.getCustomers();
        java.lang.String str11 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.");
        java.lang.String str15 = rentalSystem0.rentVehicle("Vehicle with ID No vehicles match the keyword \"\". not found.", "ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n", (int) (short) -1);
        java.util.List<org.example.Customer> customerList16 = rentalSystem0.getCustomers();
        java.lang.String str20 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.", "Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found.", (int) (short) 10);
        java.util.List<org.example.Vehicle> vehicleList21 = rentalSystem0.getVehicles();
        java.lang.String str25 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.\".\".", (-1));
        // The following exception was thrown during execution in test generation
        try {
            rentalSystem0.addVehicle("", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found. not found.\". not found. not found.\". not found.\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\". not found.\". not found.", (double) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Vehicle ID cannot be null or empty");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID  not found." + "'", str8, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList9);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found." + "'", str11, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found.");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found." + "'", str15, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found.");
        org.junit.Assert.assertNotNull(customerList16);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found." + "'", str20, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList21);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\". not found." + "'", str25, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\". not found.");
    }

    @Test
    public void test1449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1449");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList5 = rentalSystem0.getVehicles();
        java.lang.String str7 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found. not found.");
        java.lang.String str11 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found. not found.\".", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\". not found. not found. not found.", (int) (short) 100);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertNotNull(vehicleList5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found. not found.\"." + "'", str7, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found. not found.\".");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found. not found.\". not found." + "'", str11, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found. not found.\". not found.");
    }

    @Test
    public void test1450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1450");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID  not found.\".", "hi!");
        int int10 = rentalSystem0.getAvailableVehicleCount();
        int int11 = rentalSystem0.getAvailableVehicleCount();
        java.lang.Class<?> wildcardClass12 = rentalSystem0.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test1451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1451");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.");
        rentalSystem0.addCustomer("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\".");
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\".", "No vehicles match the keyword \"Vehicle with ID hi! not found.\".", (double) (short) 100);
        java.util.List<org.example.Customer> customerList18 = rentalSystem0.getCustomers();
        java.lang.String str20 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found. not found.");
        java.lang.String str22 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID hi! not found. not found.");
        java.lang.Class<?> wildcardClass23 = rentalSystem0.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertNotNull(customerList18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found. not found. not found." + "'", str20, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\"." + "'", str22, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\".");
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test1452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1452");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        int int7 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList8 = rentalSystem0.getCustomers();
        int int9 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str13 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID  not found.\".", "No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".", (int) 'a');
        java.lang.String str17 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\".", (int) 'a');
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\".\". not found. not found. not found. not found.\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found. not found. not found.\". not found. not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found. not found. not found. not found.\". not found.\". not found.", (double) (short) 0);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(customerList8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found." + "'", str13, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found. not found." + "'", str17, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found. not found.");
    }

    @Test
    public void test1453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1453");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.");
        rentalSystem0.addCustomer("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\".");
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\".", "No vehicles match the keyword \"Vehicle with ID hi! not found.\".", (double) (short) 100);
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\". not found.\".", "ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found.", 10.0d);
        java.lang.String str24 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID  not found.\".");
        java.util.List<org.example.Vehicle> vehicleList25 = rentalSystem0.getVehicles();
        java.lang.Class<?> wildcardClass26 = vehicleList25.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID  not found.\".\"." + "'", str24, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID  not found.\".\".");
        org.junit.Assert.assertNotNull(vehicleList25);
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test1454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1454");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID hi! not found.\".", "Vehicle with ID Vehicle with ID  not found. not found.");
        java.lang.String str8 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"\". not found.");
        java.lang.String str10 = rentalSystem0.searchVehicle("Vehicle with ID hi! not found.");
        java.lang.String str14 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found.\". not found.\".", "Vehicle with ID No vehicles match the keyword \"hi!\". not found.", (int) (byte) 0);
        java.lang.String str16 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.");
        java.lang.String str20 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.\". not found. not found. not found. not found. not found.\".", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\". not found.", (int) 'a');
        java.util.List<org.example.Vehicle> vehicleList21 = rentalSystem0.getVehicles();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found.");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "No vehicles match the keyword \"Vehicle with ID hi! not found.\"." + "'", str10, "No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found.\". not found.\". not found." + "'", str14, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found.\". not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found." + "'", str16, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.\". not found. not found. not found. not found. not found.\". not found." + "'", str20, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.\". not found. not found. not found. not found. not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList21);
    }

    @Test
    public void test1455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1455");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.lang.String str9 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.", (int) (byte) 1);
        java.util.List<org.example.Vehicle> vehicleList10 = rentalSystem0.getVehicles();
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found.", "Vehicle with ID Vehicle with ID Vehicle is already available. not found. not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\".\".", (double) (byte) 100);
        java.util.List<org.example.Vehicle> vehicleList16 = rentalSystem0.getVehicles();
        java.lang.String str18 = rentalSystem0.searchVehicle("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\".\".");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found." + "'", str9, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList10);
        org.junit.Assert.assertNotNull(vehicleList16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\".\".\"." + "'", str18, "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\".\".\".");
    }

    @Test
    public void test1456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1456");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.returnVehicle("Vehicle with ID  not found.");
        java.lang.String str10 = rentalSystem0.searchVehicle("Vehicle with ID hi! not found.");
        java.lang.String str12 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found.");
        java.lang.String str14 = rentalSystem0.searchVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\".\".");
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.\".", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found. not found. not found. not found. not found. not found.", "No vehicles match the keyword \"Vehicle with ID hi! not found.\".", (double) 0);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID  not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID  not found. not found.");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "No vehicles match the keyword \"Vehicle with ID hi! not found.\"." + "'", str10, "No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found." + "'", str12, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\".\".\"." + "'", str14, "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\".\".\".");
    }

    @Test
    public void test1457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1457");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.searchVehicle("Vehicle with ID  not found.");
        java.lang.String str10 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".");
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\". not found. not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found. not found. not found.\". not found.", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID  not found.\".\".\". not found.", (double) 3);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "No vehicles match the keyword \"Vehicle with ID  not found.\"." + "'", str8, "No vehicles match the keyword \"Vehicle with ID  not found.\".");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\"." + "'", str10, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\".");
    }

    @Test
    public void test1458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1458");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList7 = rentalSystem0.getVehicles();
        java.lang.String str11 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID hi! not found.\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.", (int) (byte) 100);
        int int12 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"ID: Vehicle with ID  not found., Model: Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\"., Daily Rate: $1.0, Status: Available\n\". not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\". not found. not found. not found. not found.\".", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"\".\". not found.\".", (double) (byte) 1);
        int int18 = rentalSystem0.getAvailableVehicleCount();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertNotNull(vehicleList7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found." + "'", str11, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
    }

    @Test
    public void test1459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1459");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.lang.String str7 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".");
        java.util.List<org.example.Vehicle> vehicleList8 = rentalSystem0.getVehicles();
        java.lang.Class<?> wildcardClass9 = vehicleList8.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\"." + "'", str7, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".");
        org.junit.Assert.assertNotNull(vehicleList8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test1460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1460");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID  not found.", 100);
        java.lang.String str12 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID  not found.\".", "Vehicle with ID Vehicle with ID hi! not found. not found.", (int) (short) -1);
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\". not found.", "No vehicles match the keyword \"Vehicle with ID  not found.\".", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.\".", (double) (short) 1);
        java.util.List<org.example.Vehicle> vehicleList18 = rentalSystem0.getVehicles();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found." + "'", str12, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList18);
    }

    @Test
    public void test1461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1461");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID  not found. not found.", "No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        java.lang.String str8 = rentalSystem0.rentVehicle("hi!", "No vehicles match the keyword \"Vehicle with ID  not found.\".", 100);
        java.lang.String str10 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID hi! not found. not found.");
        java.lang.String str12 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.");
        java.lang.String str14 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.");
        java.lang.String str18 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\". not found.\". not found. not found. not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\".", (int) (short) 100);
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found. not found.\". not found. not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID hi! not found." + "'", str8, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found." + "'", str10, "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found." + "'", str12, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.\"." + "'", str14, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.\".");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\". not found.\". not found. not found. not found. not found." + "'", str18, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\". not found.\". not found. not found. not found. not found.");
    }

    @Test
    public void test1462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1462");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList7 = rentalSystem0.getVehicles();
        java.lang.String str11 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID hi! not found.\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.", (int) (byte) 100);
        java.lang.String str13 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".");
        java.lang.String str17 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".", (int) (byte) -1);
        java.util.List<org.example.Vehicle> vehicleList18 = rentalSystem0.getVehicles();
        java.lang.String str20 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\". not found.");
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found. not found.", "hi!", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\". not found.", 0.0d);
        java.util.List<org.example.Vehicle> vehicleList26 = rentalSystem0.getVehicles();
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\".\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found.\".", 0.0d);
        java.util.List<org.example.Customer> customerList32 = rentalSystem0.getCustomers();
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found. not found. not found.\". not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\". not found. not found. not found.\".", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\". not found. not found. not found.", (double) 10);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertNotNull(vehicleList7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found." + "'", str11, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\"." + "'", str13, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\".");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found." + "'", str17, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\". not found. not found." + "'", str20, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\". not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList26);
        org.junit.Assert.assertNotNull(customerList32);
    }

    @Test
    public void test1463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1463");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.", "hi!", (int) (short) 100);
        java.lang.String str10 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".");
        java.util.List<org.example.Customer> customerList11 = rentalSystem0.getCustomers();
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found. not found.\". not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found.\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\". not found.", (double) (short) 100);
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID  not found.\".", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\". not found. not found. not found.");
        java.lang.Class<?> wildcardClass20 = rentalSystem0.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\"." + "'", str10, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\".");
        org.junit.Assert.assertNotNull(customerList11);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test1464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1464");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        int int7 = rentalSystem0.getAvailableVehicleCount();
        int int8 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Vehicle> vehicleList9 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found.", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\". not found.\".");
        java.lang.String str14 = rentalSystem0.returnVehicle("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\".\".\".");
        // The following exception was thrown during execution in test generation
        try {
            rentalSystem0.addCustomer("", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found. not found. not found. not found. not found.");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Name cannot be null or empty");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(vehicleList9);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\".\".\". not found." + "'", str14, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\".\".\". not found.");
    }

    @Test
    public void test1465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1465");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID  not found.", 100);
        java.lang.String str12 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID  not found.\".", "Vehicle with ID Vehicle with ID hi! not found. not found.", (int) (short) -1);
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\". not found.", "No vehicles match the keyword \"Vehicle with ID  not found.\".", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.\".", (double) (short) 1);
        java.lang.String str19 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found.");
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"\". not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\". not found.\". not found.", 10.0d);
        java.util.List<org.example.Vehicle> vehicleList25 = rentalSystem0.getVehicles();
        java.lang.Class<?> wildcardClass26 = vehicleList25.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found." + "'", str12, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found.\"." + "'", str19, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found.\".");
        org.junit.Assert.assertNotNull(vehicleList25);
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test1466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1466");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList7 = rentalSystem0.getVehicles();
        java.lang.String str11 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID hi! not found.\".", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.", (int) (byte) 100);
        int int12 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Vehicle> vehicleList13 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList14 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\".\".\". not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found. not found. not found.\". not found. not found.\".");
        java.util.List<org.example.Vehicle> vehicleList18 = rentalSystem0.getVehicles();
        java.lang.String str20 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\". not found. not found. not found.\". not found.");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertNotNull(vehicleList7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found." + "'", str11, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(vehicleList13);
        org.junit.Assert.assertNotNull(customerList14);
        org.junit.Assert.assertNotNull(vehicleList18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\". not found. not found. not found.\". not found. not found." + "'", str20, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\". not found. not found. not found.\". not found. not found.");
    }

    @Test
    public void test1467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1467");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n", "Vehicle with ID No vehicles match the keyword \"hi!\". not found.", (int) (short) 0);
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found. not found. not found.\".", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\". not found.\".");
        java.lang.String str12 = rentalSystem0.rentVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\". not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found.\". not found. not found.", 0);
        java.util.List<org.example.Customer> customerList13 = rentalSystem0.getCustomers();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found." + "'", str5, "Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\". not found. not found." + "'", str12, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\". not found. not found.");
        org.junit.Assert.assertNotNull(customerList13);
    }

    @Test
    public void test1468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1468");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.returnVehicle("Vehicle with ID  not found.");
        java.lang.String str12 = rentalSystem0.rentVehicle("Vehicle with ID hi! not found.", "Vehicle with ID Vehicle with ID  not found. not found.", (int) (byte) 10);
        java.lang.String str14 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        java.util.List<org.example.Vehicle> vehicleList15 = rentalSystem0.getVehicles();
        java.lang.String str19 = rentalSystem0.rentVehicle("", "Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.", (int) (byte) 100);
        java.lang.String str21 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.");
        java.util.List<org.example.Vehicle> vehicleList22 = rentalSystem0.getVehicles();
        java.lang.String str24 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\". not found. not found.");
        java.lang.String str28 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\". not found. not found. not found.", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\".\". not found.", 2);
        java.util.List<org.example.Customer> customerList29 = rentalSystem0.getCustomers();
        // The following exception was thrown during execution in test generation
        try {
            rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.\".\". not found.", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\". not found.\". not found. not found. not found. not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\".\".", (double) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Daily rate cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID  not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID  not found. not found.");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID Vehicle with ID hi! not found. not found." + "'", str12, "Vehicle with ID Vehicle with ID hi! not found. not found.");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found." + "'", str14, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList15);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Vehicle with ID  not found." + "'", str19, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.\"." + "'", str21, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\". not found.\".");
        org.junit.Assert.assertNotNull(vehicleList22);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\". not found. not found. not found." + "'", str24, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\". not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\". not found. not found. not found. not found." + "'", str28, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\". not found. not found. not found. not found.");
        org.junit.Assert.assertNotNull(customerList29);
    }

    @Test
    public void test1469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1469");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        int int7 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str9 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".");
        java.lang.String str11 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\". not found.");
        java.lang.String str15 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found.", 2);
        java.lang.Class<?> wildcardClass16 = rentalSystem0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\". not found." + "'", str9, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\". not found.\"." + "'", str11, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\". not found.\".");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found." + "'", str15, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found.");
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test1470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1470");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        int int7 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addCustomer("hi!", "Vehicle with ID Vehicle with ID  not found. not found.");
        java.util.List<org.example.Customer> customerList11 = rentalSystem0.getCustomers();
        java.lang.String str13 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found.");
        java.util.List<org.example.Customer> customerList14 = rentalSystem0.getCustomers();
        java.lang.Class<?> wildcardClass15 = customerList14.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(customerList11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found.\"." + "'", str13, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found.\".");
        org.junit.Assert.assertNotNull(customerList14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test1471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1471");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID  not found.\".", "hi!");
        int int10 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList11 = rentalSystem0.getCustomers();
        java.lang.String str15 = rentalSystem0.rentVehicle("ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.", 100);
        java.util.List<org.example.Vehicle> vehicleList16 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"\". not found.\". not found. not found. not found.", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found. not found.");
        java.lang.Class<?> wildcardClass20 = rentalSystem0.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(customerList11);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found." + "'", str15, "Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.");
        org.junit.Assert.assertNotNull(vehicleList16);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test1472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1472");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("hi!");
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        int int5 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str9 = rentalSystem0.rentVehicle("No vehicles match the keyword \"\".", "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.", (int) (short) 10);
        java.lang.String str13 = rentalSystem0.rentVehicle("No vehicles match the keyword \"\".", "", (-1));
        int int14 = rentalSystem0.getAvailableVehicleCount();
        int int15 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str17 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\".");
        java.lang.String str19 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found. not found. not found.", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\".\". not found.");
        java.lang.Class<?> wildcardClass23 = rentalSystem0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID hi! not found." + "'", str3, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Vehicle with ID No vehicles match the keyword \"\". not found." + "'", str9, "Vehicle with ID No vehicles match the keyword \"\". not found.");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID No vehicles match the keyword \"\". not found." + "'", str13, "Vehicle with ID No vehicles match the keyword \"\". not found.");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\".\"." + "'", str17, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\".\".");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found." + "'", str19, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.");
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test1473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1473");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.lang.String str7 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".");
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID  not found.");
        java.lang.String str14 = rentalSystem0.rentVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.", 0);
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\". not found.\".", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\".\". not found. not found. not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\"." + "'", str7, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found." + "'", str14, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.");
    }

    @Test
    public void test1474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1474");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("hi!");
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList5 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList7 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList8 = rentalSystem0.getCustomers();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID hi! not found." + "'", str3, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertNotNull(customerList5);
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertNotNull(vehicleList7);
        org.junit.Assert.assertNotNull(customerList8);
    }

    @Test
    public void test1475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1475");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.rentVehicle("", "No vehicles match the keyword \"Vehicle with ID hi! not found.\".", (int) (byte) 100);
        java.lang.String str10 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.");
        java.lang.String str14 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.", 0);
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\". not found. not found. not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found. not found. not found. not found.\". not found.", (double) 0L);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID  not found." + "'", str8, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found." + "'", str10, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found. not found." + "'", str14, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found. not found.");
    }

    @Test
    public void test1476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1476");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("");
        int int4 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Vehicle> vehicleList5 = rentalSystem0.getVehicles();
        java.lang.String str7 = rentalSystem0.searchVehicle("hi!");
        java.util.List<org.example.Vehicle> vehicleList8 = rentalSystem0.getVehicles();
        java.lang.String str10 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.");
        java.lang.String str12 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found. not found.");
        java.util.List<org.example.Customer> customerList13 = rentalSystem0.getCustomers();
        java.lang.Class<?> wildcardClass14 = rentalSystem0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID  not found." + "'", str3, "Vehicle with ID  not found.");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(vehicleList5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "No vehicles match the keyword \"hi!\"." + "'", str7, "No vehicles match the keyword \"hi!\".");
        org.junit.Assert.assertNotNull(vehicleList8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found." + "'", str10, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found. not found.\"." + "'", str12, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found. not found.\".");
        org.junit.Assert.assertNotNull(customerList13);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test1477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1477");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        int int7 = rentalSystem0.getAvailableVehicleCount();
        int int8 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Vehicle> vehicleList9 = rentalSystem0.getVehicles();
        java.lang.String str11 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\". not found. not found.");
        java.util.List<org.example.Customer> customerList12 = rentalSystem0.getCustomers();
        java.lang.Class<?> wildcardClass13 = rentalSystem0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(vehicleList9);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\". not found. not found. not found." + "'", str11, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\". not found. not found. not found.");
        org.junit.Assert.assertNotNull(customerList12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test1478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1478");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("");
        rentalSystem0.addVehicle("Vehicle with ID  not found.", "Vehicle with ID hi! not found.", "Vehicle with ID Vehicle with ID hi! not found. not found.", (double) '4');
        int int9 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Vehicle> vehicleList10 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList11 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList12 = rentalSystem0.getVehicles();
        java.lang.String str14 = rentalSystem0.searchVehicle("No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID  not found." + "'", str3, "Vehicle with ID  not found.");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(vehicleList10);
        org.junit.Assert.assertNotNull(customerList11);
        org.junit.Assert.assertNotNull(vehicleList12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\"." + "'", str14, "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\".");
    }

    @Test
    public void test1479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1479");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.lang.String str5 = rentalSystem0.returnVehicle("Vehicle with ID  not found.");
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID  not found.\".", "No vehicles match the keyword \"\".");
        java.util.List<org.example.Vehicle> vehicleList9 = rentalSystem0.getVehicles();
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.\".", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\".", (double) 100.0f);
        java.util.List<org.example.Customer> customerList15 = rentalSystem0.getCustomers();
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found. not found. not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".\". not found.\". not found. not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found. not found.", (double) (byte) 10);
        java.lang.String str22 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\". not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID Vehicle with ID  not found. not found." + "'", str5, "Vehicle with ID Vehicle with ID  not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList9);
        org.junit.Assert.assertNotNull(customerList15);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\". not found. not found. not found." + "'", str22, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\". not found. not found. not found.");
    }

    @Test
    public void test1480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1480");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID  not found.", 100);
        java.lang.String str12 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID  not found.\".", "Vehicle with ID Vehicle with ID hi! not found. not found.", (int) (short) -1);
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.", "ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n", "Vehicle with ID Vehicle with ID hi! not found. not found.", 100.0d);
        java.util.List<org.example.Vehicle> vehicleList18 = rentalSystem0.getVehicles();
        java.lang.String str20 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".");
        rentalSystem0.addVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found. not found.", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found. not found. not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.", 0.0d);
        java.lang.String str29 = rentalSystem0.rentVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found. not found. not found.\".\".", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\". not found. not found. not found. not found. not found.", 0);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found." + "'", str12, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\"." + "'", str20, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found. not found. not found.\".\". not found." + "'", str29, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found. not found. not found.\".\". not found.");
    }

    @Test
    public void test1481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1481");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID  not found. not found.", "No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        java.lang.String str8 = rentalSystem0.rentVehicle("hi!", "No vehicles match the keyword \"Vehicle with ID  not found.\".", 100);
        java.lang.String str10 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID hi! not found. not found.");
        rentalSystem0.addVehicle("ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.", "No vehicles match the keyword \"\".", (double) (byte) 10);
        java.lang.String str17 = rentalSystem0.returnVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".");
        rentalSystem0.addVehicle("Vehicle with ID ID: Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found., Model: Vehicle with ID Vehicle with ID hi! not found. not found., Type: No vehicles match the keyword \"hi!\"., Daily Rate: $1.0, Status: Available\nID: Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found. not found.\". not found., Model: No vehicles match the keyword \"\"., Type: No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found.\"., Daily Rate: $100.0, Status: Available\n not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found.\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found. not found. not found. not found.\".", (double) (byte) 1);
        java.util.List<org.example.Vehicle> vehicleList23 = rentalSystem0.getVehicles();
        java.lang.Class<?> wildcardClass24 = vehicleList23.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID hi! not found." + "'", str8, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found." + "'", str10, "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found." + "'", str17, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.");
        org.junit.Assert.assertNotNull(vehicleList23);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test1482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1482");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID  not found. not found.", "No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        java.lang.String str8 = rentalSystem0.rentVehicle("hi!", "No vehicles match the keyword \"Vehicle with ID  not found.\".", 100);
        java.lang.String str10 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID hi! not found. not found.");
        rentalSystem0.addVehicle("ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.", "No vehicles match the keyword \"\".", (double) (byte) 10);
        java.lang.String str17 = rentalSystem0.returnVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".");
        java.util.List<org.example.Vehicle> vehicleList18 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList19 = rentalSystem0.getVehicles();
        // The following exception was thrown during execution in test generation
        try {
            rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found. not found. not found.", "");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Customer ID cannot be null or empty");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID hi! not found." + "'", str8, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found." + "'", str10, "Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found." + "'", str17, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found.");
        org.junit.Assert.assertNotNull(vehicleList18);
        org.junit.Assert.assertNotNull(vehicleList19);
    }

    @Test
    public void test1483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1483");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList5 = rentalSystem0.getVehicles();
        java.lang.String str9 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".", "No vehicles match the keyword \"Vehicle with ID  not found.\".", (int) ' ');
        java.lang.String str13 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID  not found. not found.", "", (int) (byte) -1);
        int int14 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.", "Vehicle with ID hi! not found.");
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found.", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\".", (double) 1.0f);
        rentalSystem0.addVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found.\". not found.\".", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\". not found.", 0.0d);
        java.lang.String str29 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found.\".");
        java.util.List<org.example.Customer> customerList30 = rentalSystem0.getCustomers();
        int int31 = rentalSystem0.getAvailableVehicleCount();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertNotNull(vehicleList5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found." + "'", str9, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str13, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found.\".\"." + "'", str29, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found.\".\".");
        org.junit.Assert.assertNotNull(customerList30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2 + "'", int31 == 2);
    }

    @Test
    public void test1484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1484");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.searchVehicle("Vehicle with ID  not found.");
        rentalSystem0.addVehicle("hi!", "Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID hi! not found.", (double) 0);
        rentalSystem0.addCustomer("Vehicle with ID hi! not found.", "hi!");
        java.util.List<org.example.Vehicle> vehicleList17 = rentalSystem0.getVehicles();
        java.lang.String str19 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID  not found.\".");
        int int20 = rentalSystem0.getAvailableVehicleCount();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "No vehicles match the keyword \"Vehicle with ID  not found.\"." + "'", str8, "No vehicles match the keyword \"Vehicle with ID  not found.\".");
        org.junit.Assert.assertNotNull(vehicleList17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID  not found.\".\"." + "'", str19, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID  not found.\".\".");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
    }

    @Test
    public void test1485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1485");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        int int2 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        java.lang.String str5 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\".");
        java.lang.String str9 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\". not found.\".", 0);
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found.\".", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID  not found.\". not found.\".", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found.\". not found.\".\".", (double) 10);
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\". not found." + "'", str5, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\". not found." + "'", str9, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\". not found.");
    }

    @Test
    public void test1486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1486");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.util.List<org.example.Vehicle> vehicleList2 = rentalSystem0.getVehicles();
        java.lang.String str4 = rentalSystem0.searchVehicle("hi!");
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\".\".");
        java.util.List<org.example.Vehicle> vehicleList8 = rentalSystem0.getVehicles();
        rentalSystem0.addCustomer("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\". not found. not found. not found.\". not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\". not found. not found. not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertNotNull(vehicleList2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "No vehicles match the keyword \"hi!\"." + "'", str4, "No vehicles match the keyword \"hi!\".");
        org.junit.Assert.assertNotNull(vehicleList8);
    }

    @Test
    public void test1487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1487");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.");
        java.lang.String str10 = rentalSystem0.searchVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".");
        java.util.List<org.example.Customer> customerList11 = rentalSystem0.getCustomers();
        java.lang.String str13 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle is already available. not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\"." + "'", str8, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".\"." + "'", str10, "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\".\".");
        org.junit.Assert.assertNotNull(customerList11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle is already available. not found.\"." + "'", str13, "No vehicles match the keyword \"Vehicle with ID Vehicle is already available. not found.\".");
    }

    @Test
    public void test1488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1488");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        rentalSystem0.addCustomer("hi!", "Vehicle with ID Vehicle with ID  not found. not found.");
        java.util.List<org.example.Vehicle> vehicleList9 = rentalSystem0.getVehicles();
        java.lang.String str13 = rentalSystem0.rentVehicle("hi!", "No vehicles match the keyword \"Vehicle with ID  not found.\".", (int) '4');
        java.lang.String str15 = rentalSystem0.returnVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found.");
        java.lang.String str17 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found. not found. not found.");
        java.lang.Class<?> wildcardClass18 = rentalSystem0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList9);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID hi! not found." + "'", str13, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found." + "'", str15, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found. not found.");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found. not found. not found. not found." + "'", str17, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\".\". not found. not found. not found. not found. not found.");
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test1489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1489");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.searchVehicle("Vehicle with ID  not found.");
        int int9 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\". not found.\".", "No vehicles match the keyword \"Vehicle with ID hi! not found.\".");
        java.util.List<org.example.Customer> customerList13 = rentalSystem0.getCustomers();
        java.lang.String str17 = rentalSystem0.rentVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found.\". not found.", "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\". not found. not found. not found. not found.", (int) (short) -1);
        java.lang.String str21 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.\".", 10);
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found.\". not found.", "ID: Vehicle with ID No vehicles match the keyword \"Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found.\". not found., Model: No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\"., Type: No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\". not found. not found. not found.\"., Daily Rate: $100.0, Status: Available\n", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\". not found. not found.\".\".", (double) '4');
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "No vehicles match the keyword \"Vehicle with ID  not found.\"." + "'", str8, "No vehicles match the keyword \"Vehicle with ID  not found.\".");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(customerList13);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found.\". not found. not found." + "'", str17, "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found.\". not found. not found.");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found." + "'", str21, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.");
    }

    @Test
    public void test1490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1490");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.lang.String str10 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found.", "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found.", (int) (short) -1);
        java.lang.String str12 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found. not found.");
        java.lang.String str16 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\". not found.\".", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found.\".", (int) (byte) 10);
        java.util.List<org.example.Vehicle> vehicleList17 = rentalSystem0.getVehicles();
        // The following exception was thrown during execution in test generation
        try {
            rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found.\". not found.", "", "No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\". not found.\".\".", (double) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Model cannot be null or empty");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found." + "'", str10, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID hi! not found. not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found. not found. not found." + "'", str12, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\". not found.\". not found." + "'", str16, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\". not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList17);
    }

    @Test
    public void test1491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1491");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        java.lang.String str8 = rentalSystem0.searchVehicle("Vehicle with ID  not found.");
        rentalSystem0.addVehicle("hi!", "Vehicle with ID Vehicle with ID  not found. not found.", "Vehicle with ID hi! not found.", (double) 0);
        rentalSystem0.addCustomer("Vehicle with ID hi! not found.", "hi!");
        java.util.List<org.example.Vehicle> vehicleList17 = rentalSystem0.getVehicles();
        java.lang.String str19 = rentalSystem0.searchVehicle("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID  not found.\".\".");
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\". not found.\". not found. not found.", "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found. not found.\".");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "No vehicles match the keyword \"Vehicle with ID  not found.\"." + "'", str8, "No vehicles match the keyword \"Vehicle with ID  not found.\".");
        org.junit.Assert.assertNotNull(vehicleList17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID  not found.\".\".\"." + "'", str19, "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID  not found.\".\".\".");
    }

    @Test
    public void test1492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1492");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str3 = rentalSystem0.returnVehicle("hi!");
        java.util.List<org.example.Customer> customerList4 = rentalSystem0.getCustomers();
        int int5 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList7 = rentalSystem0.getCustomers();
        java.lang.String str9 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found. not found. not found.");
        java.lang.String str11 = rentalSystem0.returnVehicle("");
        int int12 = rentalSystem0.getAvailableVehicleCount();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Vehicle with ID hi! not found." + "'", str3, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertNotNull(customerList4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertNotNull(customerList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found. not found. not found. not found." + "'", str9, "Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found. not found. not found. not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Vehicle with ID  not found." + "'", str11, "Vehicle with ID  not found.");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
    }

    @Test
    public void test1493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1493");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.lang.String str9 = rentalSystem0.rentVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.", (int) (byte) 1);
        java.lang.String str11 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\". not found.");
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found.\". not found.");
        rentalSystem0.addCustomer("Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found. not found.", "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found.\".");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found." + "'", str9, "Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\". not found.\"." + "'", str11, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found. not found.\".\". not found.\".");
    }

    @Test
    public void test1494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1494");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        int int2 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList3 = rentalSystem0.getCustomers();
        int int4 = rentalSystem0.getAvailableVehicleCount();
        rentalSystem0.addCustomer("No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\".", "No vehicles match the keyword \"Vehicle with ID  not found.\".");
        int int8 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str10 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\".");
        java.lang.String str12 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\".\".\". not found. not found. not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(customerList3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found." + "'", str10, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID hi! not found. not found.\". not found.");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\".\".\". not found. not found. not found.\"." + "'", str12, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found. not found. not found.\".\".\".\". not found. not found. not found.\".");
    }

    @Test
    public void test1495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1495");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.returnVehicle("Vehicle with ID  not found.");
        int int9 = rentalSystem0.getAvailableVehicleCount();
        int int10 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Vehicle> vehicleList11 = rentalSystem0.getVehicles();
        java.lang.String str13 = rentalSystem0.returnVehicle("");
        java.util.List<org.example.Customer> customerList14 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList15 = rentalSystem0.getVehicles();
        java.lang.String str17 = rentalSystem0.searchVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\". not found.");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID  not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID  not found. not found.");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(vehicleList11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Vehicle with ID  not found." + "'", str13, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList14);
        org.junit.Assert.assertNotNull(vehicleList15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\". not found.\"." + "'", str17, "No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\". not found.\".");
    }

    @Test
    public void test1496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1496");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID  not found.\".", "hi!");
        rentalSystem0.addCustomer("No vehicles match the keyword \"hi!\".", "hi!");
        rentalSystem0.addVehicle("Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID hi! not found.\". not found.\".\". not found. not found. not found. not found. not found.\". not found.", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\". not found.", "No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"\". not found. not found. not found.\".\".\".", (double) 10);
        java.lang.Class<?> wildcardClass18 = rentalSystem0.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test1497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1497");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID  not found.\".", "hi!");
        int int10 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str12 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID  not found. not found.");
        java.lang.String str14 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.");
        java.util.List<org.example.Customer> customerList15 = rentalSystem0.getCustomers();
        java.util.List<org.example.Vehicle> vehicleList16 = rentalSystem0.getVehicles();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str12, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\"." + "'", str14, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".");
        org.junit.Assert.assertNotNull(customerList15);
        org.junit.Assert.assertNotNull(vehicleList16);
    }

    @Test
    public void test1498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1498");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        java.lang.String str8 = rentalSystem0.returnVehicle("Vehicle with ID  not found.");
        java.lang.String str10 = rentalSystem0.returnVehicle("hi!");
        java.lang.String str12 = rentalSystem0.returnVehicle("No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.\".\".\".");
        java.util.List<org.example.Vehicle> vehicleList13 = rentalSystem0.getVehicles();
        java.lang.Class<?> wildcardClass14 = rentalSystem0.getClass();
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Vehicle with ID Vehicle with ID  not found. not found." + "'", str8, "Vehicle with ID Vehicle with ID  not found. not found.");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Vehicle with ID hi! not found." + "'", str10, "Vehicle with ID hi! not found.");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.\".\".\". not found." + "'", str12, "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"hi!\". not found.\". not found.\".\".\". not found.");
        org.junit.Assert.assertNotNull(vehicleList13);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test1499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1499");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        int int1 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "Vehicle with ID  not found.", 100);
        java.util.List<org.example.Vehicle> vehicleList6 = rentalSystem0.getVehicles();
        int int7 = rentalSystem0.getAvailableVehicleCount();
        int int8 = rentalSystem0.getAvailableVehicleCount();
        java.util.List<org.example.Customer> customerList9 = rentalSystem0.getCustomers();
        java.util.List<org.example.Customer> customerList10 = rentalSystem0.getCustomers();
        java.lang.String str14 = rentalSystem0.rentVehicle("Vehicle with ID hi! not found.", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".\". not found.", (int) '4');
        java.lang.String str18 = rentalSystem0.rentVehicle("No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\".", "Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\".\". not found.", 100);
        java.lang.Class<?> wildcardClass19 = rentalSystem0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(vehicleList6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(customerList9);
        org.junit.Assert.assertNotNull(customerList10);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Vehicle with ID Vehicle with ID hi! not found. not found." + "'", str14, "Vehicle with ID Vehicle with ID hi! not found. not found.");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\". not found." + "'", str18, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\". not found.");
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test1500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1500");
        org.example.RentalSystem rentalSystem0 = new org.example.RentalSystem();
        java.util.List<org.example.Vehicle> vehicleList1 = rentalSystem0.getVehicles();
        java.lang.String str5 = rentalSystem0.rentVehicle("", "hi!", 10);
        java.util.List<org.example.Customer> customerList6 = rentalSystem0.getCustomers();
        rentalSystem0.addCustomer("No vehicles match the keyword \"Vehicle with ID  not found.\".", "hi!");
        int int10 = rentalSystem0.getAvailableVehicleCount();
        java.lang.String str12 = rentalSystem0.returnVehicle("Vehicle with ID Vehicle with ID  not found. not found.");
        java.lang.String str14 = rentalSystem0.searchVehicle("Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.");
        java.util.List<org.example.Customer> customerList15 = rentalSystem0.getCustomers();
        rentalSystem0.addVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID ID: Vehicle with ID  not found., Model: Vehicle with ID hi! not found., Type: Vehicle with ID Vehicle with ID hi! not found. not found., Daily Rate: $52.0, Status: Available\n not found. not found.\". not found.\".", "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"No vehicles match the keyword \"No vehicles match the keyword \"hi!\".\".\". not found.\". not found.", "Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found. not found.\". not found. not found.", (double) 'a');
        java.lang.String str22 = rentalSystem0.returnVehicle("No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\". not found.\".");
        org.junit.Assert.assertNotNull(vehicleList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Vehicle with ID  not found." + "'", str5, "Vehicle with ID  not found.");
        org.junit.Assert.assertNotNull(customerList6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found." + "'", str12, "Vehicle with ID Vehicle with ID Vehicle with ID  not found. not found. not found.");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\"." + "'", str14, "No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"hi!\". not found. not found.\".");
        org.junit.Assert.assertNotNull(customerList15);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\". not found.\". not found." + "'", str22, "Vehicle with ID No vehicles match the keyword \"Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID Vehicle with ID No vehicles match the keyword \"Vehicle with ID Vehicle with ID  not found. not found.\". not found. not found. not found.\". not found. not found.\". not found.\". not found.");
    }
}

